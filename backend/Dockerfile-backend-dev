# syntax = docker/dockerfile:experimental
FROM ubuntu:20.04

RUN groupadd --gid 1000 node \
    && useradd --uid 1000 --gid node --shell /bin/bash --create-home node

RUN apt-get update \
    && apt-get -y install python3.8 libpq-dev python3-dev python3-pip curl

RUN pip3 install --upgrade pip

ENV NODE_VERSION=16.16.0

RUN mkdir /home/.nvm
ENV NVM_DIR=/home/.nvm

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash

RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION} && \
    . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION} && \
    . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}

ENV PATH="/home/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN node --version && npm --version
RUN chown -R node:node /home/.nvm

WORKDIR /usr/crowd/backend
COPY --chown=node:node . .

RUN cd ./src/serverless/microservices/python \
    && pip3 install --no-cache-dir -r requirements.dev.txt \
    && pip3 install --no-cache-dir -r requirements.txt \    
    && cd /usr/crowd/backend/src/serverless/dbOperations && npm i \
    && cd ../integrations && npm i \
    && cd ../microservices/nodejs && npm i \
    && cd ../python/serverless && npm i \
    && cd /usr/crowd/backend \
    && npm i
