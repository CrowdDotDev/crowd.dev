components:
  schemas:
    CommunityMember:
      type: object
      allOf:
        - $ref: '#/components/schemas/CommunityMemberNoId'
      properties:
        id:
          description: The unique identifier for a member of your community.

    # We need this helper to add the communityMember as well
    ActivityHelper:
      type: object
      required:
        - communityMemberId
      properties:
        communityMemberId:
          description: The unique identifier for the member that performed the activity.

    Activity:
      type: object
      allOf:
        - $ref: '#/components/schemas/ActivityNoId'
        - $ref: '#/components/schemas/ActivityHelper'
      properties:
        id:
          description: The unique identifier for an activity.

    Tag:
      type: object
      allOf:
        - $ref: '#/components/schemas/TagNoId'
      properties:
        id:
          description: The unique identifier for a tag.

    Conversation:
      allOf:
        - $ref: '#/components/schemas/ConversationNoId'
      properties:
        id:
          description: Unique identifier of the conversation
          type: string
        activities:
          description: List of IDs of the activities in the conversation
          type: array
          items:
            type: string

    CommunityMemberList:
      description: List and count of community members.
      type: object
      properties:
        rows:
          description: List of community members
          type: array
          items:
            $ref: '#/components/schemas/CommunityMember'
        count:
          description: Count
          type: integer
      xml:
        name: CommunityMembersList

    ActivityList:
      description: List and count of activities.
      type: object
      properties:
        rows:
          description: List of activities
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        count:
          description: Count
          type: integer
      xml:
        name: ActivitiesList

    TagList:
      description: List and count of tags.
      type: object
      properties:
        rows:
          description: List of tags
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        count:
          description: Count
          type: integer
      xml:
        name: TagsList

    ConversationList:
      type: object
      properties:
        count:
          type: integer
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Conversation'

    Automation:
      type: object
      required:
        - id
        - type
        - tenantId
        - trigger
        - settings
        - state
        - createdAt
      properties:
        id:
          description: Automation unique ID
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/AutomationType'
        tenantId:
          description: Automation tenant unique ID
          type: string
          format: uuid
        trigger:
          $ref: '#/components/schemas/AutomationTrigger'
        settings:
          $ref: '#/components/schemas/AutomationSettings'
        state:
          $ref: '#/components/schemas/AutomationState'
        createdAt:
          description: When was automation created
          type: string
          format: date-time
        lastExecutionAt:
          description: When was automation last executed
          type: string
          format: date-time
        lastExecutionState:
          description: State of the last automation execution
          $ref: '#/components/schemas/AutomationExecutionState'
        lastExecutionError:
          description: Error information if last automation execution failed
          type: object

    AutomationPage:
      type: object
      required:
        - rows
        - count
        - offset
        - limit
      properties:
        rows:
          description: Array of automations that were fetched
          type: array
          items:
            $ref: '#/components/schemas/Automation'
        count:
          description: How many total automations there are
          type: integer
        offset:
          description: What offset was used when preparing this response
          type: integer
        limit:
          description: What limit was used when preparing this response
          type: integer

    AutomationExecution:
      type: object
      required:
        - id
        - automationId
        - state
        - executedAt
        - eventId
        - payload
      properties:
        id:
          description: Automation execution unique ID
          type: string
          format: uuid
        automationId:
          description: Automation unique ID
          type: string
          format: uuid
        state:
          description: Automation execution state
          $ref: '#/components/schemas/AutomationExecutionState'
        error:
          description: If execution was not successful this object will contain error information
          type: object
        executedAt:
          description: Automation execution timestamp
          type: string
          format: date-time
        eventId:
          description: Unique ID of the event that triggered this automation execution.
          type: string
        payload:
          description: Payload that was sent when this execution was processed
          type: object

    AutomationExecutionPage:
      type: object
      required:
        - rows
        - count
        - offset
        - limit
      properties:
        rows:
          description: Automation Execution List
          type: array
          items:
            $ref: '#/components/schemas/AutomationExecution'
        count:
          description: How many items are there in total
          type: integer
        offset:
          description: What offset was used when preparing this response
          type: integer
        limit:
          description: What limit was used when preparing this response
          type: integer
