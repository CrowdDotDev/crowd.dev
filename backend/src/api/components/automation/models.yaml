components:
  schemas:
    # defines automation type enum
    AutomationType:
      description: Automation type
      type: string
      enum: ['webhook']

    # defines automation state enum
    AutomationState:
      description: Automation state
      type: string
      enum: ['active', 'disabled']

    # defines automation triggers
    AutomationTrigger:
      description: What will trigger an automation
      type: string
      enum: ['new_activity', 'new_member']

    # defines automation execution state
    AutomationExecutionState:
      description: What was the state of the automation execution
      type: string
      enum: ['success', 'error']

    # defines webhook automation settings
    WebhookAutomationSettings:
      description: Settings used by automation with type webhook
      type: object
      required:
        - url
      properties:
        url:
          description: URL to POST webhook data to
          type: string
          format: uri

    # defines new activity triggered automation settings
    NewActivityAutomationSettings:
      description: Settings used by automation that is triggered by new activities
      type: object
      required:
        - types
        - platforms
        - keywords
        - teamMemberActivities
      properties:
        types:
          description: 'If activity type matches any of these we should trigger this automation'
          type: array
          items:
            type: string
        platforms:
          description: 'If activity came from any of these platforms we should trigger this automation'
          type: array
          items:
            type: string
        keywords:
          description: 'If activity content contains any of these keywords we should trigger this automation'
          type: array
          items:
            type: string
        teamMemberActivities:
          description: 'If activity came from any of our team members - should we trigger automation or not?'
          type: boolean

    # defines automation settings object
    AutomationSettings:
      description: Settings based on automation type and trigger - you need to provide union object of both automation type based settings and trigger based settings
      type: object
      anyOf:
        - $ref: '#/components/schemas/WebhookAutomationSettings'
        - $ref: '#/components/schemas/NewActivityAutomationSettings'

    # Responses
    Automation:
      type: object
      required:
        - id
        - type
        - tenantId
        - trigger
        - settings
        - state
        - createdAt
      properties:
        id:
          description: Automation unique ID
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/AutomationType'
        tenantId:
          description: Automation tenant unique ID
          type: string
          format: uuid
        trigger:
          $ref: '#/components/schemas/AutomationTrigger'
        settings:
          $ref: '#/components/schemas/AutomationSettings'
        state:
          $ref: '#/components/schemas/AutomationState'
        createdAt:
          description: When was automation created
          type: string
          format: date-time
        lastExecutionAt:
          description: When was automation last executed
          type: string
          format: date-time
        lastExecutionState:
          description: State of the last automation execution
          $ref: '#/components/schemas/AutomationExecutionState'
        lastExecutionError:
          description: Error information if last automation execution failed
          type: object

    # Responses
    AutomationPage:
      type: object
      required:
        - rows
        - count
        - offset
        - limit
      properties:
        rows:
          description: Array of automations that were fetched
          type: array
          items:
            $ref: '#/components/schemas/Automation'
        count:
          description: How many total automations there are
          type: integer
        offset:
          description: What offset was used when preparing this response
          type: integer
        limit:
          description: What limit was used when preparing this response
          type: integer

    AutomationExecution:
      type: object
      required:
        - id
        - automationId
        - state
        - executedAt
        - eventId
        - payload
      properties:
        id:
          description: Automation execution unique ID
          type: string
          format: uuid
        automationId:
          description: Automation unique ID
          type: string
          format: uuid
        state:
          description: Automation execution state
          $ref: '#/components/schemas/AutomationExecutionState'
        error:
          description: If execution was not successful this object will contain error information
          type: object
        executedAt:
          description: Automation execution timestamp
          type: string
          format: date-time
        eventId:
          description: Unique ID of the event that triggered this automation execution.
          type: string
        payload:
          description: Payload that was sent when this execution was processed
          type: object

    AutomationExecutionPage:
      type: object
      required:
        - rows
        - count
        - offset
        - limit
      properties:
        rows:
          description: Automation Execution List
          type: array
          items:
            $ref: '#/components/schemas/AutomationExecution'
        count:
          description: How many items are there in total
          type: integer
        offset:
          description: What offset was used when preparing this response
          type: integer
        limit:
          description: What limit was used when preparing this response
          type: integer
