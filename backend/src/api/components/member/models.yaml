components:
  schemas:
    # defines a member, excluding the ID
    MemberNoId:
      description: A member of your community.
      type: object
      required:
        - username

      properties:
        username:
          description: >-
            Usernames of the member in each platform. Exactly one for each platform in which the member is active.
            <br/>Example: ```{ github: 'iamgilfoyle', discord: 'gilfoyle '}```
          type: object
          additionalProperties: true
        displayName:
          description: UI friendly name of the member
          type: string

        email:
          description: Email address of the member
          type: string
        joinedAt:
          description: Date of joining the community
          type: string
          format: date-time
        activeOn:
          description: List of platforms the member is active on.
          type: array
          items:
            type: string
        identities:
          description: List of platforms the member has identities in.
          type: array
          items:
            type: string
        activityCount:
          description: Number of activities member has.
          type: integer
        averageSentiment:
          description: Averge sentiment of member's activities.
          type: number
        lastActivity:
          description: The last activity of a member
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Activity'

        score:
          description: Engagement score of the member. From 0 to 10. Set -1 for not yet calculated.
          type: number
        reach:
          description: >-
            Reach of the member in each platform. At most one for each platform in which the member is active.
            <br/>Example: ```{ github: 10, twitter: 250, total: 260 }```
          type: object
          properties:
            total:
              description: Sum of all the platform reaches.
              type: number
          additionalProperties: true
        attributes:
          description: >-
            Attributes associated to the member. Each attribute must be an object with it's value for each platform, and a default. 
            <br/>For example: ```{"location": {"github": "San Francisco", "twitter": "California", "default": "San Francisco"}}```
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MemberAttribute'
        createdAt:
          description: Date the member was created
          type: string
          format: date-time
        updatedAt:
          description: Date the member was last updated
          type: string
          format: date-time

      xml:
        name: Member

      # Member attribute
    MemberAttribute:
      description: >-
        A key for each platform. 
        <br/>- ```default``` is the value that will be displayed by default in the app
        <br/>- ```custom``` is the value that will be displayed if the user has set a custom value for the attribute
      type: object
      properties:
        default:
          description: Default value for the attribute. This is set automatically according to <a target="_blank" href="https://crowd.dev">crowd.dev</a> rules.
          type: string
        custom:
          description: Custom value for the attribute. This is optionally set by the user. It will always be picked as the default when sent.
          type: string
      additionalProperties: true
