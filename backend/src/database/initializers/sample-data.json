[
  {
    "username": { "discord": "considerate snewkes" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-18T17:47:52.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId1",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId2",
        "attributes": {
          "url": "",
          "body": "Laboris cillum aliquip cupidatat dolor nisi culpa. Occaecat fugiat sunt anim.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "considerate snewkes" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Mannheim, Germany" },
      "bio": {
        "github": "Member of the @vuejs core team, hobby frontend hacker. Not a  dev by profession."
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "amazing horatio" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-28T15:07:16.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId3",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId4",
        "attributes": {
          "url": "",
          "body": "Officia quis aute. Consequat qui qui reprehenderit. Consequat velit nostrud quis excepteur consectetur.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "amazing horatio" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Singapore" },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "great writer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-31T13:04:26.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId5",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId6",
        "attributes": {
          "url": "",
          "body": "Lorem ipsum eu adipisicing in deserunt aliqua voluptate. Aute dolor laboris. Lorem ad fugiat. Enim labore duis deserunt labore commodo.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId7",
        "attributes": {
          "url": "",
          "body": "Velit veniam aliquip aute commodo Lorem esse. Nisi exercitation anim reprehenderit consectetur labore. Dolore mollit et id sunt ea. Fugiat qui adipisicing proident officia dolor et.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId8",
        "attributes": {
          "url": "",
          "body": "Ea Lorem voluptate veniam sit. Culpa deserunt est cupidatat mollit. Nostrud velit commodo sunt in qui.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ", "twitter": "https://twitter.com/posva" },
      "name": { "github": "great writer" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Paris" },
      "bio": {
        "github": "Member of the @vuejs core team\r\nSpeaker, trainer.\r\nFrom 🇪🇸, lives in 🇫🇷"
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "diligent barley" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-24T08:24:35.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId9",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId10",
        "attributes": {
          "url": "",
          "body": "Sunt reprehenderit officia id voluptate laboris. Elit aute Lorem officia.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId11",
        "attributes": {
          "url": "",
          "body": "Laboris nostrud nostrud cupidatat. Cupidatat irure tempor ea irure. Dolor excepteur irure excepteur enim cupidatat. Est elit velit id elit.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId12",
        "attributes": {
          "url": "",
          "body": "Voluptate commodo veniam enim irure. In dolore esse eu nisi labore sunt qui.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": {
        "github": "https://github.com/CrowdHQ",
        "twitter": "https://twitter.com/edison11051"
      },
      "name": { "github": "diligent barley" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "China" },
      "bio": {
        "github": "Member of @vuejs. Full Stack Developer. Love OpenSource. Interested in @vuejs / @dotnet / @nodejs / TypeScript"
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "favorable slowboy" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-06T08:27:36.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId13",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId14",
        "attributes": {
          "url": "",
          "body": "Voluptate amet nisi dolor nulla in occaecat consequat. Aliqua velit minim esse Lorem mollit aute qui.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId15",
        "attributes": {
          "url": "",
          "body": "Dolore voluptate elit id est occaecat incididunt elit. Id esse cillum. Consectetur qui quis exercitation. Enim ut qui culpa. Irure labore esse.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "favorable slowboy" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Hong Kong" },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "perfect capitalist" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-29T21:03:17.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId16",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId17",
        "attributes": {
          "url": "",
          "body": "Et enim nulla reprehenderit irure ea. Minim ea occaecat ullamco enim ullamco enim. Nulla nisi laboris est cillum pariatur. Minim quis velit enim dolore.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId18",
        "attributes": {
          "url": "",
          "body": "Enim pariatur Lorem enim. Cupidatat velit do. Est commodo irure.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId19",
        "attributes": {
          "url": "",
          "body": "Amet laborum cillum laborum laborum excepteur. Velit non duis.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "perfect capitalist" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "diligent engineer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-09-21T15:51:52.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId20",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId21",
        "attributes": {
          "url": "",
          "body": "Consequat Lorem occaecat laborum minim aute. Ut reprehenderit qui adipisicing ea proident velit in. Mollit incididunt Lorem ex tempor nulla ea.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId22",
        "attributes": {
          "url": "",
          "body": "Officia anim est aliquip laboris qui mollit. Eu nulla ut exercitation aliquip nulla officia consectetur. Ad dolore amet labore officia aliqua. Aliqua fugiat esse ut anim. Deserunt aliqua ad nulla aliqua.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId23",
        "attributes": {
          "url": "",
          "body": "Labore et in quis pariatur nostrud elit. Voluptate id voluptate.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId24",
        "attributes": {
          "url": "",
          "body": "Voluptate quis qui enim veniam minim Lorem aliquip. Aliquip minim labore dolore enim esse aute.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "diligent engineer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "fortuitous cleaver" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-10T07:56:25.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId25",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId26",
        "attributes": {
          "url": "",
          "body": "Duis eiusmod aute aliqua deserunt labore voluptate nulla. Magna cupidatat excepteur. Esse reprehenderit incididunt amet eu qui ipsum quis.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId27",
        "attributes": {
          "url": "",
          "body": "Cillum exercitation tempor consectetur cupidatat. Aliqua deserunt est quis labore. Ullamco sit velit laborum ad culpa incididunt occaecat. Ullamco nostrud sunt velit labore amet irure. Incididunt do occaecat incididunt.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "fortuitous cleaver" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "optimistic technician" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-11-06T11:52:41.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId28",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId29",
        "attributes": {
          "url": "",
          "body": "Mollit minim minim nulla. Aliquip id irure amet pariatur. Non in non dolor ut laboris incididunt quis. Eiusmod qui commodo occaecat.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId30",
        "attributes": {
          "url": "",
          "body": "Dolore laborum sint amet in adipisicing pariatur. Pariatur excepteur adipisicing ut minim ea.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId31",
        "attributes": {
          "url": "",
          "body": "Reprehenderit amet eu ex sit. Amet culpa eiusmod velit pariatur. Nisi aliquip aliquip est fugiat.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "optimistic technician" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "成都" },
      "bio": { "github": "⊙﹏⊙‖∣° 🐟🐟🐟" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "discord": "hard working" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-04T11:53:08.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "joined_guild",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId32",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId33",
        "attributes": {
          "url": "",
          "body": "Proident sint reprehenderit laborum. Pariatur sit ad eiusmod. Proident elit est excepteur amet ad nulla dolore.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId34",
        "attributes": {
          "url": "",
          "body": "Sunt voluptate ea aliquip. Ex exercitation pariatur excepteur. Cillum non proident ex est consectetur. Est ut sit aliqua aute reprehenderit. Do ex nulla cillum anim tempor.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId35",
        "attributes": {
          "url": "",
          "body": "Est quis ad. Officia excepteur nulla cillum enim proident consectetur. Irure amet labore irure nulla voluptate consectetur. Eu nisi ad elit eiusmod incididunt. Exercitation enim mollit Lorem tempor.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "hard working" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "beijing" },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "smart lady", "discord": "smart lady" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-30T14:28:21.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-13T09:27:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId36",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5415#issuecomment-1037958442",
          "body": "@M1CK431 Thanks for the report. That's my bad, I did not think of that edge case. I was going to fix it, but @lidlanca was faster and already opened a PR with a potential fix. I'll let the rest of the team approve and merge it, and then we'll be able to release a fixed version.",
          "repo": "https://github.com/vuejs/core",
          "title": "vue-apollo broken on 3.2.31 (was perfectly working on 3.2.30)",
          "parent_url": "https://github.com/vuejs/core/issues/5415"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-12-23T16:29:35.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId37",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5161#issuecomment-1000410658",
          "body": "Rebased on top of #5162 to have a proper CI result",
          "repo": "https://github.com/vuejs/core",
          "title": "types: relax TextareaHTMLAttributes.value type requirement",
          "parent_url": "https://github.com/vuejs/core/pull/5161"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-23T16:27:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId38",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5162",
          "body": "This was introduced by the refactoring in fef191f\nSee https://github.com/vuejs/vue-next/runs/4619901150?check_suite_focus=true for an example of build failure",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore: remove obsolete test snapshot"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-12-23T16:13:15.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId39",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5161",
          "body": "Similar to 93949ed and 6171aec but this time to allow textarea to have a v-model with a null value for example.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types: relax TextareaHTMLAttributes.value type requirement"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-12-13T17:06:41.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId40",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5100",
          "body": "Also adds unit tests for these new transforms",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(reactivity-transform): update check to catch toRef and customRef"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-25T10:04:23.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId41",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4964#issuecomment-979052524",
          "body": "This was spotted in VTU, as props are rendered as attributes when using shallow mount. We can work around it in VTU, but I was wondering if the cleanest way was not to fix it in core.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-dom): handle Symbol attributes",
          "parent_url": "https://github.com/vuejs/core/pull/4964"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-18T09:30:19.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId42",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4964",
          "body": "Currently, passing a Symbol to an attribute throws in runtime-dom with:\nTypeError: Failed to execute 'setAttribute' on 'Element': parameter 2 is a symbol, which cannot be converted to a string.\n\nThis is because the underlying library used for conversion does not handle Symbol (see jsdom/webidl-conversions#14).\nThis issue cascades into VTU-next as shallowMount attempts to write props values as attributes.\nSee vuejs/test-utils#1076 for more context.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-dom): handle Symbol attributes"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-17T15:56:35.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId43",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4958",
          "body": "Jobs are currently failing with:\n> @3.2.22 test /home/runner/work/vue-next/vue-next\n> run-s test-unit test-e2e \"--ci\"\n\nERROR: Invalid Option: --ci",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore: fix ci build"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-17T15:48:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId44",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4957",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "refactor: use refTransform instead of deprecated refSugar"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-09-02T09:57:38.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId45",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4216#issuecomment-911479159",
          "body": "Now that #4472 landed, this PR is rebased on master and ready to review.\nThe fix is intended to unblock the migration of the ecosystem to jest 27, but it also fixes a more general issue with updating proxies via Object.defineProperty.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): allow spying on proxy methods",
          "parent_url": "https://github.com/vuejs/core/pull/4216"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-30T07:23:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId46",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4216#issuecomment-908100916",
          "body": "This is now rebased on top of #4472\nWould be glad to hear your thoughts @yyx990803 as landing this would unblock the ecosystem to move to jest v27",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): allow spying on proxy methods",
          "parent_url": "https://github.com/vuejs/core/pull/4216"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-30T07:12:52.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId47",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4215#issuecomment-908093497",
          "body": "The PR landed in Jest, and was released as v27.1\nPR #4472 updates vue-next to use this new version which fixes the issue, making this PR obsolete",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): allow calling hasOwnProperty on proxy",
          "parent_url": "https://github.com/vuejs/core/pull/4215"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-30T07:11:21.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId48",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4472",
          "body": "Updates jest and ts-jest to v27, as jest v27.1.0 includes a necessary fix to unblock further work on spying issues.\nSee facebook/jest#11721",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(deps): update jest to v27"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-30T07:10:17.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId49",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4471",
          "body": "As some packages rely on the experimental \"stream/web\" package only available in node v16.5+,\nthis commit updates the engines property to reflect that.\nhttps://nodejs.org/en/blog/release/v16.5.0/",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore: set node engine to v16"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-03T07:21:45.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId50",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4215#issuecomment-891602438",
          "body": "Sounds good. I opened facebook/jest#11721 in Jest itself\nLet's see if that lands",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): allow calling hasOwnProperty on proxy",
          "parent_url": "https://github.com/vuejs/core/pull/4215"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-07-30T14:43:17.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId51",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4216",
          "body": "Since Jest v26.6.1, the mock method changed (see this commit facebook/jest@30e8020)  to rely on Object.defineProperty in some cases.\nThis breaks spying on proxy's methods, because even if Jest is properly calling Object.defineProperty, the cached value in the get section of the proxy is never updated, and the spy is in fact never used.\nThis is easily reproducible as vue-next already uses a version of jest with these changes.\nThis is blocking projects (like vue-test-utils-next and vue-cli) to update to recent Jest versions.\nThis commit adds a defineProperty method to the proxy handler, that properly updates the defined value in the cache.\nAgain, the fix is maybe too naive, and I'm happy to update the PR with a better solution.\nedit: the same happens with Vitest",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(runtime-core): allow spying on proxy methods"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-07-30T14:28:21.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId52",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4215",
          "body": "It is currently not possible to call hasOwnProperty on the proxy instance,\nwhich makes it impossible to spy with Jest, as Jest needs to call this method (see https://github.com/facebook/jest/blob/30e802036291f4c9c9fd4feef6faba485df54dd2/packages/jest-mock/src/index.ts#L986)\nThis commit fixes this by properly returning the hasOwnProperty method in the get section of the proxy.\nThere is currently a workaround in vue-test-utils-next that monkey patches the proxy to add the method (see https://github.com/vuejs/vue-test-utils-next/blob/23d3d3e1f4178a87de5023f5255e0623653affdc/src/mount.ts#L493-L495).\nThis is temporarily fine, but developers trying to create spies without using @vue/test-utils will run into the same issue.\nThe proposed fix is obviously very naive: the point was just to get the ball rolling 🙂",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-core): allow calling hasOwnProperty on proxy"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId53",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId54",
        "attributes": {
          "url": "",
          "body": "Nisi duis qui proident. Labore amet nostrud sint ea ea esse.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "smart lady" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": {
        "github": "Angular and Vue contributor\r\n\r\nAuthor of `Become a ninja with Angular` and `Become a ninja with Vue` \r\n\r\nCo-founder and trainer at @Ninja-Squad"
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "persistent  bart", "discord": "persistent  bart" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-01T10:08:26.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-04T04:49:34.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId55",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4519",
          "body": "similar #4517 , have the same problem with defineProps",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "types(compile-sfc): support  `Date` prop type with defineProps"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-03T06:25:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId56",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4506",
          "body": "fix #4505",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compile-sfc): generate setup prop type format error"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-30T12:54:50.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId57",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4466#issuecomment-908317705",
          "body": "@ygj6 @LongJinCen\ni think there two problems after compiled:\n\nprops type still optional\nthe option type of defineComponent is not overloaded correctly\n\nthat‘s why still fails to compile after incorporating this PR.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(compiler-sfc): setup props type should not be optional when setup default value",
          "parent_url": "https://github.com/vuejs/core/pull/4466"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-28T19:11:59.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId58",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4466",
          "body": "fix #4455",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler-sfc): setup props type should not be optional when setup default value"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-16T14:55:57.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId59",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4353",
          "body": "fix #4352",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler-sfc): defineProps generates unnecessary array of same types"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-14T12:13:02.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId60",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4336",
          "body": "remove unnecessary type assertions",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(types): remove unnecessary type assertions"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-11T05:42:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId61",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4290#issuecomment-896517176",
          "body": "Can you add a test case in https://github.com/vuejs/vue-next/blob/master/test-dts/defineComponent.test-d.tsx ?\n\n@yyx990803  done~",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): tsx wrong emit handler return type",
          "parent_url": "https://github.com/vuejs/core/pull/4290"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-10T20:15:04.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId62",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4223#issuecomment-896288891",
          "body": "Hi. @yyx990803 maybe this can merged 😊",
          "repo": "https://github.com/vuejs/core",
          "title": "chore(types): export UnwrapNestedRefs type",
          "parent_url": "https://github.com/vuejs/core/pull/4223"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-10T05:07:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId63",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4290",
          "body": "Close #4288",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(types): tsx wrong emit handler return type"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-10T03:24:59.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId64",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4289",
          "body": "Close #4288",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-core): emits return type"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-09T10:18:42.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId65",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4223#issuecomment-895108737",
          "body": "The issue was closed because the vuejs/composition-api fix it, but it also need the support of Vue3\nIn simple terms,There are some usage scenarios that require the UnwrapNestedRefs type when export * from 'vue', such as vue-demi.\n@posva @antfu",
          "repo": "https://github.com/vuejs/core",
          "title": "chore(types): export UnwrapNestedRefs type",
          "parent_url": "https://github.com/vuejs/core/pull/4223"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-03T02:23:09.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId66",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4239",
          "body": "add test case for effectScope",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "test(reactivity): add test case for effectScope"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-08-01T10:08:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId67",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4223",
          "body": "export UnwrapNestedRefs type for use by  third-party libraries that need to use this type, such as vue-demi.\nReason\nThe purpose of this is to fix vueuse issue #648",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "chore(types): export UnwrapNestedRefs type"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId68",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId69",
        "attributes": {
          "url": "",
          "body": "Culpa consequat laboris anim cillum proident. Labore id adipisicing nulla ea. Cupidatat amet nulla ad quis ad.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId70",
        "attributes": {
          "url": "",
          "body": "Consequat exercitation laborum do eu in. Culpa voluptate dolore fugiat duis.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId71",
        "attributes": {
          "url": "",
          "body": "Veniam excepteur minim ipsum nisi anim magna mollit. Ad pariatur tempor eu non culpa consequat. Magna adipisicing commodo quis cupidatat cupidatat magna anim. Sint incididunt aute.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId72",
        "attributes": {
          "url": "",
          "body": "Minim do nisi fugiat minim. Aliquip minim nisi amet esse reprehenderit. Laborum excepteur consequat in. Laborum dolore aliqua.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "persistent  bart" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "super jobling", "twitter": "_justineo", "discord": "super jobling" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-11T23:52:39.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-15T09:42:55.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId73",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5580#issuecomment-1067764341",
          "body": "Closing this as v-model is working as expected here.",
          "repo": "https://github.com/vuejs/core",
          "title": "v-model in input and textarea forms doen't work correctly on several mobile devices",
          "parent_url": "https://github.com/vuejs/core/issues/5580"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-15T08:56:34.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId74",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5586#issuecomment-1067721696",
          "body": "This can be implemented in userland. You can enforce this pattern in your own codebase.\nIf you really want to propose a syntax-level change for Vue, it's better to go through the RFC process to help everybody sort out the pros and cons.\nPs. The number of global HTML attributes (+ aria-* attributes) are rather limited or easy to recognize so I don't think it will cause much confusion.",
          "repo": "https://github.com/vuejs/core",
          "title": "More explicit props",
          "parent_url": "https://github.com/vuejs/core/issues/5586"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-08T09:36:31.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId75",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5544#issuecomment-1061582592",
          "body": "Please report this to https://github.com/vuejs/repl. Thank you!",
          "repo": "https://github.com/vuejs/core",
          "title": "@vue/repl  Crypto problems",
          "parent_url": "https://github.com/vuejs/core/issues/5544"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-04T05:43:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId76",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5516#issuecomment-1058848252",
          "body": "It's expected. You are rerendering the HelloWorld component when you change c and it creates a new object for the formData prop every time.",
          "repo": "https://github.com/vuejs/core",
          "title": "Monitoring props causes an exception to be triggered",
          "parent_url": "https://github.com/vuejs/core/issues/5516"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-03T03:19:00.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId77",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5506#issuecomment-1057625635",
          "body": "你对 <script> 标签的用法是错误的，1. 有 src 就不能写内联代码 2. 初始化代码要放在容器后。",
          "repo": "https://github.com/vuejs/core",
          "title": "CDN 使用",
          "parent_url": "https://github.com/vuejs/core/issues/5506"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-14T07:55:48.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId78",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5382#issuecomment-1038763873",
          "body": "It's actually declared as:\n\n  \n    \n      core/package.json\n    \n    \n        Lines 46 to 48\n      in\n      1574edd\n    \n  \n  \n    \n\n        \n          \n           \"engines\": { \n        \n\n        \n          \n             \"node\": \">=16.5.0\" \n        \n\n        \n          \n           },",
          "repo": "https://github.com/vuejs/core",
          "title": "docs(contributing): change node version",
          "parent_url": "https://github.com/vuejs/core/pull/5382"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-20T08:05:58.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId79",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5295#issuecomment-1017212838",
          "body": "请按要求提交 issue。",
          "repo": "https://github.com/vuejs/core",
          "title": "src.replace is not a function",
          "parent_url": "https://github.com/vuejs/core/issues/5295"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-20T07:46:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId80",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5294#issuecomment-1017200939",
          "body": "() => shown returns a ref so it's truthy. You need to access the value via shown.value. Only those refs which are directly exposed to the template, or inside reactive object will be unwrapped automatically.",
          "repo": "https://github.com/vuejs/core",
          "title": "v-if 当值为函数且结果为 Ref 类型就必为 true，这是不是 bug？",
          "parent_url": "https://github.com/vuejs/core/issues/5294"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-15T02:43:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId81",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5263#issuecomment-1013592358",
          "body": "Your fn is not returning a reactive object so Vue won't automatically unwrap the internal computed refs. You are seeing double quotes as it's the result of stringifying a ref object.",
          "repo": "https://github.com/vuejs/core",
          "title": "函数里面返回一个computed计算后的值，在模板渲染时字符串会多出双引号",
          "parent_url": "https://github.com/vuejs/core/issues/5263"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-11T06:51:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId82",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4782#issuecomment-939735184",
          "body": "The current code is more performant and memory-efficient. Thank you.",
          "repo": "https://github.com/vuejs/core",
          "title": "chore: simplified code",
          "parent_url": "https://github.com/vuejs/core/pull/4782"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-09-18T14:01:37.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId83",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4628#issuecomment-922280780",
          "body": "HTMLSelectElement has a value property.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): remove value on SelectHTMLAttributes.",
          "parent_url": "https://github.com/vuejs/core/pull/4628"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-17T09:54:52.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId84",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4361#issuecomment-900157463",
          "body": "I created a benchmark for this: https://jsbench.me/1fksftarrz/1\nSurprisingly, in Chrome and Safari, a plain for loop with Object.keys is much faster than the original implementation. But in Firefox it's about 60% slower.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): only to iterate props own keys",
          "parent_url": "https://github.com/vuejs/core/pull/4361"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-08-11T23:52:39.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId85",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4315#issuecomment-897236311",
          "body": "The use of plain for loops is intentional for better performance according to earlier benchmarks. Thank you.",
          "repo": "https://github.com/vuejs/core",
          "title": "refactor(vnode): use `for-of` loop instead of a `for` loop",
          "parent_url": "https://github.com/vuejs/core/pull/4315"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId86",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId87",
        "attributes": {
          "url": "",
          "body": "Consequat duis ad consequat ea officia tempor adipisicing. Sunt tempor esse nulla.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId88",
        "attributes": {
          "url": "",
          "body": "Adipisicing sit veniam aute officia nulla cillum. Commodo eu sunt. Ad nisi duis enim. Minim velit et irure ad est. Irure voluptate sit officia.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ", "twitter": "https://twitter.com/_justineo" },
      "name": { "github": "super jobling" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Shanghai, China" },
      "bio": { "github": "For the web." },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": {
      "github": "intuitive bradley",
      "twitter": "pikax_dev",
      "discord": "intuitive bradley"
    },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-20T17:10:37.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-11T08:42:32.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId89",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5555#issuecomment-1064895956",
          "body": "@LinusBorg\nIs a bit different, when you are using a computed it will be passed as a callback (altho in other cases it doesn't - issue with self accessing computed).\nPlayground using actual computed\nSimple example showing that is typescript limitation on callback - Playground:\nconst pet2: Fish | Bird = { swim: '💦' } as Fish | Bird;\n\ndeclare function method<T>(\n  getter: () => T\n): T\n\nconst petIsFish3= method(()=> isFish(pet2))\n// Type error\nif (petIsFish3) {\n  pet2.swim;\n}",
          "repo": "https://github.com/vuejs/core",
          "title": "Computed properties don't work with TypeScript type predicates properly",
          "parent_url": "https://github.com/vuejs/core/issues/5555"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-19T10:21:00.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId90",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5458#issuecomment-1045985102",
          "body": "@pikax could you have a look at this? Also, any idea where to test this? I didn't find any other test-dts tests for these compiler-helpers like createBlock() so not sure where to put them/how to do them.\n\nIt looks good to me, we usually don't have test for internal stuff, since the createBlock would be generated by the compiler, we can add a new test for this, probably for compiler generated stuff.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): ensure createBlock() helper accepts Teleport and Supsense types (fix: #2855)",
          "parent_url": "https://github.com/vuejs/core/pull/5458"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-19T10:16:14.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId91",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5387#issuecomment-1045984380",
          "body": "Is there any risk this might cause type errors in current usage in specific scenarios? In that case we might postpone this to 3.3.\n\nThe scenarios I can think of are if ppl are declaring wrong refs:\nconst comp = ref<ComponentPublicInstance | undefined>() // the correct type should have `null` too!\nconst div = ref<HTMLElement>() // this will fail without `| null` \n\nIf it's fully backwardds-compatible, we an merge it in a patch. I'd assume it is, since people were forced to typecast previously anyways, right?\n\nI think most of the cases ppl use the string version of ref, if you using the typescript version I would expect if errors show up, to be actual errors (aside from | null)",
          "repo": "https://github.com/vuejs/core",
          "title": "types(runtime-core): support typed safe vnode `ref` on the template",
          "parent_url": "https://github.com/vuejs/core/pull/5387"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-15T12:57:55.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId92",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5432",
          "body": "fix #5431",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types(runtime-core): Add `h` overload to support string|Component|DefineComponent types"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-11T15:19:04.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId93",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5408",
          "body": "Type to replace the InstanceType<typeof MyComp>\nThe advantages of using this type, is to also allow other valid typed components to be resolved, because the InstanceType, relies on the Constructor type.\n// plain objects should be supported too, this won't work with `InstanceType`\nconst CompObjectSetup = {\n  props: {\n    test: String\n  },\n  setup() {\n    return {\n      a: 1\n    }\n  }\n}\ndeclare const compObjectSetup: ComponentInstance<typeof CompObjectSetup>\nexpectType<string | undefined>(compObjectSetup.test)\nexpectType<number>(compObjectSetup.a)\nexpectType<ComponentPublicInstance>(compObjectSetup)",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types(runtime-core): ComponentInstance type"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-11T13:53:34.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId94",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5389#issuecomment-1036236113",
          "body": "Having 2 types that do the same thing is not correct, ComponentCustomProperties already exists and is documented.\nFor the\n\nSo the user now the user augments the GlobalProperties correctly and it will propogate to the ComponentCustomProperties without the ref type?\n\nFor the user there's no differences on the usage:\n[REMOVED]\nJust noticed the ComponentCustomProperties doesn't get unwrapped on the component type, that's a bug.\nEDIT: removing incorrect code",
          "repo": "https://github.com/vuejs/core",
          "title": "types(runtime-core): added `ComponentCustomProperties` type to `globalProperties`",
          "parent_url": "https://github.com/vuejs/core/pull/5389"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-09T10:35:31.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId95",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5387",
          "body": "Support typesafe :ref property when used on the template.\nThis PR adds support when you use <video :ref=\"(e)=> e?.playsInline\"> or type safe with used with Ref\nconst videoEl = ref<HTMLVideoElement | null>(null)\n\n// works \n;<video ref={videoEl}/>\n\n// @ts-expect-error HTMLAnchorElement not assigned to HTMLVideoElement\n;<a ref={videoEl}/>\nThis also brings type safe to custom components and functional components, altho functional components will be converted to ComponentPublicInstance<Props> and type safe in that scenario will be a bit trickier for the user.\nconst FuncComp = (props: { foo: string}) => h('div', props.foo);\n\n/* Is not easy to retrieve the correct type when used like a plain function, recommended using ComponentPublicInstance */  \nconst CompInstance = ref<ComponentPublicInstance<{ foo: string}> | null  >();\n\n;<FuncComp :ref={CompInstance}/>\n\n// or \n\n// type is correct when using function\n;<FuncComp :ref={x=> x?.$props.foo}/>\nDefineComponent works out of the box with the expected type being provided, this might cause some problems on some code bases, depending on how the users are declaring their refs, but in most cases it should work\nconst Comp = defineComponent({\n  props: {\n    test: String\n  }\n})\n\n\ndeclare let videoElRef: Ref<HTMLVideoElement | null>\n\n// Recommended way to get the Component type is to get the InstanceType\n\ndeclare let myComp: InstanceType<typeof Comp> | null\ndeclare let myCompRef: Ref<InstanceType<typeof Comp> | null>\ndeclare let anyComp: ComponentPublicInstance | null\n\n\nexpectType<JSX.Element>(<Comp ref={e => (myComp = e)} />)\nexpectType<JSX.Element>(<Comp ref={myCompRef} />)\nexpectType<JSX.Element>(<Comp ref={e => (anyComp = e)} />)",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types(runtime-core): support typed safe vnode `ref` on the template"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-12-12T09:29:49.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId96",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5089#issuecomment-991862952",
          "body": "This would technically be a (type) breaking change though, it would break existing apps using const key: InjectionKey<string> = Symbol();?\n\nYes",
          "repo": "https://github.com/vuejs/core",
          "title": "types(runtime-core): Allow InjectionKey to be used as a valid PropertyKey",
          "parent_url": "https://github.com/vuejs/core/pull/5089"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-12-10T10:31:52.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId97",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5089",
          "body": "This allows the InjectionKey to be used as a PropertyKey, useful for the OptionsAPI.\nconst key = Symbol() as InjectionKey<number>\n\ndefineComponent({\n provide: {\n   // this now works\n   [key]: 'foo' \n } \n}\nThis also affects VTU, since the user needs to provide it's own overrides if needed:\nconst colorKey = Symbol() as InjectionKey<string>\n\n// before \nmount(A, { globals: { provide: { [colorKey as symbol]: ref('#999999') } } \n\n// after : No need to cast the symbol\nmount(A, { globals: { provide: { [colorKey]: ref('#999999') } } \nThere's a small issue that this change brings, with this change a Symbol cannot be inferred as an InjectionKey\n// before worked\nconst key: InjectionKey<string> = Symbol(); // worked because `InjectionKey` extended `Symbol`\n\n// after \nconst key = Symbol() as InjectionKey<string>; // it need to be changed to a more lenient casting\nThis should lay down some work to support typed injections on the defineComponent when using Options API\nRef: microsoft/TypeScript#46956",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types(runtime-core): Allow InjectionKey to be used as a valid PropertyKey"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-09-02T09:27:05.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId98",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4482#issuecomment-911447835",
          "body": "@yyx990803 fixed the issues with h the reason why it wasn't accepting an arbitrary onXXX was because the onXXX was having a type of undefined instead of function\nI used catch(e :any) because the option useUnknownInCatchVariables was failing the api-extractor on test-dts.\nWhat's missing now is fixing the tests which relied on namespaceURI which was removed",
          "repo": "https://github.com/vuejs/core",
          "title": "build(deps-dev): bump typescript from 4.3.5 to 4.4.2",
          "parent_url": "https://github.com/vuejs/core/pull/4482"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-08-28T15:26:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId99",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4465",
          "body": "This PR aims to refactor DefineComponent to merge it with Component type\nBecause this will break the prev DefineComponent I've merged a few PR into this one\nMerged PR\n#2164\n#2693\n#3399\n#2494",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "types(defineComponent): DefineComponent refactor"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-20T17:10:37.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId100",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4405",
          "body": "fix #4342",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "types(PropType): Allow `undefined` function to be used on `PropType`"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId101",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId102",
        "attributes": {
          "url": "",
          "body": "Tempor in voluptate ea pariatur minim ex exercitation. Magna nostrud dolor aliqua sint. Proident ea cupidatat duis anim eu tempor. Do nostrud voluptate esse est ad.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId103",
        "attributes": {
          "url": "",
          "body": "Sit dolore nulla amet. Do quis labore pariatur laborum cillum irure.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId104",
        "attributes": {
          "url": "",
          "body": "Occaecat dolor aliqua. Exercitation commodo eiusmod. Consectetur officia aute. In minim consequat. In Lorem minim eu quis.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ", "twitter": "https://twitter.com/pikax_dev" },
      "name": { "github": "intuitive bradley" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "London" },
      "bio": {
        "github": "Fullstack developer, interested in @vuejs, @dotnet and @nodejs.\r\nTypescript 🧙‍♂️ \r\nConsultant 🕵️‍♂️"
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "sincere filer", "discord": "sincere filer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-02-01T07:23:37.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issues-opened",
        "timestamp": "2022-03-13T17:03:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId105",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5578",
          "body": "Version\n3.2.31\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nI know that refs or computed-s inside objects and arrays don't get unwrapped in the templates.\nAnd that's exactly the issue with the code below:\n<script setup>\nimport { computed, ref } from \"vue\";\n\nconst computedInsideArray = [computed(() => \"text\")];\nconst refInsideObject = { val: ref(\"text\") };\n</script>\n\n<template>\n  <div>{{ computedInsideArray[0] }}</div> <!-- \"text\" >\n  <div>{{ refInsideObject.val }}</div> <!-- \"text\" >\n</template>\nThe solution is to just use .value\nWhat is expected?\nSince accessed element is an object which contains a .value property, an object should be rendered:\n{ \"value\": \"text\" }\nWhat is actually happening?\n\"text\" (with quotes) is rendered.\n\nIn many cases, it can be easy to forget or miss adding .value. And if that happens when a string is returned inside a computed or a ref inside an object or array, it might be difficult to debug since you are going to see the string you want, but inside quotes. And intuitively you might think this is a bug or an issue related to the quotes.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Missleading rendering: Ref or computed inside non-wrappable variables (objects, arrays) which returns a string"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-20T13:34:43.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId106",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5462#issuecomment-1046239476",
          "body": "@posva can you explain more about the ^ in front of the attribute trick?",
          "repo": "https://github.com/vuejs/core",
          "title": "translate=\"no\" in Vue3 is not work",
          "parent_url": "https://github.com/vuejs/core/issues/5462"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-19T14:59:48.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId107",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5446#issuecomment-1046036794",
          "body": "@LinusBorg thank you for the detailed explanation. Make sense to me now why this is a limitation. Have a nice weekend",
          "repo": "https://github.com/vuejs/core",
          "title": "Scoped style does not work with multi-root child components",
          "parent_url": "https://github.com/vuejs/core/issues/5446"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-19T14:21:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId108",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5446#issuecomment-1046027981",
          "body": "@LinusBorg from the comments is a bit unclear if you answered or understood this issue with multi-root components so I am going to give it a try to ask again because in my view this is a bug.\nComponent with multi-root nodes cannot be styled from parent with :deep() selector\nSee the demo on Stackblitz\nIf we have a HelloWorld.vue component with this code:\n<template>\n  <div class=\"hello-world\">Hi</div>\n  <div class=\"hello-world-2\" v-bind=\"$attrs\">Hey</div>\n</template>\nThen from the parent component, we can't style it within scoped style with :deep() selector nor with by accessing a class we add in the parent:\n<script setup>\nimport HelloWorld from './components/HelloWorld.vue';\n</script>\n\n<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n  <HelloWorld class=\"hello\" />\n</template>\n\n<style scoped>\n.hello {\n  background: blue;\n  color: white;\n}\n\n:deep(.hello) {\n  background: blue;\n  color: white;\n}\n\n:deep(.hello-world-2) {\n  background: blue;\n  color: white;\n}\n</style>\nSo as you can see above, none of the 3 ways works to style the elements of the child component.\nThis fails only when mutli-root nodes are used in the child component.\nTrying to understand your answers\nMaybe there is something that I am missing here but how can this behavior be by design? Since multi-root components are supported, why do we have to wrap child components in order to enable :deep() styling?",
          "repo": "https://github.com/vuejs/core",
          "title": "Scoped style does not work with multi-root child components",
          "parent_url": "https://github.com/vuejs/core/issues/5446"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-18T19:24:46.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId109",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5453#issuecomment-1045057328",
          "body": "if you want to use confusing names for components and variables, you can do that\n\n@lidlanca I am not using confusing names. If you have read my comments, I said that in my original code I have a global component named BottomSheet and I have a variable bottomSheet which is a ref. And that's when I got the error.\nAfter I figured out that the issue was the ref and global component naming, I tried to reproduce the issue in a simple way using another global component.\nIn my project I use Quasar and all components start with q- so used QRadio component with a qRadio ref and I saw that indeed the issue is due to the naming.\n\nPersonally, I don't have a problem living with that \"limitation\"/\"behavior\" but I thought it would be helpful to open an issue. If anyone runs into this, at least there is an issue about it.\n\nits not rare\n\n@LinusBorg said:\n\n\"is the first time in my almost daily interaction with users that this came up as an issue\"\n\nso it seems like a rare case this can happen.",
          "repo": "https://github.com/vuejs/core",
          "title": "Ref conflicts with Global components: Invalid vnode type when creating vnode: .",
          "parent_url": "https://github.com/vuejs/core/issues/5453"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-18T16:21:39.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId110",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5390#issuecomment-1044783386",
          "body": "Thank you @LinusBorg",
          "repo": "https://github.com/vuejs/core",
          "title": "Duplicate \"container element\"s",
          "parent_url": "https://github.com/vuejs/core/issues/5390"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-18T15:27:24.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId111",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5390#issuecomment-1044701963",
          "body": "@LinusBorg so if App.vue has a single root element we will end up having 2 container elements and there is no way to have just one?\nThanks for the links you referenced, but I can't really understand how can I have only one root element and that being from App.vue",
          "repo": "https://github.com/vuejs/core",
          "title": "Duplicate \"container element\"s",
          "parent_url": "https://github.com/vuejs/core/issues/5390"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-18T11:35:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId112",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5453",
          "body": "Version\n3.2.31\nReproduction link\nstackblitz.com\nSteps to reproduce\nI have created a global component named QRadio as you can see in main.js.\nIn App.vue, I use that component but I am also trying to create a ref to pass a reactive value to that component.\nIt seems that I can't use qRadio as a ref name because it somehow conflicts with the Global component.\nWhat is expected?\nThe name of the ref should not conflict with the name of the global component\nWhat is actually happening?\nI get an error: Invalid vnode type when creating vnode: .\n\nIf I change the name qRadio of the ref then everything works",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Ref conflicts with Global components: Invalid vnode type when creating vnode: ."
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-09T14:58:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId113",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5390",
          "body": "Version\n3.2.30\nReproduction link\nstackblitz.com\nSteps to reproduce\nIn Vue 2 when we wrap things in #app we don't get 2 container elements.\nIn Vue 3 though, we do.\nCheck Vue 2 project: https://codesandbox.io/s/reverent-tdd-4hs4j?file=/src/App.vue\nCheck Vue 3 project: https://stackblitz.com/edit/vitejs-vite-jnq5k4?file=src/App.vue\nVue 2 screenshot:\n\nVue 3 screenshot:\n\nNotice the 2 container elements with id app in Vue 3 version\nWhat is expected?\nVue 2 and Vue 3 should both render one container element\nWhat is actually happening?\nIn Vue 3 2 nested container elements are rendered\n\nI know that in Vue 3 we can have multiple root elements, but I think the container elements functionality should be the same in Vue 3.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Duplicate \"container element\"s"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-01T08:04:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId114",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5349#issuecomment-1026569213",
          "body": "Ahh nvm, I found out that I have to use defineAsyncComponent to make it work:\n  computed: {\n    dynamicComponent() {\n      return defineAsyncComponent(() => import(`./icons/${this.name}.vue`))\n    }\n  }",
          "repo": "https://github.com/vuejs/core",
          "title": "Support lazy-loaded component for the `is` attribute",
          "parent_url": "https://github.com/vuejs/core/issues/5349"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-01T07:23:37.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId115",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5349",
          "body": "Version\n3.2.29\nReproduction link\nstackblitz.com\nSteps to reproduce\nIn Vue 3, the is attribute supports only a String or a Component. That means lazy-loaded dynamic components don't work.\nWhat is expected?\nIn Vue 2, the code below works fine:\n<template>\n  <component :is=\"dynamicComponent\"></component>\n</template>\n\n<script>\nexport default {\n  props: ['name'],\n  computed: {\n    dynamicComponent() {\n      return () => import(`./icons/${this.name}.vue`);\n    },\n  },\n};\n</script>\nWhat is actually happening?\nIn Vue 3 however, it doesn't.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Support lazy-loaded component for the `is` attribute"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId116",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId117",
        "attributes": {
          "url": "",
          "body": "Mollit id sint. Dolore ut excepteur consectetur dolore mollit id. Laborum dolore enim ex dolor adipisicing laboris. Magna voluptate irure deserunt adipisicing. Sit quis do occaecat quis ad minim.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "sincere filer" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Tirana, Albania" },
      "bio": { "github": "Frontend enthusiast.\r\nSenior Vue.js developer." },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "incredible may", "discord": "incredible may" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-11-01T15:42:54.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-08T21:26:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId118",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5547#issuecomment-1062228376",
          "body": "You use the same ref object for the value and DOM element. Simply use a second ref object to grab the DOM element.\nUpdated example",
          "repo": "https://github.com/vuejs/core",
          "title": "textarea v-model with ref not working together when setting focus",
          "parent_url": "https://github.com/vuejs/core/issues/5547"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-06T16:16:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId119",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5531#issuecomment-1059991738",
          "body": "props['update:modelValue'] event name should be onUpdate:modelValue",
          "repo": "https://github.com/vuejs/core",
          "title": "jsx binding event cannot be fired",
          "parent_url": "https://github.com/vuejs/core/issues/5531"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-02-14T14:38:55.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId120",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5425",
          "body": "Version\n3.2.31\nReproduction link\nSFC Playground\nSteps to reproduce\nJust look at the compiled code in JS tab\nWhat is expected?\n\"onUpdate:values\": __props['onUpdate:values']\nWhat is actually happening?\nReference to the renamed prop is not correct\n\"onUpdate:values\": __props.undefined",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Renaming destructured props fails in some cases"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-20T16:52:45.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId121",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5296",
          "body": "Version\n3.2.27\nReproduction link\nsfc.vuejs.org\nSteps to reproduce\n\nOpen the console to see what's going on\nType anything into the input field\n\nWhat is expected?\nEvent listeners to be merged correctly\nWhat is actually happening?\nVue throws TypeError: fn is not a function.  This happens because, when we try to merge two objects with the same event listeners but one of the objects contains an event with an undefined value, then the result will be an array with an undefined value.\nconst result = mergeProps({ onKeydown() {} }, { onKeydown: undefined })\n\n// result ---> { onKeydown: [fn, undefined] }",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "mergeProps does not merge correctly event listeners"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-16T10:48:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId122",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5271",
          "body": "Version\n3.2.26\nReproduction link\nSFC Playground\nSteps to reproduce\n\nclick add\nclick reset\nclick add\n\nWhat is expected?\nI expect the values of the state.data array to always be non-reactive\nWhat is actually happening?\nValues inside the array are not reactive only the first time. When a new shallow reactive array is assigned, then its values become reactive.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "shallowReactive inside a reactive object is not respected when the property is reassigned"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-07T17:43:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId123",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5220#issuecomment-1007602686",
          "body": "@JohMun  something like this can easily be implemented as a composable function here is an example",
          "repo": "https://github.com/vuejs/core",
          "title": "Registered events are missing in component instance",
          "parent_url": "https://github.com/vuejs/core/issues/5220"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-03T20:53:57.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId124",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5202#issuecomment-1004352038",
          "body": "More info, this is related to the v-model directive. If I replace v-model with :checked attribute in Switch.vue then it's fine\nUpdated example",
          "repo": "https://github.com/vuejs/core",
          "title": "Conditional rendering causing to trigger CSS transition",
          "parent_url": "https://github.com/vuejs/core/issues/5202"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-01-03T19:54:33.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId125",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5202",
          "body": "Version\n3.2.26\nReproduction link\nSFC Playground\nSteps to reproduce\nChange page using pagination button (not prev/next)\nWhat is expected?\nSwitch should not animate when is mounted\nWhat is actually happening?\nFor some reason, the switch is animated when is mounted. IDK why because its value is always set to true. This bug is related to the fact that inside the pagination I conditionally render either a button or a span tag. (line 38). If you set ENABLE_SPAN_SWAP to false to disable conditional rendering or use prev/next buttons to change the page then this bug disappears. Also, I couldn't reproduce it in the latest Firefox version, only in the latest Chrome/Chrome Canary.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Conditional rendering causing to trigger CSS transition"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2021-12-30T16:40:30.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId126",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5192",
          "body": "What problem does this feature solve?\nHi. Is it possible to add a toggle switch so I can turn on/off automatic URL generation (and the setting would be saved in localStorage)? My reason is that every time I change the code, the URL is also updated, making the browser history cluttered with unnecessary entries. I always have to remember to open the playground in incognito mode to bypass this, which is a little annoying to me  :/. Thanks for considering my request.\nlong, long list...",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Playground: add ability to disable automatic url generation"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-01T15:42:54.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId127",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4882#issuecomment-956344518",
          "body": "Are you sure it is safe to use this feature since iOS <= 13.3 and Chrome < 80 don't support it?\nhttps://caniuse.com/mdn-javascript_operators_optional_chaining\nhttps://caniuse.com/?search=es6 (vue 3 supported browsers)",
          "repo": "https://github.com/vuejs/core",
          "title": "refactor(runtime-core): replaced with optional chaining operator",
          "parent_url": "https://github.com/vuejs/core/pull/4882"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId128",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId129",
        "attributes": {
          "url": "",
          "body": "Nulla sint aliquip duis. Pariatur esse consectetur id minim id enim.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId130",
        "attributes": {
          "url": "",
          "body": "Do proident sunt do velit nostrud aute. Sunt quis labore nisi id enim. Labore deserunt consequat cillum id cillum incididunt.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId131",
        "attributes": {
          "url": "",
          "body": "Voluptate quis ullamco ex sunt. Tempor dolor occaecat deserunt quis elit veniam. Laboris anim irure nostrud.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId132",
        "attributes": {
          "url": "",
          "body": "Deserunt do id ea et. Duis eu excepteur proident cillum ullamco ut est. Do sunt proident nulla.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "incredible may" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": {
      "github": "blithesome kenwigs",
      "twitter": "HcySunYang",
      "discord": "blithesome kenwigs"
    },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-15T04:24:01.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-03-11T15:15:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId133",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5565#issuecomment-1065206649",
          "body": "@LinusBorg Just use this PR, it's okay, great job.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(suspense): warn when using asnyc setup when not inside a Supsense boundary. (fix: #3659)",
          "parent_url": "https://github.com/vuejs/core/pull/5565"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-05T16:19:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId134",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5212",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(types): calling readonly() with ref() should return Readonly<Ref<T>>"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-01-05T16:04:54.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId135",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5211#issuecomment-1005857598",
          "body": "Closed, create a new one.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): calling readonly() with ref() should return Readonly<Ref<T>>",
          "parent_url": "https://github.com/vuejs/core/pull/5211"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-01-05T15:58:53.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId136",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5211#issuecomment-1005852295",
          "body": "Oh my, I thought I was in my fork repo....",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): calling readonly() with ref() should return Readonly<Ref<T>>",
          "parent_url": "https://github.com/vuejs/core/pull/5211"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-05T15:57:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId137",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5211",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(types): calling readonly() with ref() should return Readonly<Ref<T>>"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-19T07:54:33.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId138",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4970",
          "body": "Fix: #3238",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(compiler-sfc): imports in <script> should not be exposed"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-21T02:16:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId139",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4406",
          "body": "Fix: #4391",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "types: improve the type of createElementBlock"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-17T05:37:14.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId140",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4361",
          "body": "Fix: #4283",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-core): only to iterate props own keys"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-16T11:09:33.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId141",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4349",
          "body": "Fix: #4346",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(runtime-core): vnode hooks should not be called on async wrapper"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-08-15T04:24:01.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId142",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4339",
          "body": "This is a copy of the old PR #3414, for some reasons, I had to reopen a new one.\nRFC vuejs/rfcs#284",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "feat(KeepAlive): support matchBy + allow custom caching strategy "
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId143",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId144",
        "attributes": {
          "url": "",
          "body": "Sint aliquip nulla nulla proident ad. Ipsum tempor commodo quis fugiat officia. Fugiat exercitation consequat culpa do in.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": {
        "github": "https://github.com/CrowdHQ",
        "twitter": "https://twitter.com/HcySunYang"
      },
      "name": { "github": "blithesome kenwigs" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Beijing, China" },
      "bio": { "github": "A self-funded solo founder. @vuejs" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "stupendous estimator", "discord": "stupendous estimator" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-03-09T08:25:13.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-opened",
        "timestamp": "2022-03-16T09:02:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId145",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5593",
          "body": "fix: Ref or computed inside non-wrappable variables (objects, arrays) should return a string without quotes(#5578)",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix: Ref or computed inside non-wrappable variables (objects, arrays) should return a string without quotes(#5578)"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-03-16T08:45:09.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId146",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5592",
          "body": "Ref or computed inside non-wrappable variables (objects, arrays) should return a string without quotes(#5587)",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix:Ref or computed inside non-wrappable variables (objects, arrays) should return a string without quotes(#5587)"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-12T03:48:37.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId147",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5571#issuecomment-1065805694",
          "body": "I don't know if it's a bug， so I add warn\n\nGood ~ i think this is a bug.Off topic, are you Chinese? Can you add a friend to communicate with me？ vx:sudongyuer\n\nok",
          "repo": "https://github.com/vuejs/core",
          "title": "Cannot mount same component twice",
          "parent_url": "https://github.com/vuejs/core/issues/5571"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-03-11T17:18:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId148",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5573",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix: mount multiple apps to the same host element(#5571)"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-03-11T13:40:35.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId149",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5552#issuecomment-1065123744",
          "body": "@LinusBorg  I learned a lot from vuejs,  this is my first pr in github, please give me a chance, thx!",
          "repo": "https://github.com/vuejs/core",
          "title": "fix: some dom property setting error #5545",
          "parent_url": "https://github.com/vuejs/core/pull/5552"
        }
      },
      {
        "type": "star",
        "timestamp": "2022-03-10T07:13:08.000Z",
        "platform": "github",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId150",
        "importHash": null,
        "parentId": null,
        "attributes": { "repo": "https://github.com/vuejs/core" }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-10T02:18:05.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId151",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5556#issuecomment-1063584080",
          "body": "in Lifecycle Hooks, 'this' is proxy, eg.\nconst fnObj = {\n// return a function\n  $forceUpdate: () => () => console.log('fn')\n}\nconst obj = {}\nconst proxy = new Proxy(obj, {\n  get(target, key) {\n    if (fnObj[key]) {\n      return fnObj[key]()\n    }\n    return undefined\n  }\n})\nlet fn1 = proxy.$forceUpdate\nlet fn2 = proxy.$forceUpdate\nconsole.log(fn1 === fn2) //false",
          "repo": "https://github.com/vuejs/core",
          "title": "this.$forceUpdate changes",
          "parent_url": "https://github.com/vuejs/core/issues/5556"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-03-09T11:17:00.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId152",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5552",
          "body": "some dom property is has getter, but no setter,like\n<select :type=\"null\"></select>\npatchDOMProp method will throw an error in  'use strict'",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix: some dom property setting error #5545"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-03-09T08:25:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId153",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/zscumt123/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId154",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId155",
        "attributes": {
          "url": "",
          "body": "Eiusmod est reprehenderit dolore minim aliquip nostrud. Consectetur Lorem occaecat ullamco.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "stupendous estimator" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "helpful trainer", "discord": "helpful trainer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-10-18T20:17:40.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-01-18T12:03:25.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId156",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5207#issuecomment-1015345454",
          "body": "This is because when for example \"home\" is active, keepAlive caches About -> RouterView (RounterView renders NestedHome), it results in two NestedHome instances.",
          "repo": "https://github.com/vuejs/core",
          "title": "Watchers in nested elements in keep alive are called twice",
          "parent_url": "https://github.com/vuejs/core/issues/5207"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-05T22:34:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId157",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5049",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore: remove console log"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-17T21:15:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId158",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4955#issuecomment-972040550",
          "body": "d-ts test has been added, without changes in this pull request, it will fail",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): Register built-in components Teleport and Suspense should work",
          "parent_url": "https://github.com/vuejs/core/pull/4955"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-17T11:15:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId159",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4955#issuecomment-971477016",
          "body": "This issue actually has nothing to do with $props,  and as per my testing, both RouterView & RouterLink work, as they serve as legitimate Component type. The reason why Teleport breaks type Inference is because it has __isTeleport property which does not exist in Component, same to Suspense.\nEdit: RouterView works in my place\n\nI will add tests soon",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(types): Register built-in components Teleport and Suspense should work",
          "parent_url": "https://github.com/vuejs/core/pull/4955"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-11-17T06:26:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId160",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4955",
          "body": "fix #4950 (built-in components like Teleport do not work)\nCause is\n\nwhich results in Teleport & Suspense are not legitimate Component type.\nHowever, as per office doc (usage with built-in components for rendering dynamic components),  <component :is=\"isGroup ? 'Teleport' : 'Suspense'\"> ...  </component> will require to register built-in components",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(types): Register built-in components Teleport and Suspense should work"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-08T03:36:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId161",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4913",
          "body": "Fix typo & improve grammar",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "runtime-core: typo in comments"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-10-22T23:35:15.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId162",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4840",
          "body": "fixes #4398",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(runtime-core): Avoid mutating original options object in createApp (fix #4398)"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-10-18T20:17:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId163",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/yuwu9145/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId164",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId165",
        "attributes": {
          "url": "",
          "body": "Ullamco elit consectetur aute. Labore reprehenderit culpa magna ut.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId166",
        "attributes": {
          "url": "",
          "body": "Tempor duis excepteur nostrud culpa ullamco et do. Dolore labore laborum aliquip pariatur.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId167",
        "attributes": {
          "url": "",
          "body": "Non veniam in. Adipisicing excepteur excepteur. Exercitation sint consequat culpa. In fugiat labore. Voluptate elit proident et eu aliqua.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "helpful trainer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Melbourne" },
      "bio": { "github": "I enjoy making things easier & cleaner" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "powerful traveler", "discord": "powerful traveler" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-10-08T09:50:26.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-opened",
        "timestamp": "2021-10-25T12:02:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId168",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4852",
          "body": "…directiveHooks\nfix: #4845",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(transition): v-show false should not call onEnter"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-10-25T09:51:04.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId169",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4850",
          "body": "…hyphenate string in props and camelize in emits\nfix: #4848",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(vModel): hyphenated v-model should use modifiers"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-11T09:10:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId170",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4770#issuecomment-939838395",
          "body": "It seems unnecessary to store the state in an additional property. 3f38d59 should revert it to original behavior while still fixing #4424.\n\nThe commit 3f38d59 has conflicts between v-show and style display binding, testcases\nit('should keep style \"display:none\" attribute on v-show control', () => {\n    const el = document.createElement('div')\n    el.style.cssText = 'display: none;';\n    (el as any)._vod = '';\n    patchProp(el as any, 'style', {}, { display: 'block' })\n    expect(el.hasAttribute('style')).toBe(true)\n    expect(el.style.display).toBe('none')\n  })\n\n  it('should keep style \"display:none\" attribute on v-show control2', () => {\n    const el = document.createElement('div')\n    el.style.cssText = 'display: none;';\n    (el as any)._vod = '';\n    patchProp(el as any, 'style', '', 'display:block;')\n    expect(el.hasAttribute('style')).toBe(true)\n    expect(el.style.display).toBe('none')\n  })",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-dom): fix conflicts between v-show and style display binding",
          "parent_url": "https://github.com/vuejs/core/pull/4770"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-09T13:23:48.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId171",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4770#issuecomment-939296789",
          "body": "BTW, the test case should cover #4424\n\ni had test undefined and it seems to work well.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-dom): fix conflicts between v-show and style display binding",
          "parent_url": "https://github.com/vuejs/core/pull/4770"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-09T12:04:09.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId172",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4769#issuecomment-939286088",
          "body": "我修改了codepen实例, 您可以直接在示例上测试不同情况",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-dom): style patching preserve v-show display property properly",
          "parent_url": "https://github.com/vuejs/core/pull/4769"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-09T11:51:09.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId173",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4769#issuecomment-939284244",
          "body": "您的这个提交有bug, 没有考虑到如果用户使用的写法如果是:style=\"{ 'display': xxx }\"的情况, 而且, 也没有考虑到如果用户不通过v-show的方式在style计算中将display设为none的情况.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-dom): style patching preserve v-show display property properly",
          "parent_url": "https://github.com/vuejs/core/pull/4769"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-10-09T11:45:43.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId174",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4770",
          "body": "fix #4768",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-dom): fix conflicts between v-show and style display binding"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-10-08T09:50:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId175",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4762",
          "body": "fix: #4759",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(TransformGroup): do not clear TransitionGroup custom transform style"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId176",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId177",
        "attributes": {
          "url": "",
          "body": "Adipisicing tempor officia duis. Commodo quis quis. Et cillum cillum sint eiusmod. Et labore eiusmod velit.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId178",
        "attributes": {
          "url": "",
          "body": "Culpa adipisicing consequat deserunt pariatur. Cupidatat occaecat quis irure magna dolore minim.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "powerful traveler" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "China" },
      "bio": { "github": "我们藉由知识接近神灵." },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "spectacular appraiser", "discord": "spectacular appraiser" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-24T20:51:59.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-05T23:03:07.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId179",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5320#issuecomment-1059846631",
          "body": "Fixed by #5406.",
          "repo": "https://github.com/vuejs/core",
          "title": "Something (looks like maybe static hoisting) is breaking HMR",
          "parent_url": "https://github.com/vuejs/core/issues/5320"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-02-02T19:23:24.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId180",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5355",
          "body": "Version\n3.2.29\nReproduction link\nhttps://github.com/AaronBeaudoin/vite-vue-ssr-bug-repr/tree/multiline-comment\nSteps to reproduce\n\nnpm i to install dependencies then npm run dev to run.\nIn your browser go to http://localhost:3001.\nAssuming you are in Chrome, go to the \"Network\" tab in Devtools.\nLook at the response for the document. The #app element should look like this:\n<div id=\"app\"><div><!--[--><!--]--></div></div>\n\nNote that the <!-- test --> comment is missing.\nIn your code editor go to src/App.vue.\nAdd a space in the comment, like for example before test like so:\n<Test>\n  <!-- \n    test -->\n</Test>\n\nReload the browser. Note the hydration mismatch error in the console.\nCheck the document response again. The #app element should look like this:\n<div id=\"app\"><div><!--[--><!-- \n  test --><!--]--></div></div>\n\n\nWhat is expected?\nNo hydration mismatch occurs and either one of the two following things happens:\n\nThe single line comment is rendered as well (I'm pretty sure this is what should happen).\nThe multiline comment is not rendered.\n\nWhat is actually happening?\nThe single line comment does not get rendered in the HTML the server sends to the browser, but the multiline comment does get rendered. This results in a hydration mismatch on the client side when the comment is multiline.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "SSR does not render a single line comment but DOES render a multiline one, causing a hydration mismatch on the client"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-02T18:20:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId181",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5352#issuecomment-1028224109",
          "body": "More Debugging Info\nHere is more specifically what is happening with this bug. When the hydrateChildren function is run inside of the hydrateFragment function on line 4283, it expects to get the fragment's end anchor back from hydrateChildren, but in this case it get's null instead.\nThe reason for this can be seen inside of hydrateChildren. It appears that there are two expected states of node and parentVNode inside this function:\n\nparentVNode (the fragment) has 0 children, so therefore node is the fragment's end anchor, causing the for loop to never run and the end anchor to be returned directly.\nparentNode (the fragment) has 1 or more children, so therefore node is the fragment's first child, causing the for loop to run such that on the first iteration the hydrateNode function is called with node and parentVNode.children[0]. As the loop runs parentVNode.children.length times, node is overwritten on each iteration, eventually resulting in the function returning the fragment's end anchor.\n\nEither way, parentVNode is the fragment, and the function's return value is expected to be the end anchor.\nIn the minimal reproduction above, neither of these things happen, which appears to undefined behavior and causes a bug. In this case, when the hydrateChildren function runs, parentVNode (the fragment) has 1 child (the <transition>), but node is the fragment's end anchor because the transition's element does not render (since its v-if evaluates to false). This results in the hydrateNode function being called with the fragment's end anchor as node but the transition as vnode, which clearly doesn't make sense.\nIt appears that this state in turn causes the hydrateNode function which runs on the for loop's only iteration to return null, which is then returned from hydrateChildren causing the hydrateFragment function to never get the fragment's end anchor—even though it exists in the server rendered HTML!\nThis then results in the hydrateFragment function inserting a new comment, which occurs on line 4292. This results in the DOM having 3 comments like:\n<div id=\"app\">\n  <div>\n    <!--[-->\n    <!--]-->\n    <!--]-->\n  </div>\n</div>\n...and now there is an extra unmatched fragment end anchor in the DOM. So this bug results in a bit of a mess.",
          "repo": "https://github.com/vuejs/core",
          "title": "SSR hydration throws error when slot (fragment) contains a single `<transition>` whose element's `v-if` evaluates to `false`",
          "parent_url": "https://github.com/vuejs/core/issues/5352"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-02-01T20:49:06.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId182",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5352",
          "body": "Version\n3.2.29\nReproduction link\nhttps://github.com/AaronBeaudoin/vite-vue-ssr-bug-repr/tree/transition-mismatch\nSteps to reproduce\n\nnpm i to install dependencies then npm run dev to run.\nIn your browser go to http://localhost:3001. Note the error in the console.\n\nWhat is expected?\nHydration completes without errors.\nWhat is actually happening?\nHydration throws an error.\n\nSEE THE \"More Debugging Info\" COMMENT BELOW FOR AN EXPLANATION.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "SSR hydration throws error when slot (fragment) contains a single `<transition>` whose element's `v-if` evaluates to `false`"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-02-01T16:42:08.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId183",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5351",
          "body": "Version\n3.2.29\nReproduction link\nhttps://github.com/AaronBeaudoin/vite-vue-ssr-bug-repr/tree/transition-comment\nSteps to reproduce\n\nnpm i to install dependencies then npm run dev to run.\nIn your browser go to http://localhost:3001. Note the error in the console.\nIn your code editor go to src/App.vue.\nRemove the comment and reload the page. The error should be gone.\n\nWhat is expected?\nHydration succeeds without errors.\nWhat is actually happening?\nThe comment in the <transition> causes a hydration mismatch error:\n[Vue warn]: Hydration children mismatch in <div>: server rendered element contains more child nodes than client vdom. \n  at <Layout> \n  at <LayoutModal > \n  at <App>",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "SRR hydration throws error when `<transition>` component has a comment in it"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-27T04:47:07.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId184",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5320#issuecomment-1022844775",
          "body": "Hi all. This is a real weird one and I've tried to figure out the cause for this strange behavior but I've had pretty much no success. Would someone with more experience be willing to step in and take a look? Thanks!",
          "repo": "https://github.com/vuejs/core",
          "title": "Something (looks like maybe static hoisting) is breaking HMR",
          "parent_url": "https://github.com/vuejs/core/issues/5320"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-24T20:51:59.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId185",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5320",
          "body": "Version\n3.2.29\nReproduction Link\nhttps://github.com/AaronBeaudoin/vite-vue-ssr-bug-repr/tree/vanilla\nThis repo is a stripped down version of Vite's ssr-vue playground.\nSteps to Reproduce\nSteps are in the repo's README.md file.\nWhat is expected?\nWhen changing the \"DOESN'T WORK\" text, HMR instantly responds and updates the page.\nWhat is actually happening?\nWhen changing the \"DOESN'T WORK\" text, HMR doesn't work and an error is logged in the console from the Vue runtime.\nExtra Info\nThis issue was originally posted here to the Vite repo, but it looks like it's very likely actually an issue with Vue itself.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Something (looks like maybe static hoisting) is breaking HMR"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId186",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId187",
        "attributes": {
          "url": "",
          "body": "Tempor cillum anim pariatur laboris est irure nulla. Pariatur dolore minim et aliqua sit magna voluptate. Esse nostrud esse esse id.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "spectacular appraiser" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "independent craftsman", "discord": "independent craftsman" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-23T13:42:27.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-opened",
        "timestamp": "2022-01-13T10:57:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId188",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5255",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "refactor(compiler-core): improve the readability"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-13T10:43:52.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId189",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5254",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "refactor(compiler-core): improve the readability"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-29T16:21:10.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId190",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5183",
          "body": "fix #5159",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "feat(types): ToRefs doesn't respect readonly properties, UnwrapNested…"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-21T11:12:07.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId191",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4981",
          "body": "Use fill instead of initializing the array\nThis will make packaged code more streamlined",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "refactor(runtime-core): use fill instead"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-01T10:38:19.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId192",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4882",
          "body": "replaced with optional chaining operator",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "refactor(runtime-core): replaced with optional chaining operator"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-28T14:16:08.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId193",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4697",
          "body": "add unit test that simple div with interpolation",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "test(compiler-core): add unit test that simple div with interpolation"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-23T13:42:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId194",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4421",
          "body": "delete the redundant code -- 'async'",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "test(reactivity): delete unnecessary async in tests"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId195",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId196",
        "attributes": {
          "url": "",
          "body": "Veniam anim sunt eu. Enim minim non nostrud ea elit. Elit mollit laborum incididunt. Cupidatat eiusmod excepteur. Amet officia consectetur.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId197",
        "attributes": {
          "url": "",
          "body": "Deserunt enim sit incididunt nulla minim occaecat. Laborum anim voluptate sit incididunt anim adipisicing.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "independent craftsman" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "China" },
      "bio": { "github": "坚持做正确的事" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "smart accountant", "discord": "smart accountant" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-27T12:57:09.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-23T04:15:52.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId198",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4658",
          "body": "<template v-for=\"a in b\" key=\"c\"/> should treat the key property as static string. But currently it is compiled to _ctx.c like expression.\nreproduction link",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler-core): no prefixing on attribute key"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-13T11:31:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId199",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4577",
          "body": "Minimal Repro\nUsers can provide :onClick as event handler since vnode structure is flat. However, only /^on[^a-z]/ is accepted as event pros and props like onclick are bogus.\nThis fix makes dedupeProperties consistent with the runtime.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler-core): only merge true handlers"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-10T16:25:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId200",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4557",
          "body": "This patch fix the duplicated default props inrenderSlot code generation and simplifies the logic by splicing a default argument array.\nMinimal reproduction\nrenderSlot takes at most 5 arguments but the compiler generates 6.\n\nNote the last argument true should follow immediately after the fallback function.\n\nIt looks like an accidental bug that default slotProps is pushed twice when children are defined and SFC has no slotted selector.\n\nInstead we can provide a default arg array, set arguments in their position if defined, and finally splice the array to remove unused args.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler-core): dedupe renderSlot's default props"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-06T04:23:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId201",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4526",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore: fix typo in jsdoc"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-03T07:30:38.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId202",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4507",
          "body": "Example:\n<div :[miss=\"exp\"/> compiles to [mis] instead of [miss]\nVue template compiler link",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler): pick last char when dynamic directive doesn't close"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-02T12:18:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId203",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4495",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(compiler): report invalid directive name error (#4494)"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-27T12:57:09.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId204",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4459",
          "body": "CDATA only ends with ]]>, we can skip < or {{. This can save us\nseveral TEXT node generation.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "refactor(compiler): refine CDATA endTokens"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId205",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-10T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId206",
        "attributes": {
          "url": "",
          "body": "Qui nulla aliquip fugiat. Ut officia veniam ex cupidatat sit. Aliquip esse ad aute ipsum. Consectetur ipsum in ullamco nulla laborum amet Lorem.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "smart accountant" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Shinnippori" },
      "bio": { "github": "闇と森の妖精" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "imaginative mortician", "discord": "imaginative mortician" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-09-18T06:17:47.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-05T02:38:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId207",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5206",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore(runtime-core): fix typo in apiInject.ts and apiSetupHelpers.ts"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-01-05T02:13:25.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId208",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/Rudeus3Greyrat/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-03T10:38:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId209",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5029",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(compiler-sfc): fix typo in comments"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-26T07:03:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId210",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5000",
          "body": "chore(compiler-sfc): fix typo in compileScript",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(compiler-sfc): fix typo in compileScript"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-22T03:58:39.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId211",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4650",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(compiler-core): fix typo in errors.ts and options.ts"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-22T03:47:32.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId212",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4649",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(compiler-core): fix typo in transformElement"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-18T06:17:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId213",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4625",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore(compiler-core): fix typo in hoistStatic"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId214",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId215",
        "attributes": {
          "url": "",
          "body": "Quis ipsum amet labore. Adipisicing adipisicing duis elit duis.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId216",
        "attributes": {
          "url": "",
          "body": "Excepteur eu est. Cupidatat culpa labore proident ipsum reprehenderit laborum. Commodo cillum officia exercitation consectetur consectetur nisi. Culpa labore qui laboris eu minim reprehenderit laborum. Aliqua mollit incididunt elit excepteur qui eiusmod.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId217",
        "attributes": {
          "url": "",
          "body": "Nostrud ipsum velit non sit ipsum. Occaecat aliqua anim dolore culpa non. Fugiat duis Lorem commodo dolor laboris.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId218",
        "attributes": {
          "url": "",
          "body": "Magna id tempor. Enim consequat et ullamco. Labore minim velit amet non.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "imaginative mortician" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Beijing" },
      "bio": { "github": "Knowledge brings real freedom." },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "sympathetic girlguide", "discord": "sympathetic girlguide" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-10-01T03:10:11.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-24T02:13:31.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId219",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5357#issuecomment-1049425508",
          "body": "@TechAkayy  I still think the problem is here, you try to debug",
          "repo": "https://github.com/vuejs/core",
          "title": "HMR not updating template comments correctly",
          "parent_url": "https://github.com/vuejs/core/issues/5357"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-15T14:22:50.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId220",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5117",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "refactor: includes instead of indexOf"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-11T10:04:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId221",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4934",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "refactor(compiler-core): refactor isComponentTag method"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-05T07:01:14.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId222",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4905",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "refactor(compiler-sfc): replace filter method with for loop"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-10-01T03:18:30.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId223",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4715",
          "body": "run yarn format",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "chore: prettier format"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-10-01T03:10:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId224",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/btea/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId225",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId226",
        "attributes": {
          "url": "",
          "body": "Ullamco voluptate laboris cupidatat irure occaecat elit. Quis eiusmod eu eiusmod.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "sympathetic girlguide" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "HangZhou,China" },
      "bio": { "github": "天空高远，大风吟唱······" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "amicable tupman", "discord": "amicable tupman" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-12-09T11:11:18.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-01-21T07:42:53.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId227",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5239#issuecomment-1018258770",
          "body": "@yyx990803 thanks for your feedback and explains a lot! 😊  Maybe it's worth a renaming (e.g. with a prefix) to indicate internal usage only?",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(ssr): hydrate strings in fragments",
          "parent_url": "https://github.com/vuejs/core/pull/5239"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-11T11:27:12.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId228",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5239",
          "body": "Right now, it seems that the hydrateChildren function optimizes too much. When you have a custom component that uses renderSlot and that renders a simple string it fails:\n\n\nThis PR removes the current check optimized = optimized || !!parentVNode.dynamicChildren so strings are converted to VNodes before they are compared in hydrateNode:\nhttps://github.com/vuejs/vue-next/blob/92f11d6740929f5b591740e30ae5fba50940ec82/packages/runtime-core/src/hydration.ts#L379-L430",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(ssr): hydrate strings in fragments"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-01-11T10:22:58.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId229",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5082#issuecomment-1009817967",
          "body": "@posva any chance to have a look at it again after my explanation? thanks! 😊",
          "repo": "https://github.com/vuejs/core",
          "title": "feat(shared): expose rawChildrenMap in context",
          "parent_url": "https://github.com/vuejs/core/pull/5082"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-12-10T14:32:01.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId230",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5082#issuecomment-991021604",
          "body": "The failing test does not fail in my local environment...",
          "repo": "https://github.com/vuejs/core",
          "title": "feat(shared): expose rawChildrenMap in context",
          "parent_url": "https://github.com/vuejs/core/pull/5082"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-12-09T18:02:49.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId231",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5082#issuecomment-990092510",
          "body": "@posva yep, like I mentioned this change will allow custom directives to do the same as v-html does. In my case I have a v-emojis directive that walks through it's children and replaces UTF-8 emojis with images (<img src=\"...\" />). Since it is supposed to work in SSR context as well this is the only possible way that I found how it could possibly work. The v-html directive takes the expression and sets it in the rawChildrenMap (see https://github.com/vuejs/vue-next/blob/master/packages/compiler-ssr/src/transforms/ssrTransformElement.ts#L170-L171) but this map is not exposed anywhere so the v-html directive is the only directive that can take advantage of it.\nUpdate: I forgot to say that this PR does not change any existing functionality and all tests are supposed to still pass (which they did in my local environment). This PR just exposes the map in the context so custom directives can make use of it.",
          "repo": "https://github.com/vuejs/core",
          "title": "feat(shared): expose rawChildrenMap in context",
          "parent_url": "https://github.com/vuejs/core/pull/5082"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-12-09T11:11:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId232",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5082",
          "body": "This PR exposes the raw children map in the context so custom directives can do the same as v-html does:\nhttps://github.com/vuejs/vue-next/blob/master/packages/compiler-ssr/src/transforms/ssrTransformElement.ts#L171\nAs a side effect it gets rid of this static (though weak) map:\nhttps://github.com/vuejs/vue-next/blob/master/packages/compiler-ssr/src/transforms/ssrTransformElement.ts#L53-L56",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "feat(shared): expose rawChildrenMap in context"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId233",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId234",
        "attributes": {
          "url": "",
          "body": "Labore incididunt esse sint incididunt enim dolore. Mollit velit nulla excepteur. Incididunt esse voluptate pariatur non officia Lorem non.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId235",
        "attributes": {
          "url": "",
          "body": "Fugiat elit duis incididunt. Sint dolor eu commodo amet.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId236",
        "attributes": {
          "url": "",
          "body": "Incididunt amet veniam do reprehenderit anim aute. Voluptate velit sint proident laborum deserunt reprehenderit non. Veniam fugiat non occaecat dolor anim. Veniam incididunt mollit excepteur consectetur exercitation sunt.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "amicable tupman" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Basel, Switzerland" },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "humorous beadwood", "discord": "humorous beadwood" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-02-09T04:29:23.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-25T03:10:04.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId237",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5371#issuecomment-1050476715",
          "body": "@kuang-lingxi see #2231\n\nthanks reply!actually I saw this issue yesterday via git commit. In the previous implementation, the check was skipped by judging whether it was a ref. actually I don't really understand why ref skips the check.\nor i change the question, what is the expected behavior of the watch function when it accepts ref/shallow ref/reactive object? Is there any documentation on this?",
          "repo": "https://github.com/vuejs/core",
          "title": "triggerRef not update for shallowRef when watching multiple values (Array argument)",
          "parent_url": "https://github.com/vuejs/core/issues/5371"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-25T00:42:00.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId238",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5371#issuecomment-1050402396",
          "body": "@LinusBorg hi! can i ask a question about watch implementation? why do we treat ref and shallow ref differently, when we use shallow ref, the callback function is forced to fire.I don't seem to see the corresponding instructions on the official documentation.\n\n  \n    \n      core/packages/runtime-core/src/apiWatch.ts\n    \n    \n        Lines 204 to 215\n      in\n      5898629\n    \n  \n  \n    \n\n        \n          \n           let forceTrigger = false \n        \n\n        \n          \n           let isMultiSource = false \n        \n\n        \n          \n            \n        \n\n        \n          \n           if (isRef(source)) { \n        \n\n        \n          \n             getter = () => source.value \n        \n\n        \n          \n             forceTrigger = isShallow(source) \n        \n\n        \n          \n           } else if (isReactive(source)) { \n        \n\n        \n          \n             getter = () => source \n        \n\n        \n          \n             deep = true \n        \n\n        \n          \n           } else if (isArray(source)) { \n        \n\n        \n          \n             isMultiSource = true \n        \n\n        \n          \n             forceTrigger = source.some(isReactive) \n        \n    \n  \n\n\n\n  \n    \n      core/packages/runtime-core/src/apiWatch.ts\n    \n    \n        Lines 307 to 311\n      in\n      5898629\n    \n  \n  \n    \n\n        \n          \n           if ( \n        \n\n        \n          \n             deep || \n        \n\n        \n          \n             forceTrigger || \n        \n\n        \n          \n             (isMultiSource \n        \n\n        \n          \n               ? (newValue as any[]).some((v, i) =>",
          "repo": "https://github.com/vuejs/core",
          "title": "triggerRef not update for shallowRef when watching multiple values (Array argument)",
          "parent_url": "https://github.com/vuejs/core/issues/5371"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-02-14T10:08:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId239",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5422",
          "body": "development documentation should be updated synchronously with package.json[engines]?\n\n  \n    \n      core/package.json\n    \n    \n        Lines 46 to 48\n      in\n      1574edd\n    \n  \n  \n    \n\n        \n          \n           \"engines\": { \n        \n\n        \n          \n             \"node\": \">=16.5.0\" \n        \n\n        \n          \n           },",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "docs(contributing): keep documentation and engines in sync [ci skip]"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-14T09:51:04.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId240",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5382#issuecomment-1038876465",
          "body": "Sorry I just noticed this. I just followed the docs before. Wouldn't it be better if the docs could be updated synchronously?\nmaybe a new pr is clearer. 5422",
          "repo": "https://github.com/vuejs/core",
          "title": "docs(contributing): change node version",
          "parent_url": "https://github.com/vuejs/core/pull/5382"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-02-09T04:52:29.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId241",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5382",
          "body": "I noticed that optional operator(?.) is used in scripts/dev, but it only supports node 14+, so should node 14 be the minimum version limit for developers?",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "docs(contributing): change node version"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-02-09T04:29:23.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId242",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/kuang-lingxi/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId243",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId244",
        "attributes": {
          "url": "",
          "body": "Consequat veniam sunt ex magna veniam. Ut veniam sunt ipsum labore aute. Voluptate Lorem ipsum officia ut enim id. Adipisicing fugiat Lorem dolor commodo.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-12T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId245",
        "attributes": {
          "url": "",
          "body": "Nisi incididunt excepteur cillum consectetur velit. Consectetur do minim.",
          "thread": false,
          "channel": "announcements",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "humorous beadwood" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "深圳" },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "quick witted", "discord": "quick witted" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-10-27T16:44:13.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-27T05:12:53.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId246",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5006#issuecomment-980504678",
          "body": "Oh, I think it's unnecessary, we just need escape \"'&<>. They are HTML reserved characters.\nOK @caozhong1996 , thanks for informing me",
          "repo": "https://github.com/vuejs/core",
          "title": "Adding more html entities in HtmlEscape.ts",
          "parent_url": "https://github.com/vuejs/core/pull/5006"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-27T04:39:25.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId247",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5006#issuecomment-980501046",
          "body": "Could you give some introduction about this commit?\n\nThis PR will add more html entities(like &copy) to the htmlescape.ts for better escaping. I just saw that there are only 4 entites so I made this PR . If you don't need them tell me to close the PR",
          "repo": "https://github.com/vuejs/core",
          "title": "Adding more html entities in HtmlEscape.ts",
          "parent_url": "https://github.com/vuejs/core/pull/5006"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-26T16:30:42.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId248",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5006",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Adding more html entities in HtmlEscape.ts"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-02T18:30:58.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId249",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4888",
          "body": "Delete useless lines and added types to variables that are without values in reactivity/__tests__/computed.spec.ts\nFor example in line 48 nothing is actually happening and there are a lot of dummy variables that don't have value so I added types to them",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "test(reactivity) : Delete useless lines and added types to variables that are without values"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-10-27T17:21:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId250",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4867",
          "body": "Hi , I saw this code in the ref.spec.ts:\nhttps://github.com/vuejs/vue-next/blob/5eb72630a53a8dd82c2b8a9705c21a8075161a3d/packages/reactivity/__tests__/ref.spec.ts#L32-L38\nyou can see that a.value = 2  has repeated twice and I guess the second part is for checking that the calls won't change after setting a.value to same number but expect(dummy).toBe(2)  has repeated again and that's useless because it has a test at line 34",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "test(reactivity) : fixed a small copy & paste mistake in ref.spec.ts"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-10-27T16:44:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId251",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/mehanalavimajd/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-09T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId252",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-15T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId253",
        "attributes": {
          "url": "",
          "body": "Esse dolor excepteur nulla sit occaecat. Id ullamco voluptate sunt. Ipsum deserunt non qui minim aliquip proident laboris. Et laboris velit ut sit.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "quick witted" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Tehran" },
      "bio": {
        "github": "13 years old student from Tehran.\r\nA JS and node js and python developer"
      },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "amazing worshipper", "discord": "amazing worshipper" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-05T14:40:47.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-01-14T22:30:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId254",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5228#issuecomment-1013516865",
          "body": "yes, I have some .native listeners, not sure how many, but I'll definitely search all places and go with your suggestion, thanks again, and sorry for the coffee joke, it wasn't my intention to \"buy\" a position in the queue, but to say how important this fix is for me :)",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(compat): ensure fallthrough *Native events are not dropped during props update (fix #5222)",
          "parent_url": "https://github.com/vuejs/core/pull/5228"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-07T21:59:37.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId255",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5222#issuecomment-1007770056",
          "body": "here you go: https://github.com/oswaldofreitas/vue-compat-issue",
          "repo": "https://github.com/vuejs/core",
          "title": "@click.native works only first time",
          "parent_url": "https://github.com/vuejs/core/issues/5222"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-07T21:53:15.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId256",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5222#issuecomment-1007766386",
          "body": "sure, I can do it. I used that service since it's one of the suggested in the Vue 3 official docs and it was really hard to find one that I could setup the vue compat plugin. I'll create a repo for it now and share as soon as I get it.\nBefore sharing that link here I tested in incognito and it worked for me (without registering), you can click in the play button to run and in the \"Show files\" to see the code",
          "repo": "https://github.com/vuejs/core",
          "title": "@click.native works only first time",
          "parent_url": "https://github.com/vuejs/core/issues/5222"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-07T20:33:21.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId257",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5222",
          "body": "Version\n3.2.26\nReproduction link\nreplit.com\nSteps to reproduce\n\nclick in the dropdown\nselect an item\nclick in the dropdown again\n\nWhat is expected?\nthe dropdown should open again in the 2nd time\nWhat is actually happening?\nthe dropdown doesn't open\n\nWhen the input event is emitted from the form-dropdown component the event listener for the click event doesn't work anymore. I suppose it's a bug with the vue compat handling the .native modifier",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "@click.native works only first time"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-05T15:01:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId258",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5210#issuecomment-1005761356",
          "body": "oh I see, you're right! Thank you",
          "repo": "https://github.com/vuejs/core",
          "title": "Wrong detecting missing v-if in named slot template",
          "parent_url": "https://github.com/vuejs/core/issues/5210"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-05T14:40:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId259",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5210",
          "body": "Version\n3.2.26\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nIn the reproduction link there is this code:\n    <h1 v-if=\"false\">H1</h1>\n    <template #my-slot>\n      This should render\n    </template>\n\nwhich is working, but if you add a v-else to the template tag it breaks\nWhat is expected?\n<template> should accept both slot name and v-else\nWhat is actually happening?\nIt wrongly detects that there is no corresponding v-if for the v-else:\nSyntaxError: v-else/v-else-if has no adjacent v-if or v-else-if.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Wrong detecting missing v-if in named slot template"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId260",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-14T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId261",
        "attributes": {
          "url": "",
          "body": "Amet minim est ipsum ut enim duis. Tempor duis elit.",
          "thread": false,
          "channel": "general",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "amazing worshipper" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Brazil" },
      "bio": { "github": "Javascript developer. I love Vue!" },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "excellent arabella", "discord": "excellent arabella" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-13T10:02:28.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-14T07:45:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId262",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5582#issuecomment-1066471846",
          "body": "I think the cumbersome-ness would go away once we have a stable Reactivity Transform.\nIf you still want to add a new API for your usecase, please start a discussion in the RFC repository instead.\n\nOK, I'll go to RFC repository to mention it",
          "repo": "https://github.com/vuejs/core",
          "title": "A new toRefs, which supports converting ref.value of object type to ref.",
          "parent_url": "https://github.com/vuejs/core/issues/5582"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-03-14T07:13:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId263",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5582",
          "body": "What problem does this feature solve?\nIn Vue3, because the object generated by reactive can not be reassigned, we generally use the method of const objRef = ref(object) to define an object that needs to be assigned repeatedly. However, such a definition will make it cumbersome to read the attributes of the object, for example:\ninterface ObjType {\n  name: string\n  age: number\n  sex?: string\n}\nconst objRef = ref<ObjType>({ name: 'H', age: 1 })\nobjRef.value.name // 'H'\nobjRef.value.age // 1\n\nI hope to provide a quick reading method through toRefs, for example:\nconst { name, age } = toRefs(objRef)\nconst sex = toRef(objRef, 'sex', 'boy')\n\nWhat does the proposed API look like?\nI have realized this function, but I have added a new api, which does not replace the original toRefs, so I hope to discuss with you whether it exists and if so, what does it look like? If appropriate, I will mention a PR. I put the corresponding code in my repository.\nhttps://github.com/hcg1023/vue3-dnd/blob/main/lib/internals/toReactive.ts",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "A new toRefs, which supports converting ref.value of object type to ref."
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-03-14T05:21:53.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId264",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/hcg1023/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-14T03:28:14.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId265",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5253#issuecomment-1012717185",
          "body": "When using a method like you do, you would have to explicitly type this: undefined as the first argument of the method.\n\nI specified this: undefined as you said, but it still does not work properly. I have tried three ways of writing, maybe you need to teach me\nsfc.vuejs.org",
          "repo": "https://github.com/vuejs/core",
          "title": "The withDefaults function loses arguments when assigning a function default value",
          "parent_url": "https://github.com/vuejs/core/issues/5253"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-01-13T10:02:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId266",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5253",
          "body": "Version\n3.2.26\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nconst props = withDefaults(defineProps<{\n  fn?: (name: string) => void\n}>(), {\n  fn(name: string) {\n    return name.toUpperCase()\n  }\n})\nconsole.log(props.fn)\nWhat is expected?\nReturns the correct default value\nWhat is actually happening?\nFunction defaults lose arguments",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "The withDefaults function loses arguments when assigning a function default value"
        }
      },
      {
        "type": "joined_guild",
        "timestamp": "2022-03-16T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": false,
        "score": 2,
        "sourceId": "#sampleDataSourceId267",
        "attributes": {}
      },
      {
        "type": "message",
        "timestamp": "2022-03-13T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId268",
        "attributes": {
          "url": "",
          "body": "Tempor laboris amet pariatur commodo consequat dolor. Sint velit aute qui non ut. Ex ex elit mollit et magna.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      },
      {
        "type": "message",
        "timestamp": "2022-03-11T21:00:00.000Z",
        "platform": "discord",
        "isKeyAction": true,
        "score": 1,
        "sourceId": "#sampleDataSourceId269",
        "attributes": {
          "url": "",
          "body": "Quis dolore velit labore laboris. Elit dolore sint. Non laborum est voluptate sunt.",
          "thread": false,
          "channel": "introductions",
          "reactions": [],
          "attachments": []
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "excellent arabella" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null },
      "sourceId": { "discord": "#sample-discord-id" }
    }
  },
  {
    "username": { "github": "passionate girlguide" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-11-03T02:56:46.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-14T13:26:17.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId270",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4943",
          "body": "Excuse me, I can't confirm whether it's a bug or features.\nIf i use vue sfc as layout to render html boilerplate like\n// layout.vue\n<template>\n  <html>\n    <head>\n    </head>\n    <body>\n      <div id=\"app\">\n        <slot name=\"children\" />\n      </div>\n    </body>\n  </html>\n</template>\nAnd i have a App.vue will be rendered in slot\n<template>\n  <router-view />\n</template>\nIn ssr client-entry has below code\napp.mount('#app')\nBut ssrRenderSlot in server side will render empty comment node in slot tag, and we only hydrate base on <div id=\"app\"> node which cause dom mismatch in below code\n// server code\n<div id=\"app>\n<!--[-->\nxxxhtml\n<!--]-->\n</div>\n\n// client code \n<div id=\"app>xxxhtml</div>\nWhen i remove ssrRenderSlot internal code <!--[--> the behavior can be succeed\nIn addtion, in Vue2 has not the empty comment node logic.\nAnd there is different between vue2 and vue3 ssr demo, in vue2 App.vue contains <div id=\"app\"> but in vue3 ssr demo these code is writen in index.html. See ssr-vue3 vue2 hacknews",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(ssr): remove empty comment node in ssrRenderSlot which cause dom mismatch"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-03T11:23:24.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId271",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4890#issuecomment-958939454",
          "body": "Mock window object is common in some ssr program for compatibility\n\nI would say it's the opposite: Mocking the window object in Node.js is mostly done for testing but should be avoided as it will break many universal libraries relying on that check. Checking typeof navigator is another possibility\n\nemmm，mock navigator.useragent is also common，what’s your opinion about the judge condition",
          "repo": "https://github.com/vuejs/core",
          "title": "fix: the latest vue3 version cause ssr failed, devtools judge in server side is not exact",
          "parent_url": "https://github.com/vuejs/core/pull/4890"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-03T10:58:30.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId272",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4890#issuecomment-958915854",
          "body": "@posva yeah，i will remove window dependencies in next version，but many third party ui component depend on window property and the code maybe not be written in component lifecycle but component top.\nNavigator also be mocked commonly.     window.htmlelememt looks like a safe condition",
          "repo": "https://github.com/vuejs/core",
          "title": "fix: the latest vue3 version cause ssr failed, devtools judge in server side is not exact",
          "parent_url": "https://github.com/vuejs/core/pull/4890"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-03T03:05:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId273",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4890",
          "body": "The latest version of vue3 cause ssr failed, devtools judge in server side is not exact. Mock window object is common in some ssr program for compatibility, maybe only use typeof window as condition is not exact",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix: the latest vue3 version cause ssr failed, devtools judge in server side is not exact"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-11-03T02:56:46.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId274",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/zhangyuang/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "passionate girlguide" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "guangdong" },
      "bio": { "github": "SSR & TS & Rust" }
    }
  },
  {
    "username": { "github": "awesome miss" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-13T01:29:10.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issues-closed",
        "timestamp": "2022-03-01T09:23:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId275",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5497",
          "body": "我使用vite创建的工程，编写了hasslot.tsx组件，代码如下:\n`import { defineComponent } from 'vue'\nexport default defineComponent({\nrender() {\nconst { $slots } = this\nreturn {$slots.header ? $slots.header() : ''}\n}\n})`\n我在同目录下创建了一个test.vue,代码如下：\n`<script setup lang=\"ts\">\nimport HasSlotVue from './a.tsx'\n</script>\n\n<HasSlotVue #header>\n  hi\n</HasSlotVue>\n\n\n<style lang=\"less\" scoped></style>`\n在yarn build时，报Element implicitly has an 'any' type because expression of type '\"header\"' can't be used to index type '{} | {}'.\n错误。我已经在env.d.ts中添加了\ndeclare module '*.tsx' { import type { DefineComponent } from 'vue' // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types const component: DefineComponent<{}, {}, any> export default component }\n但如果把hashslot.tsx改为vue单文件的模式就不会。因为我们开发的组件库有一部分使用的是tsx做的，现在遇到这个问题build不过去。请问要怎么处理！非常感谢。",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "使用tsx创建的带有命名slot组件,在引用时报错，这个又是那里配置的问题呢？"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-10T14:40:29.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId276",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5395#issuecomment-1034999663",
          "body": "No problem is found using the official template. 🤥\n\n我也是用vite create创建的项目\n\nYou can provide a replica using github or gitee. 😄\n\nthanks我找到原因了，是因为在vite.config.ts中配置了\nalias: {\n'@': resolve('./src'),\n'#@': resolve('./src/frame-library'),\nvue: 'vue/dist/vue.esm-bundler.js' // 定义vue的别名，如果使用其他的插件，可能会用到别名\n}\n当我引用组件使用.   import  '#@/xxxxxx.vue'时，就会出现这个类型校验问题，但如果使用 @ 就不会了。这个问题有点奇怪了",
          "repo": "https://github.com/vuejs/core",
          "title": "当使用typescript开发时，定义的命名slot,在使用时，过不了typescript的类型检查，请教要如何处理",
          "parent_url": "https://github.com/vuejs/core/issues/5395"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-10T07:44:17.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId277",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5395#issuecomment-1034590220",
          "body": "No problem is found using the official template. 🤥\n\n我也是用vite create创建的项目",
          "repo": "https://github.com/vuejs/core",
          "title": "当使用typescript开发时，定义的命名slot,在使用时，过不了typescript的类型检查，请教要如何处理",
          "parent_url": "https://github.com/vuejs/core/issues/5395"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-10T07:23:53.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId278",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5395",
          "body": "Version\n3.2.30\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\n当使用typescript开发的组件用到了命名的slot时，在引用的组件中使用#引用就会报类型检查错误，\nWhat is expected?\n不应该有类型错误提示\nWhat is actually happening?\nElement implicitly has an 'any' type because expression of type '\"action-buttons\"' can't be used to index type '{} | {}'.\nProperty 'action-buttons' does not exist on type '{} | {}'.\n110     <template #action-buttons>\n\n我使用vite build && vue-tsc --declaration --emitDeclarationOnly是无法编译过去。这个有什么办法解决",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "当使用typescript开发时，定义的命名slot,在使用时，过不了typescript的类型检查，请教要如何处理"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-13T01:29:10.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId279",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5249",
          "body": "What problem does this feature solve?\n以以下对象为例\nconst refroot={ name:\"root\",children:{name:\"children\"} }\n我现在想要 cons refch=toRef(refoot,\"children.name\") 测试发现是不行的。我又尝试\nconst refdata=toRef(refoot,\"chidren\")\nconst rech=toRef(refdata,\"name\")  也是不行的。\n因为我的应用场景对象的属性路径是不确定的，需要动态进行绑定，请问一下有什么办法解决这个问题。\nWhat does the proposed API look like?\nconst refroot={ name:\"root\",children:{name:\"children\"} }\ncons refch=toRef(refoot,\"children.name\") 可以正常数据绑定",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "我如何才可以通过toRef创建对象多层级属性的refc对象"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "awesome miss" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "spectacular slowboy" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-02-06T20:14:47.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-09T18:55:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId280",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5392#issuecomment-1034090054",
          "body": "Decided to just update this PR w/ the correct code instead of creating a new one. Sorry for the back and forth.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(compiler-core): remove child node key validation for template vFor (Fix #5360)",
          "parent_url": "https://github.com/vuejs/core/pull/5392"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-09T18:32:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId281",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5392#issuecomment-1034070862",
          "body": "Merged wrong branch. Will re-submit.",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(compiler-core): remove child node key validation for template vFor (Fix #5360)",
          "parent_url": "https://github.com/vuejs/core/pull/5392"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-09T18:11:31.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId282",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5392",
          "body": "As discussed within #5360, remove the validation that prevents child nodes of templates that contain a v-for directive from having keys.\nFix #5360\nFix #4718",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(compiler-core): remove child node key validation for template vFor (Fix #5360)"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-02-09T18:04:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId283",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/CTKS/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-06T20:14:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId284",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5360#issuecomment-1030905803",
          "body": "@LinusBorg\nI've been able to remedy this issue by removing the block of code that validates this specific condition.\nLine 155 of errors.ts:\n[ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT]: `<template v-for> key should be placed on the <template> tag.`,\nLine 121 of vFor.ts:\n        // check <template v-for> key placement\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\n          node.children.some(c => {\n            if (c.type === NodeTypes.ELEMENT) {\n              const key = findProp(c, 'key')\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    ErrorCodes.X_V_FOR_TEMPLATE_KEY_PLACEMENT,\n                    key.loc\n                  )\n                )\n                return true\n              }\n            }\n          })\n        }\n\nBefore I make a PR, I just wanted to confirm that this is actually an issue and that simply removing this code is a satisfactory solution.\nIt looks like this was intentionally added by @yyx990803 back in 2020:\nb0d01e9\n\ndx(compiler-core): warn on  key misplacement\nNote: the behavior is different from Vue 2. <template v-for> are compiled\ninto an array of Fragment vnodes so the key should be placed the <template>\nfor v-for to use it for diffing.",
          "repo": "https://github.com/vuejs/core",
          "title": "Compiler not allowing correct usage of <transition-group> keys",
          "parent_url": "https://github.com/vuejs/core/issues/5360"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "spectacular slowboy" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Hamilton, ON" },
      "bio": {
        "github": "Full-Stack Dev in the digital-health space. A JavaScript nerd on a mission to modernize healthcare."
      }
    }
  },
  {
    "username": { "github": "intuitive sheriff" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-03-04T08:45:03.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-03-07T12:48:02.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId285",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5530#issuecomment-1060651664",
          "body": "你这个有一些问题\n\n增加   && hasOwn(options, (camelizedKey = camelize(key))) 的条件后 ，下面的\n  if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value\n              hasAttrsChanged = true\n            }\n\n似乎永远也执行不到.\n而且事件监听都会在else中被添加的attrs，即使在组件中的emits options中声明也无效",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): only update existing props",
          "parent_url": "https://github.com/vuejs/core/pull/5530"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-03-04T13:33:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId286",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5520",
          "body": "Version\n3.2.31\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nopen the console，click button\nWhat is expected?\nclick trigger once\nWhat is actually happening?\nafter update,click trigger twice\n\nwhen event listener as dynamicProp on updateProps, it is added to the instance’s props and it can be implicit binded to other components again by \"v-bind=$props\". it maybe trigger the callback function multiple times.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "event listener as dynamicProp is added erroneously to instance's props "
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-03-04T12:09:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId287",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5517#issuecomment-1059107314",
          "body": "Reproduction  https://jsfiddle.net/29xnkcoz/3/\n\nA real reproduction would be helpful for us, without having to search a long thread.\nSo far, I don't really get what problem this is supposed to be solving\n\nVue SFC Playground  https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHRlbXBsYXRlPlxuICA8UGFyZW50Q29tIHYtZm9yPVwiaSBpbiBbMV1cIiA6a2V5PVwiaVwiPlxuICAgIDxDaGlsZEl0ZW0gQGNsaWNrPVwibG9nKGkpXCI+YW55Q29udGVudDwvQ2hpbGRJdGVtPlxuICA8L1BhcmVudENvbT5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQgc2V0dXA+XG5pbXBvcnQgUGFyZW50Q29tIGZyb20gXCIuL1BhcmVudENvbS52dWVcIjtcbmltcG9ydCBDaGlsZEl0ZW0gZnJvbSBcIi4vQ2hpbGRJdGVtLnZ1ZVwiO1xuICBcbmZ1bmN0aW9uIGxvZyhpKSB7XG4gIGNvbnNvbGUubG9nKGkpXG59XG48L3NjcmlwdD5cbiIsImltcG9ydC1tYXAuanNvbiI6IntcbiAgXCJpbXBvcnRzXCI6IHtcbiAgICBcInZ1ZVwiOiBcImh0dHBzOi8vdW5wa2cuY29tL0B2dWUvcnVudGltZS1kb21AMy4yLjMxL2Rpc3QvcnVudGltZS1kb20uZXNtLWJyb3dzZXIuanNcIlxuICB9XG59IiwiQ2hpbGRJdGVtLnZ1ZSI6Ijx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiBAY2xpY2s9XCIoZSk9PiRlbWl0KCdjbGljaycsZSlcIiBzdHlsZT1cIndpZHRoOjMwMHB4XCIgdi1iaW5kPVwiJHByb3BzXCI+Y2xpY2sgbWUgdGVzdO+8jGxvb2sgYXQgdGhlIGNvbnNvbGU8L2J1dHRvbj5cbjwvdGVtcGxhdGU+XG48c2NyaXB0PlxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnQ2hpbGRJdGVtJyxcbiAgaW5oZXJpdEF0dHJzOiBmYWxzZSxcbiAgcHJvcHM6IHt9LFxuICBlbWl0czogWydjbGljayddLFxufVxuPC9zY3JpcHQ+XG4iLCJQYXJlbnRDb20udnVlIjoiPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIHt7IGNoYW5nZSB9fVxuICA8L2Rpdj5cbiAgPGRpdj5cbiAgICA8c2xvdD48L3Nsb3Q+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6IFwiUGFyZW50Q29tXCIsXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoYW5nZTogXCJiZWZvcmUgdXBkYXRlLGNsaWNrIHRyaWdnZXIgb25jZVwiXG4gICAgfVxuICB9LFxuICBtb3VudGVkKCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5jaGFuZ2UgPSBcImFmdGVyIHVwZGF0ZSxjbGljayB0cmlnZ2VyIHR3aWNlXCI7XG4gICAgfSwgNjAwMCk7XG4gIH1cblxufTtcbjwvc2NyaXB0PlxuIn0=",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): fix event listener as dynamicProp is added erroneously  to props",
          "parent_url": "https://github.com/vuejs/core/pull/5517"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-03-04T10:02:42.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId288",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5517",
          "body": "when event listener as dynamicProp  on updateProps, it is added to the  instance’s props and it can be implicit binded to other components again by \"v-bind=$props\".  it maybe trigger the callback function multiple times.\nclose #5520",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(runtime-core): fix event listener as dynamicProp is added erroneously  to props"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-03-04T08:45:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId289",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/iwusong/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "intuitive sheriff" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "杭州" },
      "bio": { "github": "演员的自我修养" }
    }
  },
  {
    "username": { "github": "intuitive bounderby" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-28T07:12:00.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-24T04:50:16.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId290",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5473#issuecomment-1049492651",
          "body": "@ygj6 Got it, thanks!",
          "repo": "https://github.com/vuejs/core",
          "title": "`Ref` value returned by function won't get unwrapped",
          "parent_url": "https://github.com/vuejs/core/issues/5473"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-02-24T01:32:08.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId291",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5473#issuecomment-1049405521",
          "body": "Hi @posva @caozhong1996  I have read the doc page you provided. But I couldn't see why this is expected. What's the reason for this?",
          "repo": "https://github.com/vuejs/core",
          "title": "`Ref` value returned by function won't get unwrapped",
          "parent_url": "https://github.com/vuejs/core/issues/5473"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-23T04:28:01.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId292",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5473",
          "body": "Version\n3.2.31\nReproduction link\ncodesandbox.io\nSteps to reproduce\n\nrefer a Ref value returned by a function in <template>\nconfirm that the returned value won't get unwrapped automatically\n\nWhat is expected?\nexpect this will work.\n<template>\n  <pre v-html=\"getVal()\"></pre>\n</template>\nWhat is actually happening?\nI have to unwrap the value myself:\n<template>\n  <pre v-html=\"getVal().value\"></pre>\n</template>\n\nx",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "`Ref` value returned by function won't get unwrapped"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-14T12:27:49.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId293",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5424",
          "body": "Version\n3.2.31\nReproduction link\nhttps://codesandbox.io/s/vue3-bi-direction-f0tsh?file=/src/App.vue\nSteps to reproduce\n\nopen the Reproduction link\nwait for 1s\nconfirm that the text 'initial text' keep as it, where it really should be changed to 'NEW TEXT'\n\nWhat is actually happening?\nI made a workaround for this, just comment out the bindToProxy(foo);, and run it again.\nI think this behavior should be included into the core by default, or at least by an option of ref or reactive.\nOr, maybe vue could check if the target object has a specific symbol so it can determine if use this \"bi-directional\" strategy.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "[Reactivity API] Not possible to reflect original object's changes."
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-28T07:12:00.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId294",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5336",
          "body": "Version\n3.2.29\nReproduction link\ncodesandbox.io\nSteps to reproduce\nI was reading https://v3.vuejs.org/guide/typescript-support.html#augmenting-types-for-globalproperties\nI tried this:\nimport axios from 'axios'\n\ndeclare module '@vue/runtime-core' {\n  export interface ComponentCustomProperties {\n    $http: typeof axios\n    $validate: (data: object, rule: object) => boolean\n  }\n}\nbut the code below will show an error if I have the above code\n\nModule '\"../../node_modules/vue/dist/vue\"' has no exported member 'defineComponent'.Vetur(2305)\n\nimport { defineComponent } from \"vue\";\nyou can confirm the error at here\nWhat is expected?\nx\nWhat is actually happening?\nx\n\nx",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "interface merging `ComponentCustomProperties` cause type error"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "intuitive bounderby" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Japan" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "affable senator" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-10-28T11:18:07.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-25T21:08:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId295",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4807#issuecomment-979469525",
          "body": "This does break one of the type tests in ref.test-d.ts btw (looks like no actions were run for this one).\nhttps://github.com/vuejs/vue-next/blob/4e1131e251c1e3c9278853b41a3458a71e702959/test-dts/ref.test-d.ts#L46\nWith the current change, tuple refs like [number, string] get widened to (string | number)[].\nTake this Playground comparing the two versions\nI think this issue requires some further investigation, perhaps a bit more information. Anyways, wanted to point out that the type does make a difference.",
          "repo": "https://github.com/vuejs/core",
          "title": "Return a more reasonable type for arrays.",
          "parent_url": "https://github.com/vuejs/core/pull/4807"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-18T11:08:47.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId296",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4966",
          "body": "The ToRefs type should not do any ref unwrapping. In #4734 this was also changed for ToRef but was forgotten in ToRefs.\nSandbox link to reproduction\nI also grouped together some of the tests for toRef and toRefs in ref.test-d.ts.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(types): `toRefs` should not do any ref unwrapping"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-14T20:49:51.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId297",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4945",
          "body": "I saw an issue coming up in 4868 and it seems to be related to a type problem in the withDefaults function. Default values for props containing null (union or directly) are required to be given in function form but should be treated like other primitives.\nPlayground link with reproduction",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(types): require function default value in `withDefaults` macro only for objects and arrays"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-11-03T18:52:23.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId298",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4899",
          "body": "UnwrapRef does not represent the ref unwrapping behavior correctly for refs in native collections (refs are unwrapped when reading from objects).\nSandbox link to reproduction\nThe branch is based on #3820 because it is not merged yet.\nTo make it simpler to follow, I removed the changes in #3820 and just included the ones for this feature.\n\n I can add test cases for this later if the changes are fine.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(types): `UnwrapRef` should unwrap refs in collections when reading objects"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-10-28T11:18:07.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId299",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/JensDll/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "affable senator" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Frankfurt, Germany" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "tidy scadder", "twitter": "sanxiaozhizi" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-11-30T22:12:02.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-08T01:07:59.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId300",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5218#issuecomment-1032107354",
          "body": "I'm trying to switch Element Plus to script-setup syntax, but this problem is blocking us. As a 3rd party component, we should add a prefix to component name, so we should add name property for every Vue SFC. If I use script-setup, there's two script tags at the same time. I think it's too ugly and seems to be incompatible with some cases. (such as 已声明“defineComponent”，但从未读取其值。ts(6133))\nIMHO, Maybe Vue can provide a marco API called defineOptions. It can set some Options API (name, inheritAttrs...).\nExample:\n<script setup lang=\"ts\">\ndefineOptions({\n  name: 'Foo',\n  inheritAttrs: false,\n})\n\ndefineProps<Props>()\n// ...\n</script>\nand it transforms to\n<script lang=\"ts\">\nexport default {\n  name: 'Foo',\n  inheritAttrs: false,\n}\n</script>\n\n<script lang=\"ts\" setup>\ndefineProps<Props>()\n// ...\n</script>\nRelated issue: element-plus/element-plus#5709 (comment)\nUPDATE:\nI made a plugin unplugin-vue-define-options to implement this feature\nRFC",
          "repo": "https://github.com/vuejs/core",
          "title": "use <script setup name=\"cpnName\"> instead of two <script>",
          "parent_url": "https://github.com/vuejs/core/issues/5218"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-08T00:10:05.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId301",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5370",
          "body": "The correct appid of devtools is repl",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(sfc-playground): default selected app on devtools"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-01-13T18:00:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId302",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5257",
          "body": "change Vue 3.0 to Vue 3",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore: update readme"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-11-30T22:13:57.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId303",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5026",
          "body": "fix #5025",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(reactivity): export `ShallowRef`"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-11-30T22:12:02.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId304",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/sxzz/vue-core",
          "name": "vue-core",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": {
        "github": "https://github.com/CrowdHQ",
        "twitter": "https://twitter.com/sanxiaozhizi"
      },
      "name": { "github": "tidy scadder" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": "Student | Full Stack Developer | @element-plus team member" }
    }
  },
  {
    "username": { "github": "easygoing craftsman" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-02-09T05:04:28.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-02-10T10:54:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId305",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5396#issuecomment-1034775043",
          "body": "https://github.com/marketplace/actions/issues-translator\nWe Are The World ❤🌍\nhttps://www.youtube.com/watch?v=mIqhl0rH0Wc",
          "repo": "https://github.com/vuejs/core",
          "title": "한글로 물어봐도 되나요?",
          "parent_url": "https://github.com/vuejs/core/issues/5396"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-02-10T09:10:12.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId306",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5396",
          "body": "What problem does this feature solve?\n이슈는 다국어를 허용 하나요?\nWhat does the proposed API look like?\n이슈 다국어 지원에 대한 문의",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "한글로 물어봐도 되나요?"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-09T05:17:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId307",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5383#issuecomment-1033361140",
          "body": "I don't have an idea to test this ... help",
          "repo": "https://github.com/vuejs/core",
          "title": "feat(runtime-core): add 'debug' composition api",
          "parent_url": "https://github.com/vuejs/core/pull/5383"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-09T05:16:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId308",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5383",
          "body": "This debug function is a helper for watching states in the vue devtool (It runs only in dev mode)",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "feat(runtime-core): add 'debug' composition api"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-02-09T05:04:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId309",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/bichikim/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "easygoing craftsman" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Korea" },
      "bio": { "github": "I love Javascript." }
    }
  },
  {
    "username": { "github": "fantastic trainer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-03-07T03:39:50.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-03-10T04:33:27.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId310",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5558#issuecomment-1063655275",
          "body": "i understand why",
          "repo": "https://github.com/vuejs/core",
          "title": "chore(cleanupEffect): A better method to cleanup effects",
          "parent_url": "https://github.com/vuejs/core/pull/5558"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-03-10T04:30:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId311",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5558",
          "body": "I think we have unnecessary to clean each effect by manually, It will take some time, so why not just make it length to 0?",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore(cleanupEffect): A better method to cleanup effects"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-03-10T04:27:26.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId312",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/SnowingFox/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-03-07T05:30:51.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId313",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5503#issuecomment-1060210621",
          "body": "😅你是什么成分",
          "repo": "https://github.com/vuejs/core",
          "title": "你会写个锤子vuex",
          "parent_url": "https://github.com/vuejs/core/issues/5503"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2022-03-07T03:39:50.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId314",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5532",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore(reactive): using warn()"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "fantastic trainer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "China" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "brave chopkins", "twitter": "jsbaguette" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-24T05:53:13.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-01-24T15:05:30.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId315",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5314#issuecomment-1020195880",
          "body": "Also the event are not working in the react project. Is it a limitation from react ?",
          "repo": "https://github.com/vuejs/core",
          "title": "vue3 + Web component doesn't emit basic custom event",
          "parent_url": "https://github.com/vuejs/core/issues/5314"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-24T14:40:49.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId316",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5313#issuecomment-1020170408",
          "body": "Agree with you. For vue2 I am going to have an issue no ? how can I an make both working good ?",
          "repo": "https://github.com/vuejs/core",
          "title": "web component object as props weird usage doesnt update as it should",
          "parent_url": "https://github.com/vuejs/core/issues/5313"
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-24T13:56:55.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId317",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5313#issuecomment-1020126769",
          "body": "Thank you linus. But if I do that. For other framework like angular or react. They will have to install vue3 right ? Cause it will not work in this case if they don't. Same for vue2 project",
          "repo": "https://github.com/vuejs/core",
          "title": "web component object as props weird usage doesnt update as it should",
          "parent_url": "https://github.com/vuejs/core/issues/5313"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-24T05:57:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId318",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5314",
          "body": "Version\n3.2.29\nReproduction link\ngithub.com\nSteps to reproduce\n\nnpm i && npm run build\ngo to examples folder\ngo to vue2 or vue3 project\nnpm i && npm run serve\ncheck that the click button doesnt send the event as it should\n\nWhat is expected?\nThe event should be send.\nWhat is actually happening?\ndoing nothing\n\nI used defineEmits as define in the doc https://v3.vuejs.org/guide/web-components.html#definecustomelement nothing is working.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "vue3 + Web component doesn't emit basic custom event"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-24T05:53:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId319",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5313",
          "body": "Version\n3.2.29\nReproduction link\ngithub.com\nSteps to reproduce\n\nclone the project\nnpm i && npm run build\ngo to example project\nyou can check App.vue inside vue3 or vue2 project\nnpm i && npm run serve\n\nWhat is expected?\nI can understand for vue2 due to old reactivity that it doens't work properly. But for vue3 with new reactivity even if a data object change it should be able to re render the web component\nWhat is actually happening?\nhave to spread my object for vue2 and vue3 to make it re render my web component {...obj } that looks like an anti pattern to vue3",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "web component object as props weird usage doesnt update as it should"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": {
        "github": "https://github.com/CrowdHQ",
        "twitter": "https://twitter.com/jsbaguette"
      },
      "name": { "github": "brave chopkins" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "canada" },
      "bio": { "github": "JS enthousiast" }
    }
  },
  {
    "username": { "github": "conscientious sailor" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-18T15:27:44.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-01-19T06:47:16.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId320",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5284#issuecomment-1016134504",
          "body": "@lidlanca\nThank for the replay and solution it work\nBut i think that the cast not need to be by default  is different behavior\nAlso the documented  in not clear \"Vue can automatically  convert...\" mybe \"Vue automatically try to convert...\"",
          "repo": "https://github.com/vuejs/core",
          "title": "Behavior change v-model  on input type number cast value to number by defualt",
          "parent_url": "https://github.com/vuejs/core/issues/5284"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-01-18T22:28:18.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId321",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/eliran-positive/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-01-18T22:01:39.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId322",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5284",
          "body": "Version\n3.2.26\nReproduction link\njsfiddle.net/8vqaotbx/1/\nSteps to reproduce\ncreate input element type number\nthe value cast to number type\nOn Vue version 2 it not do it by defualt , it is big chage i have big project that expected the value return is string\nWhat is expected?\nMybe can add to core modifier numeric that not cast the value to number.\nOr add flag that Vue not do it by defualt\nWhat is actually happening?\nv-model cast value of input number to number type\n\n\n  \n    \n      core/packages/runtime-dom/src/directives/vModel.ts\n    \n    \n         Line 52\n      in\n      9c304bf\n    \n  \n  \n    \n\n        \n          \n           const castToNumber =",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Behavior change v-model  on input type number cast value to number by defualt"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-18T15:27:44.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId323",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5283",
          "body": "On Vue 3 input type number cast to number by defualt\nCan add to core modifier numeric that not cast the value\n\n  \n    \n      core/packages/runtime-dom/src/directives/vModel.ts\n    \n    \n         Line 52\n      in\n      9c304bf\n    \n  \n  \n    \n\n        \n          \n           const castToNumber =",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Add modifier numeric for input type number"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "conscientious sailor" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "independent coder" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-01-11T02:30:10.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issues-closed",
        "timestamp": "2022-02-16T16:39:46.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId324",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5438",
          "body": "Version\n3.2.31\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\n\nchange the v-model value and emit update:modelValue event in the child component.\nThe value doesn't change in the father component.\n\nWhat is expected?\nWhen change the v-model value in child component, the value should change in the father component.\nWhat is actually happening?\nThe value of v-model variable in the father component doesn't change.\n\nThis bug doesn't appear in setup script. This bug can only be reproduced when the father component uses setup option.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "v-model for component doesn't work as expected."
        }
      },
      {
        "type": "issue-comment",
        "timestamp": "2022-01-18T01:38:19.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId325",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5238#issuecomment-1014996952",
          "body": "animation-iteration-count only works if the element stays in the DOM. Vue removes the element on animationend event, which fires after each iteration. Supporting this property is out of scope for Vue.\n\nThat's incorrect. animationend event only be fired after the last iteration has completed. If Vue removes the element on animationend event, then animation-iteration-count should work as expected.",
          "repo": "https://github.com/vuejs/core",
          "title": "animation-iteration-count has no effect",
          "parent_url": "https://github.com/vuejs/core/issues/5238"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-14T08:30:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId326",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5259",
          "body": "Version\n3.2.26\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nConsider the two pieces of code as below:\n<script>\n  export default {\n    data(){\n       return {\n        msg:\"data\"\n      };\n    },\n    setup(){\n      var obj = {\n        msg:\"setup\"\n      };\n      return obj\n    }\n  }\n</script>\n\n<template>\n  <h1>{{ msg }}</h1>\n</template>\nand\n<script>\n  export default {\n    data(){\n       return {\n        msg:\"data\"\n      };\n    },\n    setup(){\n      // The only difference from the first piece of code.\n      return {\n        msg:\"setup\"\n      }\n    }\n  }\n</script>\n\n<template>\n  <h1>{{ msg }}</h1>\n</template>\nWhat is expected?\nThe two pieces of code should behave exactly the same. Both render the msg from setup, which would be \"setup\".\nWhat is actually happening?\nThe first code would render \"data\". The second code would render \"setup\". It's wired.\n\nIs it a bug or did I miss something? This inconsistent behavior only happens in SFC.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "Behavior inconsistent in SFC"
        }
      },
      {
        "type": "issues-closed",
        "timestamp": "2022-01-11T02:30:10.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId327",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5238",
          "body": "Version\n3.2.26\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\nuse animation-iteration-count in style to make the animation run multiple times.\nWhat is expected?\nThe animation should run multiple times.\nWhat is actually happening?\nThe animation only runs once.\n\nThe animationend event is never triggered.",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "animation-iteration-count has no effect"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "isHireable": { "github": false },
      "name": { "github": "independent coder" },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "compassionate trainer", "twitter": "T28_tatsuya" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 9,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-11T12:38:03.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2021-11-15T16:11:48.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId328",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4946#issuecomment-969067726",
          "body": "@posva Thank you for your comment.\nI understood that toNumber() has a migration concern.\nWhat do you think of the idea of defining toNumber() in apiCustomElement.ts to improve the behavior of parsing without worrying about compatibility?",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(shared): Parse string value including a leading number as string value",
          "parent_url": "https://github.com/vuejs/core/pull/4946"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-11-15T05:47:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId329",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4946",
          "body": "Motivation\ndefineCustomElement uses toNumber to parse the attribute value and check if the value is number or not.\nCurrently, toNumber uses parseFloat and returns  number value if parseFloat does not return a NaN.\nHowever, parseFloat does not parse strictly, values including chars other than numbers will also be parsed as Number.\nAccording to MDN, it is better to use Number() for strict parsing, so I created this PR.\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\nChanges\n\nparse a value using Number(value)\n\nplayground\nconst toNumber_current = (val: any): any => {\n  const n = parseFloat(val)\n  return isNaN(n) ? val : n\n}\n\nconst toNumber_pr = (value: any): any => {\n  const parsedValue = Number(value)\n  return isNaN(parsedValue) ? value : parsedValue\n}\n\nconsole.log(toNumber_current(100)); // 100\nconsole.log(toNumber_current(100.001)); // 100.001 \nconsole.log(toNumber_current(\"100\")); // 100\nconsole.log(toNumber_current(\"100.001\")); // 100.001 \nconsole.log(toNumber_current(\"100-string\")); // 100 <= (as-is) input value is string value, but output is number value.\n\nconsole.log(toNumber_pr(100)); // 100\nconsole.log(toNumber_pr(100.001)); // 100.001\nconsole.log(toNumber_pr(\"100\")); // 100\nconsole.log(toNumber_pr(\"100.001\")); // 100.001\nconsole.log(toNumber_pr(\"100-string\")); // \"100-string\" <= (to-be) output also is string value.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(shared): Parse string value including a leading number as string value"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-08-11T13:33:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId330",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4309",
          "body": "Motivation\ndefineCustomElements is supporting SFC having style tag, but nested SFC's styles are not applied.\nEven if SFC tools import nested SFCs in custom element mode and each SFCs have styles as property,_applyStyles is received root SFC's style only and nested SFCs' styles are ignored.\nI think it's commonly that a SFC has some smaller SFCs.\nChanges\napiCustomElement.ts\n\nadd private method _getStylesRecursively\n\nWhen a SFC has nested components, a SFC has components property.\nWhen a SFC has styles, a SFC imported by SFC tools of custom element mode  has styles property.\n-_getStylesRecursively read component recursively using each components properties and read styles property if a component has.\nAll read styles are pushed to an array and _getStylesRecursively returns the array.\n\n\nProvide all styles including nested component's styles to _applyStyles in connectedCallback (_resolveDef).\n\ncustomElement.spec.ts\n\nadd test case (test('should attach styles recursively to shadow dom'))",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "feat(runtime-dom): Apply nested component styles when using defineCustomElements"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-08-11T12:38:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId331",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/TatsuyaYamamoto/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": {
        "github": "https://github.com/CrowdHQ",
        "twitter": "https://twitter.com/T28_tatsuya"
      },
      "name": { "github": "compassionate trainer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Tokyo, Japan." },
      "bio": { "github": "👨‍💻 @line Front-end Engineer, 💖 LoveLive!" }
    }
  },
  {
    "username": { "github": "exuberant marketer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-12-07T07:20:56.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-13T06:51:05.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId332",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5097",
          "body": "both of these repos are archived, and pointed to the new one.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "docs: update readme"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-07T08:09:36.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId333",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5067",
          "body": "For now, it's hard for new users to find out where to contribute to the playground.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "feat(sfc-playground): add github link"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-07T07:43:43.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId334",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5066",
          "body": "By default it opens the browser's 'save web page' dialog, which is annoying, because this shortcut is about 'save code change' in most code editors. And also since it's auto-save by default, so I think it can just be ignore.\n\nmaybe I should commit this to @vue/repl?",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "feat(sfc-playground): prevent ctrl+s default behavior"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-12-07T07:20:56.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId335",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/wxsms/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "exuberant marketer" },
      "isHireable": { "github": true },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Zhuhai, China" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "loving buyer", "twitter": "antcatel" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-03-10T13:35:30.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issue-comment",
        "timestamp": "2022-03-14T10:14:24.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId336",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5580#issuecomment-1066602504",
          "body": "This is caused by IME composition as stated in the documentation here : https://vuejs.org/guide/essentials/forms.html#text (see Note about IME).\nA workaround is to listen for @input event to manually update your ref. This is because non-ascii keyboards (also gboard for autocorrect?) hold the change event until character composition has finished (you can see it because what you're typing in underlined)",
          "repo": "https://github.com/vuejs/core",
          "title": "v-model in input and textarea forms doen't work correctly on several mobile devices",
          "parent_url": "https://github.com/vuejs/core/issues/5580"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-03-10T14:21:45.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId337",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5564",
          "body": "Fix missing reserved prop ref_key in SSR code output. (fix #5563)",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "Fix: missing reserved props `ref_key` & `ref_for` (fix #5563)"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-03-10T14:06:54.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId338",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/paraboul/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "issues-opened",
        "timestamp": "2022-03-10T13:35:30.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId339",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5563",
          "body": "Version\n3.2.31\nReproduction link\nsfc.vuejs.org/\nSteps to reproduce\n\nCreate a SFC with a single root node.\nAssign a template ref to that root node\nrender app with \"renderToString()\"\nThe output generated code  has a \"ref_key\" property.\n\nWhat is expected?\nThe generated HTML should not contains any internal property used by the code generator\nWhat is actually happening?\nThe generated HTML contains a \"ref_key\" property\n\nThis only happen if the SFC has a single node where the template ref is assigned.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "SSR leaks internal properties in the rendered output"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ", "twitter": "https://twitter.com/antcatel" },
      "name": { "github": "loving buyer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "France" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "hard working" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 9,
    "organisation": "crowd.dev",
    "joinedAt": "2021-07-27T20:27:20.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2021-10-12T17:59:23.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId340",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4647#issuecomment-941242948",
          "body": "This PR has been waiting for three weeks, could someone look at this please? It blocks the Vue 3 migration for the Wikimedia Foundation (Wikipedia and related websites)",
          "repo": "https://github.com/vuejs/core",
          "title": "fix: fix transition-group processing of whitespace nodes",
          "parent_url": "https://github.com/vuejs/core/pull/4647"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-09-21T22:46:31.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId341",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4647",
          "body": "fixes #4621\nfixes #4622",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix: fix transition-group processing of whitespace nodes"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-07-29T04:17:46.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId342",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4210",
          "body": "Vue 2 did this, but this functionality was quietly removed\nfrom Vue 3 as a side effect of 3c60d40.\nCloses #3944.",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix(shared): support custom .toString() in text interpolation again"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-07-27T20:27:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId343",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4200",
          "body": "The vue-compat package was added after #2857 ensured that every package\nhas a LICENSE file",
          "repo": "https://github.com/vuejs/core",
          "state": "merged",
          "title": "fix: Add LICENSE file for vue-compat (#2650)"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "hard working" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "San Francisco, CA" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "smart priscilla" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-12-28T07:23:56.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "fork",
        "timestamp": "2022-01-22T05:27:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId344",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/pomeloneo/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2021-12-28T08:07:59.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId345",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5175#issuecomment-1001927834",
          "body": "operation error 😂\nclose this pr\nopen the pr",
          "repo": "https://github.com/vuejs/core",
          "title": "fix(runtime-core): the same function (argument to onMounted) reference should be called",
          "parent_url": "https://github.com/vuejs/core/pull/5175"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2021-12-28T08:06:11.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId346",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5176",
          "body": "Fix #4861\nAfter reading the comments on this issue, two members thought it might not be a bug\nBut one member tagged it as a bug\nSo I think this issue is officially recognized as a bug\nThe code to fix it is very simple\nI'll talk about the idea of fixing it and ask others to help me see if what I think is correct\nIf you pass a new function to unMounted every time, then there is no problem\nBecause the target that injectHook's argument is new every time\nOnly if the functions passed to unMounted are all the same function reference, the injectHook closure comes in with the old target\nSo if target.isMounted and target.isUnmounted are both true, then can be considered to continue at this point",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "fix(runtime-core): the same function (argument to onMounted) reference should be called"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-28T07:23:56.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId347",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5175",
          "body": "Fix 4861\nAfter reading the comments on this issue, two members thought it might not be a bug\nBut one member tagged it as a bug\nSo I think this issue is officially recognized as a bug\nThe code to fix it is very simple\nI'll talk about the idea of fixing it and ask others to help me see if what I think is correct\nIf you pass a new function to unMounted every time, then there is no problem\nBecause the target that injectHook's argument is new every time\nOnly if the functions passed to unMounted are all the same function reference, the injectHook closure comes in with the old target\nSo if target.isMounted and target.isUnmounted are both true, then can be considered to continue at this point",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "fix(runtime-core): the same function (argument to onMounted) reference should be called"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "smart priscilla" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "Beijing" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "agreeable trainer" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-08-09T08:58:19.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-09T15:57:20.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId348",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5350#issuecomment-1033915111",
          "body": "@yyx990803  Do you have a minute to review this PR ? thks.",
          "repo": "https://github.com/vuejs/core",
          "title": "test: replace missing branch with main and pnpm",
          "parent_url": "https://github.com/vuejs/core/pull/5350"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-01T14:30:02.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId349",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5350",
          "body": "Replace missing branch with main and pnpm because master and sync branches are deleted.\nSigned-off-by: pengjie 37610029@qq.com",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "test: replace missing branch with main and pnpm"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-02-01T12:52:14.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId350",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/JayFate/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-08-09T08:58:19.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId351",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4279",
          "body": "Signed-off-by: JayFate 37610029@qq.com",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "refactor(reactivity): rm useless code"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "agreeable trainer" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "excellent emily" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2022-02-13T07:26:28.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "issues-opened",
        "timestamp": "2022-03-03T10:39:03.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId352",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/issues/5510",
          "body": "Version\n3.2.31\nReproduction link\nhttps://github.com/vuejs/core\nSteps to reproduce\nvscode debug\n\nWhat is expected?\nTest passed\nWhat is actually happening?\n/Applications/code/github/core/node_modules/.bin/jest:2\nbasedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\,/,g')\")\n^^^^^^^\nSyntaxError: missing ) after argument list\n\n\nVS Code Version: 1.64\nOS Version: macOS big sur 11.4\nOS chip: Apple M1\nnode Version: 16.13.1\n\nRepair scheme：#5435",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": " vscode debug: caused by node run shell error"
        }
      },
      {
        "type": "pull_request-comment",
        "timestamp": "2022-02-27T06:53:22.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 3,
        "sourceId": "#sampleDataSourceId353",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5435#issuecomment-1053257879",
          "body": "@LinusBorg  @yyx990803   Please look over here. It's been a while",
          "repo": "https://github.com/vuejs/core",
          "title": "workflow: Fix vscode debug caused by node run shell",
          "parent_url": "https://github.com/vuejs/core/pull/5435"
        }
      },
      {
        "type": "pull_request-opened",
        "timestamp": "2022-02-16T02:30:42.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId354",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5435",
          "body": "environment：\n\nVS Code Version: 1.64\nOS Version: macOS big sur 11.4\nOS chip: Apple M1\nnode Version: 16.13.1\n\nUse the original launch json debugger:\n\nThis fails because VS Code's node debugger cannot debug shell scripts. The reason is that pnpm is used for installation node_modules/.bin/jest is a shell file, so the error in the figure above is reported.vscode-issues\nI work fine in the config, but i didn't test other systems.",
          "repo": "https://github.com/vuejs/core",
          "state": "open",
          "title": "workflow: Fix vscode debug caused by node run shell"
        }
      },
      {
        "type": "fork",
        "timestamp": "2022-02-13T07:26:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId355",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/hengshanMWC/core",
          "name": "core",
          "repo": "https://github.com/vuejs/core"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "excellent emily" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": "中国" },
      "bio": { "github": null }
    }
  },
  {
    "username": { "github": "romantic plornish" },
    "info": {},
    "email": "team@crowd.dev",
    "score": 10,
    "organisation": "crowd.dev",
    "joinedAt": "2021-09-30T03:53:40.000Z",
    "importHash": null,
    "tagsArray": [null],
    "activities": [
      {
        "type": "pull_request-closed",
        "timestamp": "2021-12-07T09:24:28.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId356",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/5069",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "refactor(shared): isDefined util"
        }
      },
      {
        "type": "fork",
        "timestamp": "2021-12-07T07:29:48.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId357",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/bigyifeng/vue-next",
          "name": "vue-next",
          "repo": "https://github.com/vuejs/core"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-10-11T06:48:13.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId358",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4782",
          "body": "I don't know if I'm right. Ignore me if I'm wrong",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore: simplified code"
        }
      },
      {
        "type": "pull_request-closed",
        "timestamp": "2021-09-30T03:53:40.000Z",
        "platform": "github",
        "isKeyAction": true,
        "score": 4,
        "sourceId": "#sampleDataSourceId359",
        "importHash": null,
        "parentId": null,
        "attributes": {
          "url": "https://github.com/vuejs/core/pull/4705",
          "body": "",
          "repo": "https://github.com/vuejs/core",
          "state": "closed",
          "title": "chore: delete invalid log"
        }
      }
    ],
    "reach": { "total": -1 },
    "tags": [],
    "noMerge": [],
    "toMerge": [],
    "attributes": {
      "url": { "github": "https://github.com/CrowdHQ" },
      "name": { "github": "romantic plornish" },
      "isHireable": { "github": false },
      "websiteUrl": { "github": "https://crowd.dev" },
      "location": { "github": null },
      "bio": { "github": "coding..." }
    }
  }
]
