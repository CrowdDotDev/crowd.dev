name = "chat/threads"
version = "1.0.0"

"""
Get Threads
Retrieve paginated list of threads
"""
usecase GetThreads {
    input  {
        """
        Server
        Representation of a server. Can be guild or server, depending on the provider capability.
        """
        server! string!
	}

    result {
        """
        Threads
        List of retrieved threads
        """
        threads [Thread]

        """
        Rate Limit
        Rate limit details.
        """
        rateLimit RateLimit
    }

	error Error

    example Successful {
        input {
            server = 'server_id'
        }

        result {
            threads = [
                {
                    id = '1'
                    createdAt = 1546167104
                    channel = 'random'
                },
                {
                    id = '2'
                    createdAt = 1546167105
                    channel = 'random'
                }
            ]
        }
    }

    example Failed {
        input {
            server = 'not-existing-server'
        }

        error {
            title = 'server_not_found'
        }
    }
}

model Thread {
	"""
	Id
	Unique identifier of the thread
	"""
    id! string!

	"""
	Created At
	UNIX timestamp (e.g. 1095379198.75) when the thread was created
	"""
	createdAt! number!

    """
    Channel
    Unique identifier of the channel where the thread is located
    """
    channel! string!

    """
    Archive At
    UNIX timestamp (e.g. 1095379198.75) when will be the thread archived
    """
    archiveAt number!

	"""
	Name
	Name of retrieved thread
	"""
    name string

    """
    Num Of Members
    Number of members in retrieved thread
    """
    numOfMembers number
}   

model Error {
	"""
	Title
	A short, human-readable summary of the problem type.
	"""
	title!

	"""
    Detail
	A human-readable explanation specific to this occurrence of the problem.
	"""
	detail

	"""
	Rate Limit
	Rate limit details.
	"""
	rateLimit RateLimit
}

model RateLimit {
	"""
	Bucket
	Different parts of API may have different rate limits.
	Bucket identifies to which part of API the rate limits apply.
	"""
	bucket string

	"""
	Total Requests
	Total requests available in the time window.
	"""
	totalRequests number

	"""
	Remaining Requests
	Remaining requests available in the time window.
	"""
	remainingRequests number

	"""
	Remaining Requests available in percents
	Remaining requests available in the time window in percents.
	"""
	remainingRequestsPercentage number

	"""
	Reset Timestamp
	Timestamp when the rate limits will reset (in Unix Timestamp format).
	"""
	resetTimestamp number

	"""
	Reset After
	Number of seconds until reset of rate limit
	"""
	resetAfter number

	"""
	Retry After
	Number of seconds until user can retry the request
	"""
	retryAfter number
}
