openapi: 3.0.0
info:
  title: CM API Docs
  version: 1.0.0
  description: API endpoints for LFX Community Data Platform application

servers:
  - url: https://cm.lfx.dev/api/v1
    description: LFX CM Production

tags:
  - name: Member Organizations API
    description: API endpoints for managing work history organizations, including creating, reading, updating, and deleting organization relationships for profiles.
  - name: Member Affiliations API
    description: API endpoints for managing project affiliations, including listing and bulk updating affiliation relationships within a profile.

security:
  - BearerAuth: []

paths:
  /member/{memberId}/organization:
    get:
      security:
        - BearerAuth: []
      tags:
        - Member Organizations API
      summary: List Work History Organizations
      description: Retrieve a list of organizations for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
        '404':
          description: Member not found

    post:
      security:
        - BearerAuth: []
      tags:
        - Member Organizations API
      summary: Create Work History Organization
      description: Create a new organization for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - organizationId
                - source
              properties:
                organizationId:
                  type: string
                  example: '550e8400-e29b-41d4-a716-446655440000'
                  description: Organization ID
                source:
                  type: string
                  enum: ['ui', 'email-domain', 'enrichment', 'github']
                  example: 'ui'
                  description: Data source. For manual updates, always use 'ui'
                title:
                  type: string
                  example: 'Software Engineer'
                  description: Member role within the organization
                dateStart:
                  type: string
                  format: date-time
                  example: '2023-01-01T00:00:00.000Z'
                  description: Organization role start date
                dateEnd:
                  type: string
                  format: date-time
                  example: '2024-01-01T00:00:00.000Z'
                  description: Organization role end date
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
        '404':
          description: Member not found

  /member/{memberId}/organization/{workHistoryId}:
    patch:
      security:
        - BearerAuth: []
      tags:
        - Member Organizations API
      summary: Update Work History Organization
      description: Update an existing organization for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: workHistoryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - workHistoryId
                - source
              properties:
                id:
                  type: string
                  example: '550e8400-e29b-41d4-a716-446655440000'
                  description: Work experience ID
                organizationId:
                  type: string
                  example: '550e8400-e29b-41d4-a716-446655440000'
                  description: Organization ID
                source:
                  type: string
                  enum: ['ui', 'email-domain', 'enrichment', 'github']
                  example: 'ui'
                  description: Data source. For manual updates, always use 'ui'
                title:
                  type: string
                  example: 'Software Engineer'
                  description: Member role within the organization
                dateStart:
                  type: string
                  format: date-time
                  example: '2023-01-01T00:00:00.000Z'
                  description: Organization role start date
                dateEnd:
                  type: string
                  format: date-time
                  example: '2024-01-01T00:00:00.000Z'
                  description: Organization role end date
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
        '404':
          description: Organization or member not found

    delete:
      security:
        - BearerAuth: []
      tags:
        - Member Organizations API
      summary: Delete Work History Organization
      description: Delete an organization for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
        - name: workHistoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '404':
          description: Organization or member not found

  /member/{memberId}/affiliation:
    get:
      security:
        - BearerAuth: []
      tags:
        - Member Affiliations API
      summary: List Project Affiliations
      description: Retrieve a list of project affiliations for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Affiliation'
        '400':
          description: Bad request
        '404':
          description: Member not found

    patch:
      security:
        - BearerAuth: []
      tags:
        - Member Affiliations API
      summary: Update Multiple Project Affiliations
      description: Bulk update project affiliations for a specific profile
      parameters:
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - affiliations
              properties:
                affiliations:
                  type: array
                  items:
                    type: object
                    required:
                      - organizationId
                      - segmentId
                    properties:
                      organizationId:
                        type: string
                        description: Organization ID associated with this affiliation
                      segmentId:
                        type: string
                        description: ID of the segment
                      dateEnd:
                        type: string
                        format: date-time
                        description: End date of the affiliation
                      dateStart:
                        type: string
                        format: date-time
                        description: Start date of the affiliation
      responses:
        '200':
          description: Affiliations updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Affiliation'
        '400':
          description: Bad request
        '404':
          description: Member not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from LFX authentication service

  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Unique identifier for the organization
        displayName:
          type: string
          example: 'The Linux Foundation'
          description: Display name of the organization
        logo:
          type: string
          example: 'https://avatars.githubusercontent.com/u/1040002?v=4'
          description: URL of the organization's logo
        memberOrganizations:
          type: array
          items:
            $ref: '#/components/schemas/MemberOrganization'

    MemberOrganization:
      type: object
      properties:
        id:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Unique identifier for the organization
        organizationId:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Organization ID associated with this affiliation
        dateEnd:
          type: string
          example: '2024-01-01T00:00:00.000Z'
          format: date-time
          description: End date of the affiliation
        dateStart:
          type: string
          example: '2023-01-01T00:00:00.000Z'
          format: date-time
          description: Start date of the affiliation
        memberId:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Member ID associated with this affiliation
        source:
          type: string
          example: 'ui'
          description: Data source. For manual updates, always use 'ui'
        title:
          type: string
          example: 'Software Engineer'
          description: Member role within the organization

    Affiliation:
      type: object
      properties:
        id:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Unique identifier for the affiliation
        organizationId:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: Organization ID associated with this affiliation
        organizationLogo:
          type: string
          example: 'https://avatars.githubusercontent.com/u/1040002?v=4'
          description: URL of the organization's logo
        organizationName:
          type: string
          example: 'The Linux Foundation'
          description: Name of the organization
        segmentId:
          type: string
          example: '550e8400-e29b-41d4-a716-446655440000'
          description: ID of the segment
        segmentName:
          type: string
          example: 'Kubernetes'
          description: Name of the segment
        segmentParentName:
          type: string
          example: 'Cloud Native Computing Foundation'
          description: Name of the parent segment
        segmentSlug:
          type: string
          example: 'kubernetes'
          description: Slug identifier for the segment
        dateStart:
          type: string
          example: '2023-01-01T00:00:00.000Z'
          format: date-time
          description: Start date of the affiliation
        dateEnd:
          type: string
          example: '2024-01-01T00:00:00.000Z'
          format: date-time
          description: End date of the affiliation
