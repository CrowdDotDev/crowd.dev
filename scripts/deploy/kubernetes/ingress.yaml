---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  labels:
    name: ingress
    force-update: 'true' # allows force update when changing something else
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - app.getsphere.dev
        - nango.getsphere.dev
      secretName: letsencrypt-issuer
  rules:
    - host: app.getsphere.dev
      http:
        paths:
          - path: /search(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: search-engine-svc
                port:
                  number: 7700
          - path: /cjs(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: cubejs-svc
                port:
                  number: 4000
          - path: /api(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: api-svc
                port:
                  number: 8080
          - path: /app(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-svc
                port:
                  number: 8081
          - path: /()(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-svc
                port:
                  number: 8081
          - path: /webhooks(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: webhook-api-svc
                port:
                  number: 8082
    - host: nango.getsphere.dev
      http:
        paths:
          - path: /()(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: nango-svc
                port:
                  number: 3003

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-private
  labels:
    name: ingress-private
    force-update: 'true' # allows force update when changing something else
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - search.getsphere.dev
        - temporal.getsphere.dev
        - grafana.getsphere.dev
      secretName: letsencrypt-issuer-private
  rules:
    - host: search.getsphere.dev
      http:
        paths:
          - path: /()(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: search-dashboard-svc
                port:
                  number: 5601
    - host: temporal.getsphere.dev
      http:
        paths:
          - path: /()(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: temporal-svc
                port:
                  number: 8233

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
data:
  logLevel: debug
