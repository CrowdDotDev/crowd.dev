FROM node:16-alpine as builder

RUN apk add --update --no-cache bash

WORKDIR /usr/crowd/app

# build libraries
COPY ./services/scripts ./services/scripts
COPY ./services/libs ./services/libs
RUN cd services/scripts && ./install_lib_packages.sh && ./build_libs.sh && ./clear_lib_packages.sh

FROM node:16-alpine as release

RUN apk add --update --no-cache bash

WORKDIR /usr/crowd/app

ARG INSTALL_DEV_DEPENDENCIES="false"

COPY ./services/scripts ./services/scripts
COPY --from=builder /usr/crowd/app/services/libs/ ./services/libs/
RUN if [ "$INSTALL_DEV_DEPENDENCIES" = "false" ]; then export NPM_I_ENV_OPTS="--omit=dev"; fi && cd services/scripts && ./install_lib_packages.sh ${NPM_I_ENV_OPTS}

COPY ./services/apps/webhook_api/package.json ./services/apps/webhook_api/package-lock.json ./services/apps/webhook_api/tsconfig.json  ./services/apps/webhook_api/
COPY ./services/apps/webhook_api/config ./services/apps/webhook_api/config
COPY ./services/apps/webhook_api/src ./services/apps/webhook_api/src

RUN if [ "$INSTALL_DEV_DEPENDENCIES" = "false" ]; then export NPM_I_ENV_OPTS="--omit=dev"; fi && cd services/apps/webhook_api && npm ci ${NPM_I_ENV_OPTS}

RUN npm cache clean --force
