version: '3.1'

services:
  cubejs:
    image: cubejs/cube
    restart: always
    ports:
      - '4000:4000'
      - '3001:3000'
    volumes:
      - '../backend/src/cubejs:/cube/conf'
    environment:
      - CUBEJS_DEV_MODE=true
      - CUBEJS_DB_HOST=db
      - CUBEJS_DB_PORT=5432
      - CUBEJS_DB_NAME=crowd-web
      - CUBEJS_DB_USER=postgres
      - CUBEJS_DB_PASS=example
      - CUBEJS_DB_TYPE=postgres
      - CUBEJS_API_SECRET=137ea167812145c6d77452a58d7dd29b
      - CUBEJS_EXTERNAL_DEFAULT=true
      - CUBEJS_SCHEDULED_REFRESH_DEFAULT=true
    networks:
      - crowd-bridge

  db:
    image: postgres:13.6-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=crowd-web
    ports:
      - 5432:5432
    volumes:
      - pgdata-dev:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-d', 'crowd-web']
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - crowd-bridge

  search-engine:
    image: getmeili/meilisearch:v0.27.2
    restart: always
    ports:
      - 7700:7700
    volumes:
      - search-dev:/data.ms
    networks:
      - crowd-bridge

  # s3:
  #   image: scireum/s3-ninja:8.0.0
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - s3-dev:/home/sirius/data
  #   networks:
  #     - crowd-bridge

  sqs:
    build:
      context: scaffold/sqs
    restart: always
    ports:
      - 9324:9324
      - 9325:9325
    networks:
      - crowd-bridge

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./scaffold/nginx/templates:/etc/nginx/templates
      - ./scaffold/nginx/ssl:/etc/nginx/ssl
    ports:
      - '443:443'
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=443
    networks:
      - crowd-bridge

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    ports:
      - 6333:6333
    networks:
      - crowd-bridge

  redis:
    build:
      context: scaffold/redis
    command: 'redis-server /redis.conf --requirepass crowdtest'
    restart: always
    volumes:
      - redis-dev:/data
    ports:
      - 6379:6379
    networks:
      - crowd-bridge

  pizzly:
    image: crowddotdev/pizzly-server:1
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NANGO_DB_HOST=db
      - NANGO_DB_PORT=5432
      - NANGO_DB_NAME=crowd-web
      - NANGO_DB_USER=postgres
      - NANGO_DB_PASSWORD=example
      - PIZZLY_SECRET_KEY=424242
      - PIZZLY_PUBLISHABLE_KEY=424242
    ports:
      - '3003:3003'
    networks:
      - crowd-bridge

  unleash-db:
    image: postgres:13.6-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=crowd-unleash
    ports:
      - 5431:5432
    volumes:
      - pgdata-unleash-dev:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-d', 'crowd-unleash']
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - crowd-bridge

  # default user credentials: admin:unleash4all
  unleash:
    image: unleashorg/unleash-server:latest
    restart: always
    depends_on:
      unleash-db:
        condition: service_healthy
    environment:
      - DATABASE_HOST=unleash-db
      - DATABASE_PORT=5432
      - DATABASE_NAME=crowd-unleash
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=example
      - DATABASE_SSL=false
    ports:
      - '4242:4242'
    networks:
      - crowd-bridge

networks:
  crowd-bridge:
    external: true

volumes:
  pgdata-dev:
  pgdata-unleash-dev:
  search-dev:
  s3-dev:
  redis-dev:
