DESCRIPTION >
    - `securityInsightsEvaluationAssessments` contains detailed security assessment results for individual requirements.
    - Replicated from Postgres - stores granular security assessment data linked to security evaluations.
    - Provides detailed breakdown of security requirement assessments within broader security evaluations.
    - `id` is the primary key identifier for the security assessment record.
    - `securityInsightsEvaluationId` links to the parent security evaluation this assessment belongs to (empty string if not linked).
    - `insightsProjectId` links to the insights project being assessed (empty string if not associated).
    - `insightsProjectSlug` is the URL-friendly identifier for the project (empty string if not set).
    - `repo` is the repository URL being assessed (empty string if not applicable).
    - `requirementId` identifies the specific security requirement being assessed (empty string if not specified).
    - `applicability` is an array of contexts where this requirement applies (empty array if not specified).
    - `description` provides details about the security requirement (empty string if not provided).
    - `result` contains the assessment result (pass, fail, warning, etc., empty string if not completed).
    - `message` provides details about the assessment result (empty string if no message).
    - `stepsExecuted` indicates the number of assessment steps that were executed (UInt8, 0 default).
    - `runDuration` contains the time taken to complete the assessment (empty string if not measured).
    - `recommendation` contains the recommended action or guidance for addressing the assessment result (empty string if not provided).
    - `start` contains the start timestamp for the assessment (required string).
    - `end` contains the end timestamp for the assessment (optional string, empty if not provided).
    - `value` contains any additional value data from the assessment (empty string if not provided).
    - `changes` contains any changes data from the assessment (empty string if not provided).
    - `createdAt` and `updatedAt` are standard timestamp fields for record lifecycle tracking.

TAGS "Security insights widget"

SCHEMA >
    `id` String `json:$.record.id`,
    `securityInsightsEvaluationId` String `json:$.record.securityInsightsEvaluationId` DEFAULT '',
    `insightsProjectId` String `json:$.record.insightsProjectId` DEFAULT '',
    `insightsProjectSlug` String `json:$.record.insightsProjectSlug` DEFAULT '',
    `repo` String `json:$.record.repo` DEFAULT '',
    `requirementId` String `json:$.record.requirementId` DEFAULT '',
    `applicability` Array(String) `json:$.record.applicability[:]` DEFAULT [],
    `description` String `json:$.record.description` DEFAULT '',
    `result` String `json:$.record.result` DEFAULT '',
    `message` String `json:$.record.message` DEFAULT '',
    `stepsExecuted` UInt8 `json:$.record.stepsExecuted` DEFAULT 0,
    `runDuration` String `json:$.record.runDuration` DEFAULT '',
    `recommendation` Nullable(String) `json:$.record.recommendation`,
    `start` String `json:$.record.start` DEFAULT '',
    `end` Nullable(String) `json:$.record.end`,
    `value` Nullable(String) `json:$.record.value`,
    `changes` Nullable(String) `json:$.record.changes`,
    `createdAt` DateTime64(3) `json:$.record.createdAt`,
    `updatedAt` DateTime64(3) `json:$.record.updatedAt`

ENGINE ReplacingMergeTree
ENGINE_SORTING_KEY insightsProjectSlug, repo, requirementId
ENGINE_VER updatedAt
