DESCRIPTION >
    - `activityRelations_deduplicated_cleaned_ds.datasource` contains deduplicated and cleaned activity relation data.
    - It also has denormalized non-relationship data so for almost all reporting use cases this datasource should be used.
    - Activity types that contain commit information are as follows: `approved-commit`, `influenced-commit`, `resolved-commit`, `informed-commit`, `tested-commit`, `reviewed-commit`, `reported-commit`, `pull_request-comment`, `signed-off-commit`, `co-authored-commit`, `pull_request-assigned`, `pull_request-review-requested`, `pull_request-opened`, `pull_request-review-thread-comment`, `pull_request-merged`, `pull_request-reviewed`, `committed-commit`, `authored-commit`, `pull_request-closed`, ``
    - `activityId` column uuid primary key of the activity.
    - `createdAt column is the system timestamp when the record was created.
    - `updatedAt` column is the system timestamp when the record was last updated.
    - `memberId` column is the ID of the member who performed the activity. Joins to `members_sorted.datasource`'s `id` field.
    - `objectMemberId` column is the ID of the member who is the target of the activity (e.g. review assigned to, pr assigned to). Joins to `members_sorted.datasource`'s `id` field.
    - `objectMemberUsername` column is the username of the objectMemberId, denormalized for convenience.
    - `organizationId` column is the ID of the organization the activity is affiliated with.
    - `platform` column indicates the platform where the activity took place (e.g. github, discord).
    - `segmentId` column indicates the subproject id the activity belongs to.
    - `username` column is the username of the member who performed the activity (denormalized).
    - `sourceId` column is the original ID from the source platform identifying the activity.
    - `type` column defines the kind of activity (e.g. authored_commit, message, pull_request-reviewed).
    - `timestamp` column is the original timestamp of the activity from the source.
    - `sourceParentId` column is the ID of the parent object in the source system (e.g. PR number, comment thread).
    - `channel` column is the name of the channel where the activity occurred. For code-related activities, this contains the full repository URL; for other types such as messages, it contains the name of the message channel (e.g. Slack or Discord channel name).
    - `sentimentScore` column is a numeric score between 0 and 100 representing message sentiment.
    - `gitInsertions` column shows how many lines of code were added (only for commit activities, is empty for rest).
    - `gitDeletions` column shows how many lines of code were deleted. (only for commit activities, is empty for rest)
    - `isContribution` column is a boolean (0/1) indicating if the activity is considered a contribution.
    - `pullRequestReviewState` column shows the state of a PR review. Only related to type = `pull_request-reviewed` activities. Possible values: `COMMENTED`, `APPROVED`, `CHANGES_REQUESTED`, `DISMISSED`.
    - `gitChangedLines` column is the total number of inserted + deleted lines of code.
    - `gitChangedLinesBucket` column groups gitChangedLines into predefined buckets for aggregation.
    - `organizationCountryCode` column is the denormalized ISO country code of the organization the activity is affiliated with
    - `organizationName` column is the denormalized display name of the organization the activity is affiliated with

SCHEMA >
    `activityId` String,
    `conversationId` String,
    `createdAt` DateTime64(3),
    `updatedAt` DateTime64(3),
    `memberId` String,
    `objectMemberId` String,
    `objectMemberUsername` String,
    `organizationId` String,
    `parentId` String,
    `platform` LowCardinality(String),
    `segmentId` String,
    `username` String,
    `sourceId` String,
    `type` LowCardinality(String),
    `timestamp` DateTime64(3),
    `sourceParentId` String,
    `channel` String,
    `sentimentScore` Int8,
    `gitInsertions` UInt32,
    `gitDeletions` UInt32,
    `score` Int8,
    `isContribution` UInt8,
    `pullRequestReviewState` LowCardinality(String),
    `gitChangedLines` UInt64,
    `gitChangedLinesBucket` String,
    `organizationCountryCode` LowCardinality(String),
    `organizationName` String

ENGINE MergeTree
ENGINE_PARTITION_KEY toYear(timestamp)
ENGINE_SORTING_KEY segmentId, timestamp, type, platform, memberId, organizationId
