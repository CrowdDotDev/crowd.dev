DESCRIPTION >
    - `activities_filtered_retention.pipe` is a specialized variant of `activities_filtered` designed specifically for retention rate calculations.
    - **Key difference from `activities_filtered.pipe`:** Extends the time range to include data from one period BEFORE the specified startDate to enable retention comparisons.
    - The period extension is determined by the `granularity` parameter: daily includes startDate - 1 day, weekly includes startDate - 7 days, monthly includes startDate - 1 month, etc.
    - This time extension ensures retention rate calculations have the necessary baseline data from the preceding period for comparing distinct member activity for the first given period.
    - Primary use case: providing data foundation for member retention analysis and cohort studies.
    - Parameters:
    - `project`: Inherited from `segments_filtered`, project slug (e.g., 'k8s', 'tensorflow')
    - `repos`: Inherited from `segments_filtered`, array of repository URLs for filtering
    - `startDate`: Optional DateTime filter, automatically extended backwards by one granularity period
    - `endDate`: Optional DateTime filter for activities before timestamp (e.g., '2024-12-31 23:59:59')
    - `repos`: Optional array of repository URLs (e.g., ['https://github.com/kubernetes/kubernetes'])
    - `platform`: Optional string filter for source platform (e.g., 'github', 'discord', 'slack')
    - `activity_type`: Optional string filter for single activity type (e.g., 'authored-commit')
    - `activity_types`: Optional array of activity types (e.g., ['authored-commit', 'co-authored-commit'])
    - `onlyContributions`: Optional boolean, defaults to 1 (contributions only), set to 0 for all activities
    - `granularity`: Required string for time aggregation and period extension ('daily', 'weekly', 'monthly', 'quarterly', 'yearly')
    - Response: `id` (activityId), `timestamp`, `type`, `platform`, `memberId`, `organizationId`, `segmentId`.

NODE activities_filtered_by_timestamp_and_channel
SQL >
    %
    SELECT activityId as id, timestamp, type, platform, memberId, organizationId, segmentId
    FROM activityRelations_deduplicated_cleaned_ds a
    where
        segmentId = (SELECT segmentId FROM segments_filtered)
        {% if defined(startDate) %}
            AND a.timestamp
            > {% if defined(granularity) and granularity == "daily" %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
                - INTERVAL 1 DAY
            {% elif defined(granularity) and granularity == "weekly" %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
                - INTERVAL 7 DAY
            {% elif defined(granularity) and granularity == "monthly" %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
                - INTERVAL 1 MONTH
            {% elif defined(granularity) and granularity == "quarterly" %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
                - INTERVAL 3 MONTH
            {% elif defined(granularity) and granularity == "yearly" %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
                - INTERVAL 1 YEAR
            {% else %}
                {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
            {% end %}
        {% end %}
        {% if defined(endDate) %}
            AND a.timestamp
            < {{ DateTime(endDate, description="Filter activity timestamp before", required=False) }}
        {% end %}
        {% if defined(repos) %}
            AND a.channel
            IN {{ Array(repos, 'String', description="Filter activity repo list", required=False) }}
        {% end %}
        {% if defined(platform) %}
            AND a.platform
            = {{ String(platform, description="Filter activity platform", required=False) }}
        {% end %}
        {% if not defined(onlyContributions) or (
            defined(onlyContributions) and onlyContributions == 1
        ) %} AND a.isContribution {% end %}
        {% if defined(activity_type) %}
            AND a.type = {{ String(activity_type, description="Filter activity type", required=False) }}
        {% end %}
