DESCRIPTION >
    - `collections_list.pipe` serves the collections page with pagination, sorting, and enriched collection data.
    - Supports both count mode (`count=true`) and data mode for paginated collection listings with featured projects.
    - Enriches collections with software value, contributor counts, and featured projects arrays for comprehensive display.
    - Provides flexible sorting by collection fields with special handling for starred collections.
    - Uses `collections_filtered` for consistent collection filtering and search capabilities.
    - Primary use case: powering the main collections directory page with sortable, searchable collection listings.
    - Parameters:
    - `search`: Optional string for searching collections (inherited from `collections_filtered`)
    - `count`: Optional boolean, when true returns collection count instead of collection data
    - `orderByField`: Optional string specifying sort field, defaults to 'name'. Available fields: 'id', 'name', 'slug', 'description', 'projectCount', 'starred'
    - `orderByDirection`: Optional string ('asc' or 'desc'), defaults to 'asc'
    - `pageSize`: Optional integer for result limit, defaults to 10
    - `page`: Optional integer for pagination offset calculation, defaults to 0
    - Response:
    - Count mode (`count=true`): `count` (total number of collections)
    - Data mode (default): `id`, `name`, `slug`, `description`, `projectCount`, `starred`, `softwareValue`, `contributorCount`, `featuredProjects` array

TAGS "API", "Collections", "Pagination", "Sorting"

NODE collections_paginated
SQL >
    %
    SELECT
        collections_filtered.id,
        collections_filtered.name,
        collections_filtered.slug,
        collections_filtered.description,
        collections_filtered.projectCount,
        collections_filtered.starred
    FROM collections_filtered
    order by
        {{
            column(
                String(orderByField, "name", description="Order by collection field.", required=False)
            )
        }}
        {% if String(
            orderByDirection,
            'asc',
            description="Order by direction. ASC or DESC",
            required=False,
        ) == 'asc' or String(
            orderByDirection,
            'asc',
            description="Order by direction. ASC or DESC",
            required=False,
        ) == 'ASC' %} ASC
        {% else %} DESC
        {% end %},
        projectCount DESC
    LIMIT {{ Int32(pageSize, 10) }}
    OFFSET {{ Int32(page, 0) * Int32(pageSize, 10) }}

NODE collections_featured_projects
SQL >
    SELECT collectionsInsightsProjects.collectionId, insightsProjects_filtered.*
    from insightsProjects_filtered
    join
        collectionsInsightsProjects final
        on collectionsInsightsProjects.insightsProjectId = insightsProjects_filtered.id
    where
        (collectionsInsightsProjects.collectionId in (select id from collections_paginated))
        and collectionsInsightsProjects.starred

NODE collections_list_software_value
SQL >
    SELECT
        collectionId,
        coalesce(sum(softwareValue), 0) as "softwareValue",
        coalesce(sum(contributorCount), 0) as "contributorCount"
    FROM segments_aggregates_with_ids_datasource
    WHERE collectionId != ''
    GROUP BY collectionId

NODE merging_fields_together
SQL >
    %
    {% if Boolean(count, false) %} SELECT count(collections_filtered.id) from collections_filtered
    {% else %}
        SELECT
            collections_paginated.id as id,
            collections_paginated.name as name,
            collections_paginated.slug as slug,
            collections_paginated.description as description,
            collections_paginated.projectCount as "projectCount",
            collections_paginated.starred as starred,
            collections_list_software_value.softwareValue as softwareValue,
            collections_list_software_value.contributorCount as contributorCount,
            arrayFilter(
                x -> x['name'] != '',
                groupArray(
                    map(
                        'name',
                        toString(collections_featured_projects.name),
                        'slug',
                        toString(collections_featured_projects.slug),
                        'logo',
                        toString(collections_featured_projects.logo)
                    )
                )
            ) AS featuredProjects
        FROM collections_paginated
        LEFT JOIN
            collections_featured_projects
            ON collections_featured_projects.collectionId = collections_paginated.id
        LEFT JOIN
            collections_list_software_value
            ON collections_list_software_value.collectionId = collections_paginated.id
        GROUP BY
            collections_paginated.id as id,
            collections_paginated.name as name,
            collections_paginated.slug as slug,
            collections_paginated.description as description,
            collections_paginated.projectCount as "projectCount",
            collections_paginated.starred as starred,
            collections_list_software_value.softwareValue as softwareValue,
            collections_list_software_value.contributorCount as contributorCount
        order by
            {{
                column(
                    String(
                        orderByField, "name", description="Order by collection field.", required=False
                    )
                )
            }}
            {% if String(
                orderByDirection,
                'asc',
                description="Order by direction. ASC or DESC",
                required=False,
            ) == 'asc' or String(
                orderByDirection,
                'asc',
                description="Order by direction. ASC or DESC",
                required=False,
            ) == 'ASC' %} ASC
            {% else %}
                DESC
                {% if String(
                    orderByField,
                    'starred',
                    description="When starred sorting is selected, also sort by projectCount.",
                    required=False,
                ) == 'starred' %}, projectCount DESC
                {% end %}
            {% end %}
    {% end %}
