DESCRIPTION >
    Provides filters for projects. Merges collection slug from associated collections. Merges segment aggregates from segmentsAggregatedMV

TAGS "Widget"

NODE collection_info
SQL >
    SELECT cip.insightsProjectId, c.slug AS "collectionSlug"
    FROM collectionsInsightsProjects cip FINAL
    JOIN collections c ON c.id = cip.collectionId

NODE insightsProjects_filtered_integrations_deduplicated
SQL >
    SELECT platform, segmentId FROM integrations FINAL

NODE insightsProjects_filtered_segment_id_mapping
SQL >
    SELECT id, segmentId from insightsProjects FINAL

NODE insightsProjects_filtered_connected_platforms
SQL >
    SELECT id, groupUniqArray(platform) AS connectedPlatforms
    FROM insightsProjects_filtered_segment_id_mapping
    JOIN insightsProjects_filtered_integrations_deduplicated USING (segmentId)
    GROUP BY id

NODE insightsProjects_filtered_activities_commit
SQL >
    SELECT timestamp, segmentId
    FROM activities_with_relations_sorted_deduplicated_ds
    WHERE type = 'authored-commit'

NODE insightsProjects_filtered_first_commit_by_project
SQL >
    SELECT maping.id AS id, minOrNull(ac.timestamp) AS firstCommit
    FROM insightsProjects_filtered_segment_id_mapping AS maping
    LEFT JOIN insightsProjects_filtered_activities_commit AS ac ON maping.segmentId = ac.segmentId
    GROUP BY maping.id
    HAVING firstCommit IS NOT NULL AND firstCommit > toDateTime('1970-01-01')

NODE insightsProjects_filtered_1
SQL >
    %
    SELECT
        insightsProjects.id as id,
        insightsProjects.name,
        insightsProjects.slug,
        insightsProjects.description,
        insightsProjects.logoUrl as logo,
        insightsProjects.repositories,
        insightsProjects.isLF,
        insightsProjects.widgets,
        insightsProjects.keywords,
        insightsProjects.website,
        insightsProjects.linkedin,
        insightsProjects.github,
        insightsProjects.twitter,
        coalesce(countDistinctMerge(segmentsAggregatedMV.organizationCount), 0) as "organizationCount",
        coalesce(countDistinctMerge(segmentsAggregatedMV.contributorCount), 0) as "contributorCount"
        {% if defined(details) and details == "true" %}
            ,
            insightsProjects_filtered_connected_platforms.connectedPlatforms,
            insightsProjects_filtered_first_commit_by_project.firstCommit
        {% end %}
    FROM insightsProjects FINAL
    left join collection_info on collection_info.insightsProjectId = insightsProjects.id
    left join segmentsAggregatedMV on segmentsAggregatedMV.segmentId = insightsProjects.segmentId
    {% if defined(details) and details == "true" %}
        left join insightsProjects_filtered_connected_platforms using (id)
        left join insightsProjects_filtered_first_commit_by_project using (id)
    {% end %}
    where
        insightsProjects.enabled = 1
        {% if defined(slug) %}
            AND insightsProjects.slug
            = {{ String(slug, description="Filter collection by slug", required=False) }}
        {% end %}
        {% if defined(search) %}
            AND insightsProjects.name
            ilike '%'
            || {{
                String(
                    search,
                    description="Search collection open ended wildcard using slug",
                    required=False,
                )
            }}
            || '%'
        {% end %}
        {% if defined(collectionSlug) %}
            AND collection_info.collectionSlug
            = {{ String(collectionSlug, description="Filter collection by slug", required=False) }}
        {% end %}
        {% if defined(isLF) %} AND insightsProjects.isLF = {{ Boolean(isLF) }} {% end %}
    group by
        insightsProjects.id,
        insightsProjects.name,
        insightsProjects.slug,
        insightsProjects.description,
        insightsProjects.logoUrl,
        insightsProjects.repositories,
        insightsProjects.isLF,
        insightsProjects.widgets,
        insightsProjects.keywords,
        insightsProjects.website,
        insightsProjects.linkedin,
        insightsProjects.github,
        insightsProjects.twitter
        {% if defined(details) and details == "true" %}
            ,
            insightsProjects_filtered_connected_platforms.connectedPlatforms,
            insightsProjects_filtered_first_commit_by_project.firstCommit
        {% end %}
