TOKEN "category_groups_oss_index_endpoint_read_7394" READ

NODE category_groups_oss_index_agregates
SQL >
    SELECT categoryGroupId, coalesce(sum(contributorCount), 0) as "totalContributors"
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != ''
    GROUP BY categoryGroupId
    ORDER BY totalContributors DESC

NODE category_groups_oss_index_projects_deduplicated
SQL >
    SELECT insightsProjects.id, insightsProjects.name, insightsProjects.logoUrl
    FROM insightsProjects FINAL

NODE category_groups_oss_index_collections_deduplicated
SQL >
    SELECT collections.id, collections.name FROM collections FINAL

NODE category_groups_oss_index_projects_ranked_by_category_group
SQL >
    SELECT
        categoryGroupId,
        projectId,
        sum(contributorCount) AS totalContributors,
        ROW_NUMBER() OVER (PARTITION BY categoryGroupId ORDER BY sum(contributorCount) DESC) AS rn
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != '' AND projectId != ''
    GROUP BY categoryGroupId, projectId

NODE category_groups_oss_index_projects
SQL >
    SELECT
        topProjects.categoryGroupId,
        topProjects.projectId,
        topProjects.totalContributors,
        pd.name AS projectName,
        pd.logoUrl AS projectLogo
    FROM category_groups_oss_index_projects_ranked_by_category_group topProjects
    JOIN category_groups_oss_index_projects_deduplicated pd ON pd.id = topProjects.projectId
    WHERE topProjects.rn <= 5

NODE category_groups_oss_index_collections_ranked_by_category_group
SQL >
    SELECT
        categoryGroupId,
        collectionId,
        sum(contributorCount) AS totalContributors,
        ROW_NUMBER() OVER (PARTITION BY categoryGroupId ORDER BY sum(contributorCount) DESC) AS rn
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != '' AND collectionId != ''
    GROUP BY categoryGroupId, collectionId

NODE category_groups_oss_index_collections
SQL >
    SELECT
        topCollections.categoryGroupId,
        topCollections.collectionId,
        topCollections.totalContributors,
        cd.name AS collectionName
    FROM category_groups_oss_index_collections_ranked_by_category_group topCollections
    JOIN category_groups_oss_index_collections_deduplicated cd ON cd.id = topCollections.collectionId
    WHERE topCollections.rn <= 5

NODE category_groups_oss_index_category_groups_deduplicated
SQL >
    %
    SELECT categoryGroups.id, categoryGroups.name, categoryGroups.type, categoryGroups.slug
    FROM categoryGroups FINAL
    {% if defined(type) %}
        WHERE
            categoryGroups.type
            = {{ String(type, description="Filter category group type", required=False) }}
    {% end %}

NODE category_groups_oss_index_top_collections
SQL >
    SELECT
        categoryGroupId, groupArray((collectionId, totalContributors, collectionName)) AS topCollections
    FROM category_groups_oss_index_collections
    GROUP BY categoryGroupId

NODE category_groups_oss_index_top_projects
SQL >
    SELECT
        categoryGroupId,
        groupArray((projectId, totalContributors, projectName, projectLogo)) AS topProjects
    FROM category_groups_oss_index_projects
    GROUP BY categoryGroupId

NODE category_groups_oss_index_results
SQL >
    SELECT
        a.categoryGroupId as "id",
        cgd.name as "name",
        cgd.type as "type",
        cgd.slug as "slug",
        a.totalContributors,
        c.topCollections,
        p.topProjects
    FROM category_groups_oss_index_agregates a
    LEFT JOIN category_groups_oss_index_top_collections c USING (categoryGroupId)
    LEFT JOIN category_groups_oss_index_top_projects p USING (categoryGroupId)
    JOIN
        category_groups_oss_index_category_groups_deduplicated
        cgd ON category_groups_oss_index_category_groups_deduplicated.id = a.categoryGroupId
