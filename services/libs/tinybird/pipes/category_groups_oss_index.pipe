DESCRIPTION >
    - `category_groups_oss_index.pipe` serves the OSS index category groups API endpoint providing category group listings with enriched metrics.
    - Aggregates category group data with contributor counts, software value, and average scores for OSS directory display.
    - Includes top 5 projects and collections per category group with comprehensive metadata and health scores.
    - Supports filtering by category group type for targeted category group listings.
    - Uses complex joins and aggregations to provide enriched category group data for public OSS index consumption.
    - Primary use case: powering the public OSS index category groups directory with sortable, enriched category data.
    - Parameters:
    - `type`: Optional string to filter by category group type
    - `orderBy`: Optional string for sorting, defaults to 'totalContributors'. Available: 'totalContributors', 'softwareValue', 'avgScore'
    - Response: `id`, `name`, `type`, `slug`, `totalContributors`, `softwareValue`, `avgScore`, `topCollections` (array), `topProjects` (array)

TAGS "API", "OSS index", "Category groups", "Public directory"

NODE category_groups_oss_index_agregates
DESCRIPTION >
    Returns aggregates such as top contributors, software value and average score by category group

SQL >
    %
    SELECT
        categoryGroupId,
        coalesce(sum(contributorCount), 0) as "totalContributors",
        coalesce(sum(softwareValue), 0) as "softwareValue",
        coalesce(avg(score), 0) as "avgScore"
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != ''
    GROUP BY categoryGroupId
    ORDER BY {{ column(orderBy, 'totalContributors') }} DESC

NODE category_groups_oss_index_projects_deduplicated
DESCRIPTION >
    Returns only columns which we need from insights projects table

SQL >
    SELECT id, name, logoUrl, description, healthScore
    FROM insights_projects_populated_ds
    GROUP BY id, name, logoUrl, description, healthScore

NODE category_groups_oss_index_collections_deduplicated
DESCRIPTION >
    Returns only columns we need from collections table

SQL >
    SELECT collections.id, collections.name FROM collections FINAL where isNull (deletedAt)

NODE category_groups_oss_index_projects_ranked_by_category_group
DESCRIPTION >
    Returns projects by category group ranked by sorting parameter

SQL >
    %
    SELECT
        categoryGroupId,
        projectId,
        sum(contributorCount) AS totalContributors,
        sum(softwareValue) AS softwareValue,
        avg(score) AS avgScore,
        ROW_NUMBER() OVER (
            PARTITION BY categoryGroupId ORDER BY {{ column(orderBy, 'totalContributors') }} DESC
        ) AS rn
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != '' AND projectId != ''
    GROUP BY categoryGroupId, projectId

NODE category_groups_oss_index_projects
DESCRIPTION >
    Returns top 5 projects per category group

SQL >
    SELECT
        topProjects.categoryGroupId,
        topProjects.projectId,
        topProjects.totalContributors,
        topProjects.softwareValue,
        topProjects.avgScore,
        pd.name AS projectName,
        pd.logoUrl AS projectLogo,
        pd.description AS description,
        pd.healthScore AS healthScore
    FROM category_groups_oss_index_projects_ranked_by_category_group topProjects
    JOIN category_groups_oss_index_projects_deduplicated pd ON pd.id = topProjects.projectId
    WHERE topProjects.rn <= 5

NODE category_groups_oss_index_collections_ranked_by_category_group
DESCRIPTION >
    Returns collections by category group ranked by sorting parameter

SQL >
    %
    SELECT
        categoryGroupId,
        collectionId,
        sum(contributorCount) AS totalContributors,
        sum(softwareValue) AS softwareValue,
        avg(score) AS avgScore,
        ROW_NUMBER() OVER (
            PARTITION BY categoryGroupId ORDER BY {{ column(orderBy, 'totalContributors') }} DESC
        ) AS rn
    FROM segments_aggregates_with_ids_datasource
    WHERE categoryGroupId != '' AND collectionId != ''
    GROUP BY categoryGroupId, collectionId

NODE category_groups_oss_index_collections
DESCRIPTION >
    Returns top 5 collections by category group

SQL >
    SELECT
        topCollections.categoryGroupId,
        topCollections.collectionId,
        topCollections.totalContributors,
        topCollections.softwareValue,
        topCollections.avgScore,
        cd.name AS collectionName
    FROM category_groups_oss_index_collections_ranked_by_category_group topCollections
    JOIN category_groups_oss_index_collections_deduplicated cd ON cd.id = topCollections.collectionId
    WHERE topCollections.rn <= 5

NODE category_groups_oss_index_category_groups_deduplicated
DESCRIPTION >
    Returns category group details and filters by category group type passed in params

SQL >
    %
    SELECT categoryGroups.id, categoryGroups.name, categoryGroups.type, categoryGroups.slug
    FROM categoryGroups FINAL
    WHERE
        isNull (deletedAt)
        {% if defined(type) %}
            AND categoryGroups.type
            = {{ String(type, description="Filter category group type", required=False) }}
        {% end %}

NODE category_groups_oss_index_top_collections
DESCRIPTION >
    Maps top 5 collections per category group into single row per category group

SQL >
    SELECT
        categoryGroupId,
        groupArray(
            (collectionId, totalContributors, collectionName, softwareValue, avgScore)
        ) AS topCollections
    FROM category_groups_oss_index_collections
    GROUP BY categoryGroupId

NODE category_groups_oss_index_top_projects
DESCRIPTION >
    Maps top 5 projects per category group into single row per category group

SQL >
    SELECT
        categoryGroupId,
        groupArray(
            (
                projectId,
                totalContributors,
                projectName,
                projectLogo,
                softwareValue,
                avgScore,
                healthScore,
                description
            )
        ) AS topProjects
    FROM category_groups_oss_index_projects
    GROUP BY categoryGroupId

NODE category_groups_oss_index_results
SQL >
    SELECT
        a.categoryGroupId as "id",
        cgd.name as "name",
        cgd.type as "type",
        cgd.slug as "slug",
        a.totalContributors,
        a.softwareValue,
        a.avgScore,
        c.topCollections,
        p.topProjects
    FROM category_groups_oss_index_agregates a
    LEFT JOIN category_groups_oss_index_top_collections c USING (categoryGroupId)
    LEFT JOIN category_groups_oss_index_top_projects p USING (categoryGroupId)
    JOIN
        category_groups_oss_index_category_groups_deduplicated
        cgd ON category_groups_oss_index_category_groups_deduplicated.id = a.categoryGroupId
