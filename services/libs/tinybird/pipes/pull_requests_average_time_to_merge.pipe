DESCRIPTION >
    - `pull_requests_average_time_to_merge.pipe` serves the "Development - Average time to merge" widget.
    - **When `granularity` is NOT provided, returns total average time** to merge across all filtered PRs.
    - **When `granularity` is provided, returns time-series data** showing average merge times by time period.
    - Only includes PRs that have been merged (`isNotNull(pra.mergedAt)`) to ensure accurate timing calculations.
    - Primary use case: monitoring overall PR merge efficiency and tracking development velocity trends.
    - Parameters:
    - `project`: Required string for project slug (e.g., 'k8s', 'tensorflow') - inherited from `pull_requests_filtered`
    - `repos`: Optional array of repository URLs for filtering (inherited from `pull_requests_filtered`)
    - `startDate`: Optional DateTime filter for PRs merged after timestamp (e.g., '2024-01-01 00:00:00')
    - `endDate`: Optional DateTime filter for PRs merged before timestamp (e.g., '2024-12-31 23:59:59')
    - `granularity`: Optional string for time aggregation ('daily', 'weekly', 'monthly', 'quarterly', 'yearly')
    - Response:
    - Without granularity: `averageTimeToMergeSeconds` (total average)
    - With granularity: `startDate`, `endDate`, and `averageTimeToMergeSeconds` for each time period

TAGS "Widget", "Pull requests", "Merge time", "Development metrics"

NODE timeseries_generation_for_pr_avg_time_to_merge
SQL >
    %
    {% if defined(granularity) %}
        SELECT
            ds."startDate", ds."endDate", round(avg(pra.mergedInSeconds)) as "averageTimeToMergeSeconds"
        FROM generate_timeseries ds
        LEFT JOIN
            pull_requests_filtered pra
            ON CASE
                WHEN {{ granularity }} = 'daily'
                THEN toDate(pra.mergedAt)
                WHEN {{ granularity }} = 'weekly'
                THEN toStartOfWeek(pra.mergedAt)
                WHEN {{ granularity }} = 'monthly'
                THEN toStartOfMonth(pra.mergedAt)
                WHEN {{ granularity }} = 'quarterly'
                THEN toStartOfQuarter(pra.mergedAt)
                WHEN {{ granularity }} = 'yearly'
                THEN toStartOfYear(pra.mergedAt)
            END
            = ds."startDate"
        where
            isNotNull(pra.mergedAt)
            {% if defined(startDate) %}
                AND pra.mergedAt > parseDateTimeBestEffort(
                    {{
                        DateTime(
                            startDate,
                            description="Filter pull request merged at after",
                            required=False,
                        )
                    }}
                )
            {% end %}
            {% if defined(endDate) %}
                AND pra.mergedAt < parseDateTimeBestEffort(
                    {{
                        DateTime(
                            endDate,
                            description="Filter pull request merged at before",
                            required=False,
                        )
                    }}
                )
            {% end %}
        GROUP BY ds."startDate", "endDate"
        ORDER BY ds."startDate" ASC
    {% else %} select 1
    {% end %}

NODE pr_avg_time_to_merge_combined
SQL >
    %
    {% if not defined(granularity) %}
        SELECT round(avg(pra.mergedInSeconds)) as "averageTimeToMergeSeconds"
        FROM pull_requests_filtered pra
        where
            isNotNull(pra.mergedAt)
            {% if defined(startDate) %}
                AND pra.mergedAt
                > {{
                    DateTime(
                        startDate, description="Filter pull request merged at after", required=False
                    )
                }}
            {% end %}
            {% if defined(endDate) %}
                AND pra.mergedAt
                < {{
                    DateTime(
                        endDate, description="Filter pull request merged at before", required=False
                    )
                }}
            {% end %}
    {% else %} select * from timeseries_generation_for_pr_avg_time_to_merge
    {% end %}
