TOKEN "activities_filtered_endpoint_read_8708" READ

TOKEN "raul_dev_access_token" READ

TOKEN "insights-staging-app-token" READ

NODE segments_filtered
SQL >

    %
    SELECT "segmentId" as id, repositories FROM insightsProjects FINAL
    where 1=1
    {% if defined(project) %}
    AND slug = {{String(project, description="Filter by project slug", required=True)}}
    {% else %}
    AND false
    {% end %}  
    {% if defined(repo) %}
    AND has(insightsProjects.repositories, {{String(repo, description="Filter activity repo", required=False)}})
    {% end %}




NODE activities_filtered_by_timestamp_and_channel
SQL >

    %
    SELECT id, type, timestamp, channel, platform FROM activities final
    where 1=1
    {% if defined(startDate) %}
    AND activities.timestamp > {{DateTime(startDate, description="Filter activity timestamp after", required=False)}}
    {% end %}
    {% if defined(endDate) %}
    AND activities.timestamp < {{DateTime(endDate, description="Filter activity timestamp before", required=False)}}
    {% end %}
    {% if defined(repo) %}
    AND activities.channel = {{String(repo, description="Filter activity repo", required=False)}}
    {% else %}
    AND activities.channel in (select arrayJoin(repositories) from segments_filtered)
    {% end %}
    {% if defined(platform) %}
    AND activities.platform = {{String(platform, description="Filter activity platform", required=False)}}
    {% end %}
    {% if not defined (onlyContributions) or (defined(onlyContributions) and onlyContributions ==  1) %}
    AND activities.isContribution
    {% end %}
    {% if defined(activity_type) %}
    AND activities.type = {{String(activity_type, description="Filter activity type", required=False)}}
    {% end %}



NODE activity_relations_filtered
SQL >

    %
    SELECT activities_filtered_by_timestamp_and_channel.id, activities_filtered_by_timestamp_and_channel.timestamp, activities_filtered_by_timestamp_and_channel.type, activities_filtered_by_timestamp_and_channel.platform, activityRelations.memberId, activityRelations.organizationId, activityRelations.segmentId FROM activities_filtered_by_timestamp_and_channel
    join activityRelations final on activityRelations.activityId = activities_filtered_by_timestamp_and_channel.id
    where 1=1
    and activityRelations.memberId in (select id from members where not members.isBot and not members.isTeamMember)
    {% if defined(project) %}
    and activityRelations.segmentId in (select id from segments_filtered)
    {% end %}
  




