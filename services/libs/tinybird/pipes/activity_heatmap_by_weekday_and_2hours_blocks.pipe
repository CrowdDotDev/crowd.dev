DESCRIPTION >
    - `activity_heatmap_by_weekday_and_2hours_blocks.pipe` serves the "Development - Contributions outside work hours" widget showing activity patterns by time.
    - Provides activity counts aggregated by weekday (1-7) and 2-hour time blocks (0-22) to visualize when contributors are most active.
    - Uses `contributions_with_local_time_ds` datasource which contains activities with local timezone conversions for accurate time-based analysis.
    - Returns a complete grid of all weekday/time combinations with zero counts for periods with no activity, ensuring consistent heatmap visualization.
    - Primary use case: identifying contribution patterns outside traditional work hours for community health analysis.
    - Parameters:
    - `project`: Inherited from `segments_filtered`, project slug (e.g., 'k8s', 'tensorflow')
    - `repos`: Inherited from `segments_filtered`, array of repository URLs for filtering
    - `startDate`: Optional DateTime filter for activities after timestamp (e.g., '2024-01-01 00:00:00')
    - `endDate`: Optional DateTime filter for activities before timestamp (e.g., '2024-12-31 23:59:59')
    - `repos`: Optional array of repository URLs (e.g., ['https://github.com/kubernetes/kubernetes'])
    - Response: `weekday` (1-7), `twoHoursBlock` (0, 2, 4...22), and `activityCount` for each time slot combination.

NODE activities_with_local_timestamp
SQL >
    %
    select count(id) as activityCount, weekday, two_hours_block
    from contributions_with_local_time_ds a
    where
        segmentId = (SELECT segmentId FROM segments_filtered)
        {% if defined(startDate) %}
            AND a.timestamp
            > {{ DateTime(startDate, description="Filter activity timestamp after", required=False) }}
        {% end %}
        {% if defined(endDate) %}
            AND a.timestamp
            < {{ DateTime(endDate, description="Filter activity timestamp before", required=False) }}
        {% end %}
        {% if defined(repos) %}
            AND a.channel
            IN {{ Array(repos, 'String', description="Filter activity repo list", required=False) }}
        {% end %}
    group by weekday, two_hours_block

NODE weekday_hours
SQL >
    WITH range(1, 8) AS weekdays, array(8, 10, 12, 14, 16, 18, 20, 22, 0, 2, 4, 6) AS two_hours_blocks
    SELECT arrayJoin(weekdays) AS weekday, arrayJoin(two_hours_blocks) AS two_hours_block

NODE contributions_outside_working_hours_merged
SQL >
    FROM weekday_hours
    LEFT JOIN activities_with_local_timestamp USING (weekday, two_hours_block)
    SELECT weekday, two_hours_block as twoHoursBlock, coalesce(activityCount, 0) AS activityCount
    ORDER BY weekday, two_hours_block
