TOKEN "health_score_merge_lead_time_endpoint_read_5416" READ

NODE health_score_merge_lead_time_score
DESCRIPTION >
    Returns activeContributors for previous quarter per project

SQL >
    %
    SELECT segmentId, round(avg(dateDiff('day', openedAt, mergedAt))) AS mergeLeadTime
    FROM pull_requests_analyzed
    WHERE
        1 = 1
        {% if defined(project) %}
            AND segmentId = (SELECT segmentId FROM segments_filtered)
            {% if defined(repo) %}
                AND channel = {{ String(repo, description="Filter by repository", required=False) }}
            {% end %}
            {% if defined(startDate) %}
                AND timestamp
                > {{ DateTime(startDate, description="Filter after date", required=False) }}
            {% end %}
            {% if defined(endDate) %}
                AND timestamp
                < {{ DateTime(endDate, description="Filter before date", required=False) }}
            {% end %}
        {% else %}
            AND openedAt >= toStartOfDay(now() - toIntervalDay(365))
            AND openedAt < toStartOfDay(now() + toIntervalDay(1))
        {% end %}
    GROUP BY segmentId

NODE health_score_merge_lead_time_repo_score
SQL >
    %
    {% if not defined(project) %}
        SELECT
            segmentId, channel as repo, round(avg(dateDiff('day', openedAt, mergedAt))) AS mergeLeadTime
        FROM pull_requests_analyzed
        WHERE
            openedAt >= toStartOfDay(now() - toIntervalDay(365))
            AND openedAt < toStartOfDay(now() + toIntervalDay(1))
            AND channel != ''
        GROUP BY segmentId, channel
    {% else %} SELECT 1
    {% end %}

NODE health_score_merge_lead_time_union
SQL >
    %
    SELECT segmentId, '' as repo, mergeLeadTime
    FROM health_score_merge_lead_time_score
    {% if not defined(project) %}
        UNION ALL
        SELECT segmentId, repo, mergeLeadTime
        FROM health_score_merge_lead_time_repo_score
    {% end %}

NODE health_score_merge_lead_time_with_benchmark
SQL >
    SELECT
        segmentId,
        repo,
        mergeLeadTime,
        CASE
            WHEN mergeLeadTime >= 30
            THEN 0
            WHEN mergeLeadTime BETWEEN 21 AND 30
            THEN 1
            WHEN mergeLeadTime BETWEEN 15 AND 20
            THEN 2
            WHEN mergeLeadTime BETWEEN 7 AND 14
            THEN 3
            WHEN mergeLeadTime BETWEEN 3 AND 6
            THEN 4
            WHEN mergeLeadTime BETWEEN 0 AND 2
            THEN 5
            ELSE 0
        END AS mergeLeadTimeBenchmark
    FROM health_score_merge_lead_time_union
