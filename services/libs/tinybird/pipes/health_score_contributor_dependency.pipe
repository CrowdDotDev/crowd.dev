NODE health_score_contributor_dependency_contribution_count
SQL >
    %
    SELECT segmentId, memberId, count() AS contributionCount
    FROM activityRelations_deduplicated_cleaned_ds
    WHERE
        1 = 1
        {% if defined(project) %}
            AND segmentId = (SELECT segmentId FROM segments_filtered)
            {% if defined(repos) %}
                AND channel
                IN {{ Array(repos, 'String', description="Filter activity repo list", required=False) }}
            {% end %}
            {% if defined(startDate) %}
                AND timestamp
                > {{ DateTime(startDate, description="Filter after date", required=False) }}
            {% end %}
            {% if defined(endDate) %}
                AND timestamp
                < {{ DateTime(endDate, description="Filter before date", required=False) }}
            {% end %}
        {% else %}
            AND timestamp >= toStartOfDay(now() - INTERVAL 365 DAY)
            AND timestamp < toStartOfDay(now() + INTERVAL 1 DAY)
        {% end %} AND memberId != '' AND isContribution
    GROUP BY segmentId, memberId

NODE health_score_contributor_dependency_contribution_percentage
SQL >
    SELECT
        segmentId,
        memberId,
        contributionCount,
        (
            contributionCount * 100.0 / SUM(contributionCount) OVER (PARTITION BY segmentId)
        ) AS contributionPercentage
    FROM health_score_contributor_dependency_contribution_count

NODE health_score_contributor_dependency_contribution_runnning_total
SQL >
    SELECT
        segmentId,
        memberId,
        contributionCount,
        contributionPercentage,
        SUM(contributionPercentage) OVER (
            PARTITION BY segmentId ORDER BY contributionPercentage DESC, memberId
        ) AS contributionPercentageRunningTotal
    FROM health_score_contributor_dependency_contribution_percentage

NODE health_score_contributor_dependency_score
SQL >
    SELECT
        segmentId,
        count() AS contributorDependencyCount,
        round(sum(contributionPercentage)) AS contributorDependencyPercentage
    FROM health_score_contributor_dependency_contribution_runnning_total
    WHERE contributionPercentageRunningTotal < 51
    GROUP BY segmentId

NODE health_score_contributor_dependency_with_benchmark
SQL >
    SELECT
        segmentId,
        contributorDependencyCount,
        contributorDependencyPercentage,
        CASE
            WHEN contributorDependencyCount BETWEEN 0 AND 1
            THEN 0
            WHEN contributorDependencyCount = 2
            THEN 1
            WHEN contributorDependencyCount BETWEEN 3 AND 4
            THEN 2
            WHEN contributorDependencyCount BETWEEN 5 AND 6
            THEN 3
            WHEN contributorDependencyCount BETWEEN 7 AND 9
            THEN 4
            WHEN contributorDependencyCount > 9
            THEN 5
            ELSE 0
        END AS contributorDependencyBenchmark
    FROM health_score_contributor_dependency_score
