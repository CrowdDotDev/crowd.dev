TOKEN "activities_filtered_historical_cutoff_endpoint_read_5308" READ

NODE activities_filtered_by_timestamp_and_channel
DESCRIPTION >
    only difference between activities_filtered and this pipe is that, this'll count all activities until startDate (so the timerange filter is reverted) it's useful because it'll also support other filters and it'll be mainly used in activitird_cumulative_counts pipe to get the historical total

SQL >

    %
    SELECT id, type, timestamp, channel, platform FROM activities final
    where 1=1
    {% if defined(startDate) %}
    AND activities.timestamp <= {{DateTime(startDate, description="Filter activity timestamp after", required=False)}}
    {% else %}
    AND false
    {% end %}
    {% if defined(repo) %}
    AND activities.channel = {{String(repo, description="Filter activity repo", required=False)}}
    {% end %}
    {% if defined(platform) %}
    AND activities.platform = {{String(platform, description="Filter activity platform", required=False)}}
    {% end %}
    {% if Boolean(onlyContributions, true) %}
    AND activities.isContribution = {{Boolean(onlyContributions, true)}}
    {% end %}
    {% if defined(activity_type) %}
    AND activities.type = {{String(activity_type, description="Filter activity type", required=False)}}
    {% end %}





NODE segments_filtered
SQL >

    %
    SELECT "segmentId" as id FROM insightsProjects FINAL
    {% if defined(project) %}
    where slug = {{String(project, description="Filter by project slug", required=True)}}
    {% end %}  




NODE activity_relations_filtered
SQL >

    %
    SELECT activities_filtered_by_timestamp_and_channel.id, activities_filtered_by_timestamp_and_channel.timestamp, activities_filtered_by_timestamp_and_channel.type, activities_filtered_by_timestamp_and_channel.platform, activityRelations.memberId, activityRelations.organizationId, activityRelations.segmentId FROM activities_filtered_by_timestamp_and_channel
    join activityRelations final on activityRelations.activityId = activities_filtered_by_timestamp_and_channel.id
    where 1=1
    and activityRelations.memberId in (select id from members where not members.isBot and not members.isTeamMember)
    {% if defined(project) %}
    and activityRelations.segmentId in (select id from segments_filtered)
    {% end %}
    order by timestamp desc




