name: Staging Deploy Frontend

on:
  push:
    branches:
      - 'staging/**'
      - feature/ci-cd-staging-C-196
    paths:
      - 'frontend/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  CROWD_CLUSTER: ${{ secrets.STAGING_CLUSTER_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/build-docker-image
        id: image-builder
        with:
          image: frontend

      - name: Set docker image output
        run: echo "IMAGE=${{ steps.image-builder.outputs.image }}" >> $GITHUB_OUTPUT

  build-and-push-dev:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/build-docker-image
        id: image-builder
        with:
          image: frontend-dev

      - name: Set docker image output
        run: echo "IMAGE=${{ steps.image-builder.outputs.image }}" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/deploy-service
        with:
          service: frontend
          image: ${{ needs.build-and-push.outputs.IMAGE }}
          cluster: ${{ env.CROWD_CLUSTER }}

  deploy-dev:
    needs: build-and-push-dev
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/deploy-service
        with:
          service: frontend-dev
          image: ${{ needs.build-and-push-dev.outputs.IMAGE }}
          cluster: ${{ env.CROWD_CLUSTER }}
