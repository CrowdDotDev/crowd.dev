name: LF Staging Deploy Webhook API

on:
  push:
    branches:
      - 'lf-staging/**'
      - 'lf-staging-**'
    paths:
      - 'services/libs/**'
      - 'services/apps/webhook_api/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  CROWD_CLUSTER: ${{ secrets.LF_STAGING_CLUSTER_NAME }}
  CROWD_ROLE_ARN: ${{ secrets.LF_STAGING_CLUSTER_ROLE_ARN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.LF_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.LF_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.LF_AWS_REGION }}
  SLACK_CHANNEL: deploys-lf-staging
  SLACK_WEBHOOK: ${{ secrets.LF_STAGING_SLACK_CHANNEL_HOOK }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.IMAGE }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/build-docker-image
        id: image-builder
        with:
          image: webhook-api

      - name: Set docker image output
        id: image
        run: echo "IMAGE=${{ steps.image-builder.outputs.image }}" >> $GITHUB_OUTPUT

  deploy-webhook-api:
    needs: build-and-push
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: ./.github/actions/deploy-service
        with:
          service: webhook-api
          image: ${{ needs.build-and-push.outputs.image }}
          cluster: ${{ env.CROWD_CLUSTER }}
