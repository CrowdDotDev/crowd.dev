name: Node.js CI

on:
  pull_request:
    paths:
      - 'backend/**'
      - 'services/**'
jobs:
  lint-format:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd .. && corepack enable && pnpm i --frozen-lockfile

      - name: Check linting
        run: pnpm run lint

      - name: Check formatting
        run: pnpm run format-check

      - name: Check typescript
        run: pnpm run tsc-check

  lint-format-services:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./services

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd .. && corepack enable && pnpm i --frozen-lockfile

      - name: Check library linting, format and typescript
        run: ./scripts/lint_libs.sh

      - name: Check app linting, format and typescript
        run: ./scripts/lint_apps.sh

  tests-main:
    needs: lint-format
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd .. && corepack enable && pnpm i --frozen-lockfile

      - name: Run tests
        working-directory: ./backend
        run: SERVICE=test pnpm test -- --testPathIgnorePatterns=serverless

  tests-serverless:
    needs: lint-format
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd .. && corepack enable && pnpm i --frozen-lockfile

      - name: Run tests
        working-directory: ./backend
        run: SERVICE=test pnpm test -- --testPathPattern="serverless\/"
