name: Node.js CI
permissions:
  contents: read

on:
  pull_request:
    paths:
      - 'backend/**'
      - 'services/**'
jobs:
  lint-format:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: cd .. && npm install -g corepack@latest && corepack enable pnpm && pnpm i --frozen-lockfile

      - name: Check linting
        run: pnpm run lint

      - name: Check formatting
        run: pnpm run format-check

      - name: Check typescript
        run: pnpm run tsc-check

  lint-format-services:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./services

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: cd .. && npm install -g corepack@latest && corepack enable pnpm && pnpm i --frozen-lockfile

      - name: Check library linting, format and typescript
        run: ./scripts/lint_libs.sh

      - name: Check app linting, format and typescript
        run: ./scripts/lint_apps.sh

  lint-python-git-integration:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./services/apps/git_integration

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for Python file changes
        id: changes
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "^services/apps/git_integration/.*\.py$"; then
            echo "python_changed=true" >> $GITHUB_OUTPUT
          else
            echo "python_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Install uv
        if: steps.changes.outputs.python_changed == 'true'
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "services/apps/git_integration/uv.lock"

      - name: Set up Python
        if: steps.changes.outputs.python_changed == 'true'
        run: uv python install 3.10

      - name: Install dependencies
        if: steps.changes.outputs.python_changed == 'true'
        run: uv sync --extra dev --frozen

      - name: Check Python linting and formatting
        if: steps.changes.outputs.python_changed == 'true'
        run: |
          uv run ruff check src/ --output-format=github
          uv run ruff format --check src/

      - name: Skip Python checks
        if: steps.changes.outputs.python_changed == 'false'
        run: echo "⏭️ No Python files changed, skipping linting checks"
